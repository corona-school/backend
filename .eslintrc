{
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaVersion": 6,
        "sourceType": "module",
        "project": "./tsconfig.json"
    },
    "plugins": ["@typescript-eslint", "lernfair-lint", "import"],
    "settings": {
        "import/parsers": {
            "@typescript-eslint/parser": [".ts"]
        },
        "import/resolver": {
            "typescript": true,
            "node": true
        }
    },
    "rules": {
        "block-scoped-var": "error",
        "camelcase": "off",
        "comma-dangle": "off",
        "indent": "off",
        "keyword-spacing": [
            "error",
            {
                "after": true
            }
        ],
        "key-spacing": [
            "error",
            {
                "mode": "strict",
                "beforeColon": false,
                "afterColon": true
            }
        ],
        "no-debugger": "error",
        "no-duplicate-case": "error",
        "no-eval": "error",
        "no-extra-bind": "error",
        "no-extra-semi": "error",
        "no-invalid-regexp": "error",
        "no-lonely-if": "warn",
        "no-multi-spaces": "error",
        "no-trailing-spaces": "error",
        "@typescript-eslint/semi": ["error", "always"],
        "space-in-parens": "off",
        "curly": ["error", "all"],
        "comma-spacing": ["error", { "before": false, "after": true }],
        "space-before-blocks": ["error", "always"],
        "block-spacing": ["error", "always"],
        "brace-style": ["error", "1tbs", { "allowSingleLine": true }],
        "max-statements-per-line": ["error", { "max": 1 }],
        "newline-per-chained-call": "off",
        "lernfair-lint/graphql-authorized": "error",
        "lernfair-lint/graphql-deferred-auth": "error",
        "lernfair-lint/graphql-undeferred-impossible": "error",
        "lernfair-lint/graphql-cache": "error",
        "lernfair-lint/prisma-laziness": "error",
        "require-await": "error",
        "import/no-cycle": ["warn"],
        "@typescript-eslint/no-floating-promises": ["error"],
        "@typescript-eslint/no-misused-promises": ["error", { "checksVoidReturn": false }],
        "@typescript-eslint/switch-exhaustiveness-check": "error"
    }
}
