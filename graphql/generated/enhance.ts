import { ClassType } from "type-graphql";
import * as crudResolvers from "./resolvers/crud/resolvers-crud.index";
import * as actionResolvers from "./resolvers/crud/resolvers-actions.index";
import * as relationResolvers from "./resolvers/relations/resolvers.index";
import * as models from "./models";
import * as outputTypes from "./resolvers/outputs";
import * as inputTypes from "./resolvers/inputs";
import * as argsTypes from "./resolvers/crud/args.index";

const crudResolversMap = {
  Bbb_meeting: crudResolvers.Bbb_meetingCrudResolver,
  Concrete_notification: crudResolvers.Concrete_notificationCrudResolver,
  Course: crudResolvers.CourseCrudResolver,
  Course_attendance_log: crudResolvers.Course_attendance_logCrudResolver,
  Course_guest: crudResolvers.Course_guestCrudResolver,
  Course_instructors_student: crudResolvers.Course_instructors_studentCrudResolver,
  Course_participation_certificate: crudResolvers.Course_participation_certificateCrudResolver,
  Course_tag: crudResolvers.Course_tagCrudResolver,
  Course_tags_course_tag: crudResolvers.Course_tags_course_tagCrudResolver,
  Expert_data: crudResolvers.Expert_dataCrudResolver,
  Expert_data_expertise_tags_expertise_tag: crudResolvers.Expert_data_expertise_tags_expertise_tagCrudResolver,
  Expertise_tag: crudResolvers.Expertise_tagCrudResolver,
  Instructor_screening: crudResolvers.Instructor_screeningCrudResolver,
  Jufo_verification_transmission: crudResolvers.Jufo_verification_transmissionCrudResolver,
  Lecture: crudResolvers.LectureCrudResolver,
  Log: crudResolvers.LogCrudResolver,
  Match: crudResolvers.MatchCrudResolver,
  Mentor: crudResolvers.MentorCrudResolver,
  Notification: crudResolvers.NotificationCrudResolver,
  Participation_certificate: crudResolvers.Participation_certificateCrudResolver,
  Project_coaching_screening: crudResolvers.Project_coaching_screeningCrudResolver,
  Project_field_with_grade_restriction: crudResolvers.Project_field_with_grade_restrictionCrudResolver,
  Project_match: crudResolvers.Project_matchCrudResolver,
  Pupil: crudResolvers.PupilCrudResolver,
  Pupil_tutoring_interest_confirmation_request: crudResolvers.Pupil_tutoring_interest_confirmation_requestCrudResolver,
  School: crudResolvers.SchoolCrudResolver,
  Screener: crudResolvers.ScreenerCrudResolver,
  Screening: crudResolvers.ScreeningCrudResolver,
  Student: crudResolvers.StudentCrudResolver,
  Subcourse: crudResolvers.SubcourseCrudResolver,
  Subcourse_instructors_student: crudResolvers.Subcourse_instructors_studentCrudResolver,
  Subcourse_participants_pupil: crudResolvers.Subcourse_participants_pupilCrudResolver,
  Subcourse_waiting_list_pupil: crudResolvers.Subcourse_waiting_list_pupilCrudResolver
};
const relationResolversMap = {
  Course: relationResolvers.CourseRelationsResolver,
  Course_attendance_log: relationResolvers.Course_attendance_logRelationsResolver,
  Course_guest: relationResolvers.Course_guestRelationsResolver,
  Course_instructors_student: relationResolvers.Course_instructors_studentRelationsResolver,
  Course_participation_certificate: relationResolvers.Course_participation_certificateRelationsResolver,
  Course_tag: relationResolvers.Course_tagRelationsResolver,
  Course_tags_course_tag: relationResolvers.Course_tags_course_tagRelationsResolver,
  Expert_data: relationResolvers.Expert_dataRelationsResolver,
  Expert_data_expertise_tags_expertise_tag: relationResolvers.Expert_data_expertise_tags_expertise_tagRelationsResolver,
  Expertise_tag: relationResolvers.Expertise_tagRelationsResolver,
  Instructor_screening: relationResolvers.Instructor_screeningRelationsResolver,
  Jufo_verification_transmission: relationResolvers.Jufo_verification_transmissionRelationsResolver,
  Lecture: relationResolvers.LectureRelationsResolver,
  Match: relationResolvers.MatchRelationsResolver,
  Participation_certificate: relationResolvers.Participation_certificateRelationsResolver,
  Project_coaching_screening: relationResolvers.Project_coaching_screeningRelationsResolver,
  Project_field_with_grade_restriction: relationResolvers.Project_field_with_grade_restrictionRelationsResolver,
  Project_match: relationResolvers.Project_matchRelationsResolver,
  Pupil: relationResolvers.PupilRelationsResolver,
  Pupil_tutoring_interest_confirmation_request: relationResolvers.Pupil_tutoring_interest_confirmation_requestRelationsResolver,
  School: relationResolvers.SchoolRelationsResolver,
  Screener: relationResolvers.ScreenerRelationsResolver,
  Screening: relationResolvers.ScreeningRelationsResolver,
  Student: relationResolvers.StudentRelationsResolver,
  Subcourse: relationResolvers.SubcourseRelationsResolver,
  Subcourse_instructors_student: relationResolvers.Subcourse_instructors_studentRelationsResolver,
  Subcourse_participants_pupil: relationResolvers.Subcourse_participants_pupilRelationsResolver,
  Subcourse_waiting_list_pupil: relationResolvers.Subcourse_waiting_list_pupilRelationsResolver
};
const actionResolversMap = {
  Bbb_meeting: {
    bbb_meeting: actionResolvers.FindUniqueBbb_meetingResolver,
    findFirstBbb_meeting: actionResolvers.FindFirstBbb_meetingResolver,
    bbb_meetings: actionResolvers.FindManyBbb_meetingResolver,
    createBbb_meeting: actionResolvers.CreateBbb_meetingResolver,
    createManyBbb_meeting: actionResolvers.CreateManyBbb_meetingResolver,
    deleteBbb_meeting: actionResolvers.DeleteBbb_meetingResolver,
    updateBbb_meeting: actionResolvers.UpdateBbb_meetingResolver,
    deleteManyBbb_meeting: actionResolvers.DeleteManyBbb_meetingResolver,
    updateManyBbb_meeting: actionResolvers.UpdateManyBbb_meetingResolver,
    upsertBbb_meeting: actionResolvers.UpsertBbb_meetingResolver,
    aggregateBbb_meeting: actionResolvers.AggregateBbb_meetingResolver,
    groupByBbb_meeting: actionResolvers.GroupByBbb_meetingResolver
  },
  Concrete_notification: {
    concrete_notification: actionResolvers.FindUniqueConcrete_notificationResolver,
    findFirstConcrete_notification: actionResolvers.FindFirstConcrete_notificationResolver,
    concrete_notifications: actionResolvers.FindManyConcrete_notificationResolver,
    createConcrete_notification: actionResolvers.CreateConcrete_notificationResolver,
    createManyConcrete_notification: actionResolvers.CreateManyConcrete_notificationResolver,
    deleteConcrete_notification: actionResolvers.DeleteConcrete_notificationResolver,
    updateConcrete_notification: actionResolvers.UpdateConcrete_notificationResolver,
    deleteManyConcrete_notification: actionResolvers.DeleteManyConcrete_notificationResolver,
    updateManyConcrete_notification: actionResolvers.UpdateManyConcrete_notificationResolver,
    upsertConcrete_notification: actionResolvers.UpsertConcrete_notificationResolver,
    aggregateConcrete_notification: actionResolvers.AggregateConcrete_notificationResolver,
    groupByConcrete_notification: actionResolvers.GroupByConcrete_notificationResolver
  },
  Course: {
    course: actionResolvers.FindUniqueCourseResolver,
    findFirstCourse: actionResolvers.FindFirstCourseResolver,
    courses: actionResolvers.FindManyCourseResolver,
    createCourse: actionResolvers.CreateCourseResolver,
    createManyCourse: actionResolvers.CreateManyCourseResolver,
    deleteCourse: actionResolvers.DeleteCourseResolver,
    updateCourse: actionResolvers.UpdateCourseResolver,
    deleteManyCourse: actionResolvers.DeleteManyCourseResolver,
    updateManyCourse: actionResolvers.UpdateManyCourseResolver,
    upsertCourse: actionResolvers.UpsertCourseResolver,
    aggregateCourse: actionResolvers.AggregateCourseResolver,
    groupByCourse: actionResolvers.GroupByCourseResolver
  },
  Course_attendance_log: {
    course_attendance_log: actionResolvers.FindUniqueCourse_attendance_logResolver,
    findFirstCourse_attendance_log: actionResolvers.FindFirstCourse_attendance_logResolver,
    course_attendance_logs: actionResolvers.FindManyCourse_attendance_logResolver,
    createCourse_attendance_log: actionResolvers.CreateCourse_attendance_logResolver,
    createManyCourse_attendance_log: actionResolvers.CreateManyCourse_attendance_logResolver,
    deleteCourse_attendance_log: actionResolvers.DeleteCourse_attendance_logResolver,
    updateCourse_attendance_log: actionResolvers.UpdateCourse_attendance_logResolver,
    deleteManyCourse_attendance_log: actionResolvers.DeleteManyCourse_attendance_logResolver,
    updateManyCourse_attendance_log: actionResolvers.UpdateManyCourse_attendance_logResolver,
    upsertCourse_attendance_log: actionResolvers.UpsertCourse_attendance_logResolver,
    aggregateCourse_attendance_log: actionResolvers.AggregateCourse_attendance_logResolver,
    groupByCourse_attendance_log: actionResolvers.GroupByCourse_attendance_logResolver
  },
  Course_guest: {
    course_guest: actionResolvers.FindUniqueCourse_guestResolver,
    findFirstCourse_guest: actionResolvers.FindFirstCourse_guestResolver,
    course_guests: actionResolvers.FindManyCourse_guestResolver,
    createCourse_guest: actionResolvers.CreateCourse_guestResolver,
    createManyCourse_guest: actionResolvers.CreateManyCourse_guestResolver,
    deleteCourse_guest: actionResolvers.DeleteCourse_guestResolver,
    updateCourse_guest: actionResolvers.UpdateCourse_guestResolver,
    deleteManyCourse_guest: actionResolvers.DeleteManyCourse_guestResolver,
    updateManyCourse_guest: actionResolvers.UpdateManyCourse_guestResolver,
    upsertCourse_guest: actionResolvers.UpsertCourse_guestResolver,
    aggregateCourse_guest: actionResolvers.AggregateCourse_guestResolver,
    groupByCourse_guest: actionResolvers.GroupByCourse_guestResolver
  },
  Course_instructors_student: {
    course_instructors_student: actionResolvers.FindUniqueCourse_instructors_studentResolver,
    findFirstCourse_instructors_student: actionResolvers.FindFirstCourse_instructors_studentResolver,
    course_instructors_students: actionResolvers.FindManyCourse_instructors_studentResolver,
    createCourse_instructors_student: actionResolvers.CreateCourse_instructors_studentResolver,
    createManyCourse_instructors_student: actionResolvers.CreateManyCourse_instructors_studentResolver,
    deleteCourse_instructors_student: actionResolvers.DeleteCourse_instructors_studentResolver,
    updateCourse_instructors_student: actionResolvers.UpdateCourse_instructors_studentResolver,
    deleteManyCourse_instructors_student: actionResolvers.DeleteManyCourse_instructors_studentResolver,
    updateManyCourse_instructors_student: actionResolvers.UpdateManyCourse_instructors_studentResolver,
    upsertCourse_instructors_student: actionResolvers.UpsertCourse_instructors_studentResolver,
    aggregateCourse_instructors_student: actionResolvers.AggregateCourse_instructors_studentResolver,
    groupByCourse_instructors_student: actionResolvers.GroupByCourse_instructors_studentResolver
  },
  Course_participation_certificate: {
    course_participation_certificate: actionResolvers.FindUniqueCourse_participation_certificateResolver,
    findFirstCourse_participation_certificate: actionResolvers.FindFirstCourse_participation_certificateResolver,
    course_participation_certificates: actionResolvers.FindManyCourse_participation_certificateResolver,
    createCourse_participation_certificate: actionResolvers.CreateCourse_participation_certificateResolver,
    createManyCourse_participation_certificate: actionResolvers.CreateManyCourse_participation_certificateResolver,
    deleteCourse_participation_certificate: actionResolvers.DeleteCourse_participation_certificateResolver,
    updateCourse_participation_certificate: actionResolvers.UpdateCourse_participation_certificateResolver,
    deleteManyCourse_participation_certificate: actionResolvers.DeleteManyCourse_participation_certificateResolver,
    updateManyCourse_participation_certificate: actionResolvers.UpdateManyCourse_participation_certificateResolver,
    upsertCourse_participation_certificate: actionResolvers.UpsertCourse_participation_certificateResolver,
    aggregateCourse_participation_certificate: actionResolvers.AggregateCourse_participation_certificateResolver,
    groupByCourse_participation_certificate: actionResolvers.GroupByCourse_participation_certificateResolver
  },
  Course_tag: {
    course_tag: actionResolvers.FindUniqueCourse_tagResolver,
    findFirstCourse_tag: actionResolvers.FindFirstCourse_tagResolver,
    course_tags: actionResolvers.FindManyCourse_tagResolver,
    createCourse_tag: actionResolvers.CreateCourse_tagResolver,
    createManyCourse_tag: actionResolvers.CreateManyCourse_tagResolver,
    deleteCourse_tag: actionResolvers.DeleteCourse_tagResolver,
    updateCourse_tag: actionResolvers.UpdateCourse_tagResolver,
    deleteManyCourse_tag: actionResolvers.DeleteManyCourse_tagResolver,
    updateManyCourse_tag: actionResolvers.UpdateManyCourse_tagResolver,
    upsertCourse_tag: actionResolvers.UpsertCourse_tagResolver,
    aggregateCourse_tag: actionResolvers.AggregateCourse_tagResolver,
    groupByCourse_tag: actionResolvers.GroupByCourse_tagResolver
  },
  Course_tags_course_tag: {
    course_tags_course_tag: actionResolvers.FindUniqueCourse_tags_course_tagResolver,
    findFirstCourse_tags_course_tag: actionResolvers.FindFirstCourse_tags_course_tagResolver,
    course_tags_course_tags: actionResolvers.FindManyCourse_tags_course_tagResolver,
    createCourse_tags_course_tag: actionResolvers.CreateCourse_tags_course_tagResolver,
    createManyCourse_tags_course_tag: actionResolvers.CreateManyCourse_tags_course_tagResolver,
    deleteCourse_tags_course_tag: actionResolvers.DeleteCourse_tags_course_tagResolver,
    updateCourse_tags_course_tag: actionResolvers.UpdateCourse_tags_course_tagResolver,
    deleteManyCourse_tags_course_tag: actionResolvers.DeleteManyCourse_tags_course_tagResolver,
    updateManyCourse_tags_course_tag: actionResolvers.UpdateManyCourse_tags_course_tagResolver,
    upsertCourse_tags_course_tag: actionResolvers.UpsertCourse_tags_course_tagResolver,
    aggregateCourse_tags_course_tag: actionResolvers.AggregateCourse_tags_course_tagResolver,
    groupByCourse_tags_course_tag: actionResolvers.GroupByCourse_tags_course_tagResolver
  },
  Expert_data: {
    findUniqueExpert_data: actionResolvers.FindUniqueExpert_dataResolver,
    findFirstExpert_data: actionResolvers.FindFirstExpert_dataResolver,
    findManyExpert_data: actionResolvers.FindManyExpert_dataResolver,
    createExpert_data: actionResolvers.CreateExpert_dataResolver,
    createManyExpert_data: actionResolvers.CreateManyExpert_dataResolver,
    deleteExpert_data: actionResolvers.DeleteExpert_dataResolver,
    updateExpert_data: actionResolvers.UpdateExpert_dataResolver,
    deleteManyExpert_data: actionResolvers.DeleteManyExpert_dataResolver,
    updateManyExpert_data: actionResolvers.UpdateManyExpert_dataResolver,
    upsertExpert_data: actionResolvers.UpsertExpert_dataResolver,
    aggregateExpert_data: actionResolvers.AggregateExpert_dataResolver,
    groupByExpert_data: actionResolvers.GroupByExpert_dataResolver
  },
  Expert_data_expertise_tags_expertise_tag: {
    expert_data_expertise_tags_expertise_tag: actionResolvers.FindUniqueExpert_data_expertise_tags_expertise_tagResolver,
    findFirstExpert_data_expertise_tags_expertise_tag: actionResolvers.FindFirstExpert_data_expertise_tags_expertise_tagResolver,
    expert_data_expertise_tags_expertise_tags: actionResolvers.FindManyExpert_data_expertise_tags_expertise_tagResolver,
    createExpert_data_expertise_tags_expertise_tag: actionResolvers.CreateExpert_data_expertise_tags_expertise_tagResolver,
    createManyExpert_data_expertise_tags_expertise_tag: actionResolvers.CreateManyExpert_data_expertise_tags_expertise_tagResolver,
    deleteExpert_data_expertise_tags_expertise_tag: actionResolvers.DeleteExpert_data_expertise_tags_expertise_tagResolver,
    updateExpert_data_expertise_tags_expertise_tag: actionResolvers.UpdateExpert_data_expertise_tags_expertise_tagResolver,
    deleteManyExpert_data_expertise_tags_expertise_tag: actionResolvers.DeleteManyExpert_data_expertise_tags_expertise_tagResolver,
    updateManyExpert_data_expertise_tags_expertise_tag: actionResolvers.UpdateManyExpert_data_expertise_tags_expertise_tagResolver,
    upsertExpert_data_expertise_tags_expertise_tag: actionResolvers.UpsertExpert_data_expertise_tags_expertise_tagResolver,
    aggregateExpert_data_expertise_tags_expertise_tag: actionResolvers.AggregateExpert_data_expertise_tags_expertise_tagResolver,
    groupByExpert_data_expertise_tags_expertise_tag: actionResolvers.GroupByExpert_data_expertise_tags_expertise_tagResolver
  },
  Expertise_tag: {
    expertise_tag: actionResolvers.FindUniqueExpertise_tagResolver,
    findFirstExpertise_tag: actionResolvers.FindFirstExpertise_tagResolver,
    expertise_tags: actionResolvers.FindManyExpertise_tagResolver,
    createExpertise_tag: actionResolvers.CreateExpertise_tagResolver,
    createManyExpertise_tag: actionResolvers.CreateManyExpertise_tagResolver,
    deleteExpertise_tag: actionResolvers.DeleteExpertise_tagResolver,
    updateExpertise_tag: actionResolvers.UpdateExpertise_tagResolver,
    deleteManyExpertise_tag: actionResolvers.DeleteManyExpertise_tagResolver,
    updateManyExpertise_tag: actionResolvers.UpdateManyExpertise_tagResolver,
    upsertExpertise_tag: actionResolvers.UpsertExpertise_tagResolver,
    aggregateExpertise_tag: actionResolvers.AggregateExpertise_tagResolver,
    groupByExpertise_tag: actionResolvers.GroupByExpertise_tagResolver
  },
  Instructor_screening: {
    instructor_screening: actionResolvers.FindUniqueInstructor_screeningResolver,
    findFirstInstructor_screening: actionResolvers.FindFirstInstructor_screeningResolver,
    instructor_screenings: actionResolvers.FindManyInstructor_screeningResolver,
    createInstructor_screening: actionResolvers.CreateInstructor_screeningResolver,
    createManyInstructor_screening: actionResolvers.CreateManyInstructor_screeningResolver,
    deleteInstructor_screening: actionResolvers.DeleteInstructor_screeningResolver,
    updateInstructor_screening: actionResolvers.UpdateInstructor_screeningResolver,
    deleteManyInstructor_screening: actionResolvers.DeleteManyInstructor_screeningResolver,
    updateManyInstructor_screening: actionResolvers.UpdateManyInstructor_screeningResolver,
    upsertInstructor_screening: actionResolvers.UpsertInstructor_screeningResolver,
    aggregateInstructor_screening: actionResolvers.AggregateInstructor_screeningResolver,
    groupByInstructor_screening: actionResolvers.GroupByInstructor_screeningResolver
  },
  Jufo_verification_transmission: {
    jufo_verification_transmission: actionResolvers.FindUniqueJufo_verification_transmissionResolver,
    findFirstJufo_verification_transmission: actionResolvers.FindFirstJufo_verification_transmissionResolver,
    jufo_verification_transmissions: actionResolvers.FindManyJufo_verification_transmissionResolver,
    createJufo_verification_transmission: actionResolvers.CreateJufo_verification_transmissionResolver,
    createManyJufo_verification_transmission: actionResolvers.CreateManyJufo_verification_transmissionResolver,
    deleteJufo_verification_transmission: actionResolvers.DeleteJufo_verification_transmissionResolver,
    updateJufo_verification_transmission: actionResolvers.UpdateJufo_verification_transmissionResolver,
    deleteManyJufo_verification_transmission: actionResolvers.DeleteManyJufo_verification_transmissionResolver,
    updateManyJufo_verification_transmission: actionResolvers.UpdateManyJufo_verification_transmissionResolver,
    upsertJufo_verification_transmission: actionResolvers.UpsertJufo_verification_transmissionResolver,
    aggregateJufo_verification_transmission: actionResolvers.AggregateJufo_verification_transmissionResolver,
    groupByJufo_verification_transmission: actionResolvers.GroupByJufo_verification_transmissionResolver
  },
  Lecture: {
    lecture: actionResolvers.FindUniqueLectureResolver,
    findFirstLecture: actionResolvers.FindFirstLectureResolver,
    lectures: actionResolvers.FindManyLectureResolver,
    createLecture: actionResolvers.CreateLectureResolver,
    createManyLecture: actionResolvers.CreateManyLectureResolver,
    deleteLecture: actionResolvers.DeleteLectureResolver,
    updateLecture: actionResolvers.UpdateLectureResolver,
    deleteManyLecture: actionResolvers.DeleteManyLectureResolver,
    updateManyLecture: actionResolvers.UpdateManyLectureResolver,
    upsertLecture: actionResolvers.UpsertLectureResolver,
    aggregateLecture: actionResolvers.AggregateLectureResolver,
    groupByLecture: actionResolvers.GroupByLectureResolver
  },
  Log: {
    log: actionResolvers.FindUniqueLogResolver,
    findFirstLog: actionResolvers.FindFirstLogResolver,
    logs: actionResolvers.FindManyLogResolver,
    createLog: actionResolvers.CreateLogResolver,
    createManyLog: actionResolvers.CreateManyLogResolver,
    deleteLog: actionResolvers.DeleteLogResolver,
    updateLog: actionResolvers.UpdateLogResolver,
    deleteManyLog: actionResolvers.DeleteManyLogResolver,
    updateManyLog: actionResolvers.UpdateManyLogResolver,
    upsertLog: actionResolvers.UpsertLogResolver,
    aggregateLog: actionResolvers.AggregateLogResolver,
    groupByLog: actionResolvers.GroupByLogResolver
  },
  Match: {
    match: actionResolvers.FindUniqueMatchResolver,
    findFirstMatch: actionResolvers.FindFirstMatchResolver,
    matches: actionResolvers.FindManyMatchResolver,
    createMatch: actionResolvers.CreateMatchResolver,
    createManyMatch: actionResolvers.CreateManyMatchResolver,
    deleteMatch: actionResolvers.DeleteMatchResolver,
    updateMatch: actionResolvers.UpdateMatchResolver,
    deleteManyMatch: actionResolvers.DeleteManyMatchResolver,
    updateManyMatch: actionResolvers.UpdateManyMatchResolver,
    upsertMatch: actionResolvers.UpsertMatchResolver,
    aggregateMatch: actionResolvers.AggregateMatchResolver,
    groupByMatch: actionResolvers.GroupByMatchResolver
  },
  Mentor: {
    mentor: actionResolvers.FindUniqueMentorResolver,
    findFirstMentor: actionResolvers.FindFirstMentorResolver,
    mentors: actionResolvers.FindManyMentorResolver,
    createMentor: actionResolvers.CreateMentorResolver,
    createManyMentor: actionResolvers.CreateManyMentorResolver,
    deleteMentor: actionResolvers.DeleteMentorResolver,
    updateMentor: actionResolvers.UpdateMentorResolver,
    deleteManyMentor: actionResolvers.DeleteManyMentorResolver,
    updateManyMentor: actionResolvers.UpdateManyMentorResolver,
    upsertMentor: actionResolvers.UpsertMentorResolver,
    aggregateMentor: actionResolvers.AggregateMentorResolver,
    groupByMentor: actionResolvers.GroupByMentorResolver
  },
  Notification: {
    notification: actionResolvers.FindUniqueNotificationResolver,
    findFirstNotification: actionResolvers.FindFirstNotificationResolver,
    notifications: actionResolvers.FindManyNotificationResolver,
    createNotification: actionResolvers.CreateNotificationResolver,
    createManyNotification: actionResolvers.CreateManyNotificationResolver,
    deleteNotification: actionResolvers.DeleteNotificationResolver,
    updateNotification: actionResolvers.UpdateNotificationResolver,
    deleteManyNotification: actionResolvers.DeleteManyNotificationResolver,
    updateManyNotification: actionResolvers.UpdateManyNotificationResolver,
    upsertNotification: actionResolvers.UpsertNotificationResolver,
    aggregateNotification: actionResolvers.AggregateNotificationResolver,
    groupByNotification: actionResolvers.GroupByNotificationResolver
  },
  Participation_certificate: {
    participation_certificate: actionResolvers.FindUniqueParticipation_certificateResolver,
    findFirstParticipation_certificate: actionResolvers.FindFirstParticipation_certificateResolver,
    participation_certificates: actionResolvers.FindManyParticipation_certificateResolver,
    createParticipation_certificate: actionResolvers.CreateParticipation_certificateResolver,
    createManyParticipation_certificate: actionResolvers.CreateManyParticipation_certificateResolver,
    deleteParticipation_certificate: actionResolvers.DeleteParticipation_certificateResolver,
    updateParticipation_certificate: actionResolvers.UpdateParticipation_certificateResolver,
    deleteManyParticipation_certificate: actionResolvers.DeleteManyParticipation_certificateResolver,
    updateManyParticipation_certificate: actionResolvers.UpdateManyParticipation_certificateResolver,
    upsertParticipation_certificate: actionResolvers.UpsertParticipation_certificateResolver,
    aggregateParticipation_certificate: actionResolvers.AggregateParticipation_certificateResolver,
    groupByParticipation_certificate: actionResolvers.GroupByParticipation_certificateResolver
  },
  Project_coaching_screening: {
    project_coaching_screening: actionResolvers.FindUniqueProject_coaching_screeningResolver,
    findFirstProject_coaching_screening: actionResolvers.FindFirstProject_coaching_screeningResolver,
    project_coaching_screenings: actionResolvers.FindManyProject_coaching_screeningResolver,
    createProject_coaching_screening: actionResolvers.CreateProject_coaching_screeningResolver,
    createManyProject_coaching_screening: actionResolvers.CreateManyProject_coaching_screeningResolver,
    deleteProject_coaching_screening: actionResolvers.DeleteProject_coaching_screeningResolver,
    updateProject_coaching_screening: actionResolvers.UpdateProject_coaching_screeningResolver,
    deleteManyProject_coaching_screening: actionResolvers.DeleteManyProject_coaching_screeningResolver,
    updateManyProject_coaching_screening: actionResolvers.UpdateManyProject_coaching_screeningResolver,
    upsertProject_coaching_screening: actionResolvers.UpsertProject_coaching_screeningResolver,
    aggregateProject_coaching_screening: actionResolvers.AggregateProject_coaching_screeningResolver,
    groupByProject_coaching_screening: actionResolvers.GroupByProject_coaching_screeningResolver
  },
  Project_field_with_grade_restriction: {
    project_field_with_grade_restriction: actionResolvers.FindUniqueProject_field_with_grade_restrictionResolver,
    findFirstProject_field_with_grade_restriction: actionResolvers.FindFirstProject_field_with_grade_restrictionResolver,
    project_field_with_grade_restrictions: actionResolvers.FindManyProject_field_with_grade_restrictionResolver,
    createProject_field_with_grade_restriction: actionResolvers.CreateProject_field_with_grade_restrictionResolver,
    createManyProject_field_with_grade_restriction: actionResolvers.CreateManyProject_field_with_grade_restrictionResolver,
    deleteProject_field_with_grade_restriction: actionResolvers.DeleteProject_field_with_grade_restrictionResolver,
    updateProject_field_with_grade_restriction: actionResolvers.UpdateProject_field_with_grade_restrictionResolver,
    deleteManyProject_field_with_grade_restriction: actionResolvers.DeleteManyProject_field_with_grade_restrictionResolver,
    updateManyProject_field_with_grade_restriction: actionResolvers.UpdateManyProject_field_with_grade_restrictionResolver,
    upsertProject_field_with_grade_restriction: actionResolvers.UpsertProject_field_with_grade_restrictionResolver,
    aggregateProject_field_with_grade_restriction: actionResolvers.AggregateProject_field_with_grade_restrictionResolver,
    groupByProject_field_with_grade_restriction: actionResolvers.GroupByProject_field_with_grade_restrictionResolver
  },
  Project_match: {
    project_match: actionResolvers.FindUniqueProject_matchResolver,
    findFirstProject_match: actionResolvers.FindFirstProject_matchResolver,
    project_matches: actionResolvers.FindManyProject_matchResolver,
    createProject_match: actionResolvers.CreateProject_matchResolver,
    createManyProject_match: actionResolvers.CreateManyProject_matchResolver,
    deleteProject_match: actionResolvers.DeleteProject_matchResolver,
    updateProject_match: actionResolvers.UpdateProject_matchResolver,
    deleteManyProject_match: actionResolvers.DeleteManyProject_matchResolver,
    updateManyProject_match: actionResolvers.UpdateManyProject_matchResolver,
    upsertProject_match: actionResolvers.UpsertProject_matchResolver,
    aggregateProject_match: actionResolvers.AggregateProject_matchResolver,
    groupByProject_match: actionResolvers.GroupByProject_matchResolver
  },
  Pupil: {
    pupil: actionResolvers.FindUniquePupilResolver,
    findFirstPupil: actionResolvers.FindFirstPupilResolver,
    pupils: actionResolvers.FindManyPupilResolver,
    createPupil: actionResolvers.CreatePupilResolver,
    createManyPupil: actionResolvers.CreateManyPupilResolver,
    deletePupil: actionResolvers.DeletePupilResolver,
    updatePupil: actionResolvers.UpdatePupilResolver,
    deleteManyPupil: actionResolvers.DeleteManyPupilResolver,
    updateManyPupil: actionResolvers.UpdateManyPupilResolver,
    upsertPupil: actionResolvers.UpsertPupilResolver,
    aggregatePupil: actionResolvers.AggregatePupilResolver,
    groupByPupil: actionResolvers.GroupByPupilResolver
  },
  Pupil_tutoring_interest_confirmation_request: {
    pupil_tutoring_interest_confirmation_request: actionResolvers.FindUniquePupil_tutoring_interest_confirmation_requestResolver,
    findFirstPupil_tutoring_interest_confirmation_request: actionResolvers.FindFirstPupil_tutoring_interest_confirmation_requestResolver,
    pupil_tutoring_interest_confirmation_requests: actionResolvers.FindManyPupil_tutoring_interest_confirmation_requestResolver,
    createPupil_tutoring_interest_confirmation_request: actionResolvers.CreatePupil_tutoring_interest_confirmation_requestResolver,
    createManyPupil_tutoring_interest_confirmation_request: actionResolvers.CreateManyPupil_tutoring_interest_confirmation_requestResolver,
    deletePupil_tutoring_interest_confirmation_request: actionResolvers.DeletePupil_tutoring_interest_confirmation_requestResolver,
    updatePupil_tutoring_interest_confirmation_request: actionResolvers.UpdatePupil_tutoring_interest_confirmation_requestResolver,
    deleteManyPupil_tutoring_interest_confirmation_request: actionResolvers.DeleteManyPupil_tutoring_interest_confirmation_requestResolver,
    updateManyPupil_tutoring_interest_confirmation_request: actionResolvers.UpdateManyPupil_tutoring_interest_confirmation_requestResolver,
    upsertPupil_tutoring_interest_confirmation_request: actionResolvers.UpsertPupil_tutoring_interest_confirmation_requestResolver,
    aggregatePupil_tutoring_interest_confirmation_request: actionResolvers.AggregatePupil_tutoring_interest_confirmation_requestResolver,
    groupByPupil_tutoring_interest_confirmation_request: actionResolvers.GroupByPupil_tutoring_interest_confirmation_requestResolver
  },
  School: {
    school: actionResolvers.FindUniqueSchoolResolver,
    findFirstSchool: actionResolvers.FindFirstSchoolResolver,
    schools: actionResolvers.FindManySchoolResolver,
    createSchool: actionResolvers.CreateSchoolResolver,
    createManySchool: actionResolvers.CreateManySchoolResolver,
    deleteSchool: actionResolvers.DeleteSchoolResolver,
    updateSchool: actionResolvers.UpdateSchoolResolver,
    deleteManySchool: actionResolvers.DeleteManySchoolResolver,
    updateManySchool: actionResolvers.UpdateManySchoolResolver,
    upsertSchool: actionResolvers.UpsertSchoolResolver,
    aggregateSchool: actionResolvers.AggregateSchoolResolver,
    groupBySchool: actionResolvers.GroupBySchoolResolver
  },
  Screener: {
    screener: actionResolvers.FindUniqueScreenerResolver,
    findFirstScreener: actionResolvers.FindFirstScreenerResolver,
    screeners: actionResolvers.FindManyScreenerResolver,
    createScreener: actionResolvers.CreateScreenerResolver,
    createManyScreener: actionResolvers.CreateManyScreenerResolver,
    deleteScreener: actionResolvers.DeleteScreenerResolver,
    updateScreener: actionResolvers.UpdateScreenerResolver,
    deleteManyScreener: actionResolvers.DeleteManyScreenerResolver,
    updateManyScreener: actionResolvers.UpdateManyScreenerResolver,
    upsertScreener: actionResolvers.UpsertScreenerResolver,
    aggregateScreener: actionResolvers.AggregateScreenerResolver,
    groupByScreener: actionResolvers.GroupByScreenerResolver
  },
  Screening: {
    screening: actionResolvers.FindUniqueScreeningResolver,
    findFirstScreening: actionResolvers.FindFirstScreeningResolver,
    screenings: actionResolvers.FindManyScreeningResolver,
    createScreening: actionResolvers.CreateScreeningResolver,
    createManyScreening: actionResolvers.CreateManyScreeningResolver,
    deleteScreening: actionResolvers.DeleteScreeningResolver,
    updateScreening: actionResolvers.UpdateScreeningResolver,
    deleteManyScreening: actionResolvers.DeleteManyScreeningResolver,
    updateManyScreening: actionResolvers.UpdateManyScreeningResolver,
    upsertScreening: actionResolvers.UpsertScreeningResolver,
    aggregateScreening: actionResolvers.AggregateScreeningResolver,
    groupByScreening: actionResolvers.GroupByScreeningResolver
  },
  Student: {
    student: actionResolvers.FindUniqueStudentResolver,
    findFirstStudent: actionResolvers.FindFirstStudentResolver,
    students: actionResolvers.FindManyStudentResolver,
    createStudent: actionResolvers.CreateStudentResolver,
    createManyStudent: actionResolvers.CreateManyStudentResolver,
    deleteStudent: actionResolvers.DeleteStudentResolver,
    updateStudent: actionResolvers.UpdateStudentResolver,
    deleteManyStudent: actionResolvers.DeleteManyStudentResolver,
    updateManyStudent: actionResolvers.UpdateManyStudentResolver,
    upsertStudent: actionResolvers.UpsertStudentResolver,
    aggregateStudent: actionResolvers.AggregateStudentResolver,
    groupByStudent: actionResolvers.GroupByStudentResolver
  },
  Subcourse: {
    subcourse: actionResolvers.FindUniqueSubcourseResolver,
    findFirstSubcourse: actionResolvers.FindFirstSubcourseResolver,
    subcourses: actionResolvers.FindManySubcourseResolver,
    createSubcourse: actionResolvers.CreateSubcourseResolver,
    createManySubcourse: actionResolvers.CreateManySubcourseResolver,
    deleteSubcourse: actionResolvers.DeleteSubcourseResolver,
    updateSubcourse: actionResolvers.UpdateSubcourseResolver,
    deleteManySubcourse: actionResolvers.DeleteManySubcourseResolver,
    updateManySubcourse: actionResolvers.UpdateManySubcourseResolver,
    upsertSubcourse: actionResolvers.UpsertSubcourseResolver,
    aggregateSubcourse: actionResolvers.AggregateSubcourseResolver,
    groupBySubcourse: actionResolvers.GroupBySubcourseResolver
  },
  Subcourse_instructors_student: {
    subcourse_instructors_student: actionResolvers.FindUniqueSubcourse_instructors_studentResolver,
    findFirstSubcourse_instructors_student: actionResolvers.FindFirstSubcourse_instructors_studentResolver,
    subcourse_instructors_students: actionResolvers.FindManySubcourse_instructors_studentResolver,
    createSubcourse_instructors_student: actionResolvers.CreateSubcourse_instructors_studentResolver,
    createManySubcourse_instructors_student: actionResolvers.CreateManySubcourse_instructors_studentResolver,
    deleteSubcourse_instructors_student: actionResolvers.DeleteSubcourse_instructors_studentResolver,
    updateSubcourse_instructors_student: actionResolvers.UpdateSubcourse_instructors_studentResolver,
    deleteManySubcourse_instructors_student: actionResolvers.DeleteManySubcourse_instructors_studentResolver,
    updateManySubcourse_instructors_student: actionResolvers.UpdateManySubcourse_instructors_studentResolver,
    upsertSubcourse_instructors_student: actionResolvers.UpsertSubcourse_instructors_studentResolver,
    aggregateSubcourse_instructors_student: actionResolvers.AggregateSubcourse_instructors_studentResolver,
    groupBySubcourse_instructors_student: actionResolvers.GroupBySubcourse_instructors_studentResolver
  },
  Subcourse_participants_pupil: {
    subcourse_participants_pupil: actionResolvers.FindUniqueSubcourse_participants_pupilResolver,
    findFirstSubcourse_participants_pupil: actionResolvers.FindFirstSubcourse_participants_pupilResolver,
    subcourse_participants_pupils: actionResolvers.FindManySubcourse_participants_pupilResolver,
    createSubcourse_participants_pupil: actionResolvers.CreateSubcourse_participants_pupilResolver,
    createManySubcourse_participants_pupil: actionResolvers.CreateManySubcourse_participants_pupilResolver,
    deleteSubcourse_participants_pupil: actionResolvers.DeleteSubcourse_participants_pupilResolver,
    updateSubcourse_participants_pupil: actionResolvers.UpdateSubcourse_participants_pupilResolver,
    deleteManySubcourse_participants_pupil: actionResolvers.DeleteManySubcourse_participants_pupilResolver,
    updateManySubcourse_participants_pupil: actionResolvers.UpdateManySubcourse_participants_pupilResolver,
    upsertSubcourse_participants_pupil: actionResolvers.UpsertSubcourse_participants_pupilResolver,
    aggregateSubcourse_participants_pupil: actionResolvers.AggregateSubcourse_participants_pupilResolver,
    groupBySubcourse_participants_pupil: actionResolvers.GroupBySubcourse_participants_pupilResolver
  },
  Subcourse_waiting_list_pupil: {
    subcourse_waiting_list_pupil: actionResolvers.FindUniqueSubcourse_waiting_list_pupilResolver,
    findFirstSubcourse_waiting_list_pupil: actionResolvers.FindFirstSubcourse_waiting_list_pupilResolver,
    subcourse_waiting_list_pupils: actionResolvers.FindManySubcourse_waiting_list_pupilResolver,
    createSubcourse_waiting_list_pupil: actionResolvers.CreateSubcourse_waiting_list_pupilResolver,
    createManySubcourse_waiting_list_pupil: actionResolvers.CreateManySubcourse_waiting_list_pupilResolver,
    deleteSubcourse_waiting_list_pupil: actionResolvers.DeleteSubcourse_waiting_list_pupilResolver,
    updateSubcourse_waiting_list_pupil: actionResolvers.UpdateSubcourse_waiting_list_pupilResolver,
    deleteManySubcourse_waiting_list_pupil: actionResolvers.DeleteManySubcourse_waiting_list_pupilResolver,
    updateManySubcourse_waiting_list_pupil: actionResolvers.UpdateManySubcourse_waiting_list_pupilResolver,
    upsertSubcourse_waiting_list_pupil: actionResolvers.UpsertSubcourse_waiting_list_pupilResolver,
    aggregateSubcourse_waiting_list_pupil: actionResolvers.AggregateSubcourse_waiting_list_pupilResolver,
    groupBySubcourse_waiting_list_pupil: actionResolvers.GroupBySubcourse_waiting_list_pupilResolver
  }
};
const resolversInfo = {
  Bbb_meeting: ["bbb_meeting", "findFirstBbb_meeting", "bbb_meetings", "createBbb_meeting", "createManyBbb_meeting", "deleteBbb_meeting", "updateBbb_meeting", "deleteManyBbb_meeting", "updateManyBbb_meeting", "upsertBbb_meeting", "aggregateBbb_meeting", "groupByBbb_meeting"],
  Concrete_notification: ["concrete_notification", "findFirstConcrete_notification", "concrete_notifications", "createConcrete_notification", "createManyConcrete_notification", "deleteConcrete_notification", "updateConcrete_notification", "deleteManyConcrete_notification", "updateManyConcrete_notification", "upsertConcrete_notification", "aggregateConcrete_notification", "groupByConcrete_notification"],
  Course: ["course", "findFirstCourse", "courses", "createCourse", "createManyCourse", "deleteCourse", "updateCourse", "deleteManyCourse", "updateManyCourse", "upsertCourse", "aggregateCourse", "groupByCourse"],
  Course_attendance_log: ["course_attendance_log", "findFirstCourse_attendance_log", "course_attendance_logs", "createCourse_attendance_log", "createManyCourse_attendance_log", "deleteCourse_attendance_log", "updateCourse_attendance_log", "deleteManyCourse_attendance_log", "updateManyCourse_attendance_log", "upsertCourse_attendance_log", "aggregateCourse_attendance_log", "groupByCourse_attendance_log"],
  Course_guest: ["course_guest", "findFirstCourse_guest", "course_guests", "createCourse_guest", "createManyCourse_guest", "deleteCourse_guest", "updateCourse_guest", "deleteManyCourse_guest", "updateManyCourse_guest", "upsertCourse_guest", "aggregateCourse_guest", "groupByCourse_guest"],
  Course_instructors_student: ["course_instructors_student", "findFirstCourse_instructors_student", "course_instructors_students", "createCourse_instructors_student", "createManyCourse_instructors_student", "deleteCourse_instructors_student", "updateCourse_instructors_student", "deleteManyCourse_instructors_student", "updateManyCourse_instructors_student", "upsertCourse_instructors_student", "aggregateCourse_instructors_student", "groupByCourse_instructors_student"],
  Course_participation_certificate: ["course_participation_certificate", "findFirstCourse_participation_certificate", "course_participation_certificates", "createCourse_participation_certificate", "createManyCourse_participation_certificate", "deleteCourse_participation_certificate", "updateCourse_participation_certificate", "deleteManyCourse_participation_certificate", "updateManyCourse_participation_certificate", "upsertCourse_participation_certificate", "aggregateCourse_participation_certificate", "groupByCourse_participation_certificate"],
  Course_tag: ["course_tag", "findFirstCourse_tag", "course_tags", "createCourse_tag", "createManyCourse_tag", "deleteCourse_tag", "updateCourse_tag", "deleteManyCourse_tag", "updateManyCourse_tag", "upsertCourse_tag", "aggregateCourse_tag", "groupByCourse_tag"],
  Course_tags_course_tag: ["course_tags_course_tag", "findFirstCourse_tags_course_tag", "course_tags_course_tags", "createCourse_tags_course_tag", "createManyCourse_tags_course_tag", "deleteCourse_tags_course_tag", "updateCourse_tags_course_tag", "deleteManyCourse_tags_course_tag", "updateManyCourse_tags_course_tag", "upsertCourse_tags_course_tag", "aggregateCourse_tags_course_tag", "groupByCourse_tags_course_tag"],
  Expert_data: ["findUniqueExpert_data", "findFirstExpert_data", "findManyExpert_data", "createExpert_data", "createManyExpert_data", "deleteExpert_data", "updateExpert_data", "deleteManyExpert_data", "updateManyExpert_data", "upsertExpert_data", "aggregateExpert_data", "groupByExpert_data"],
  Expert_data_expertise_tags_expertise_tag: ["expert_data_expertise_tags_expertise_tag", "findFirstExpert_data_expertise_tags_expertise_tag", "expert_data_expertise_tags_expertise_tags", "createExpert_data_expertise_tags_expertise_tag", "createManyExpert_data_expertise_tags_expertise_tag", "deleteExpert_data_expertise_tags_expertise_tag", "updateExpert_data_expertise_tags_expertise_tag", "deleteManyExpert_data_expertise_tags_expertise_tag", "updateManyExpert_data_expertise_tags_expertise_tag", "upsertExpert_data_expertise_tags_expertise_tag", "aggregateExpert_data_expertise_tags_expertise_tag", "groupByExpert_data_expertise_tags_expertise_tag"],
  Expertise_tag: ["expertise_tag", "findFirstExpertise_tag", "expertise_tags", "createExpertise_tag", "createManyExpertise_tag", "deleteExpertise_tag", "updateExpertise_tag", "deleteManyExpertise_tag", "updateManyExpertise_tag", "upsertExpertise_tag", "aggregateExpertise_tag", "groupByExpertise_tag"],
  Instructor_screening: ["instructor_screening", "findFirstInstructor_screening", "instructor_screenings", "createInstructor_screening", "createManyInstructor_screening", "deleteInstructor_screening", "updateInstructor_screening", "deleteManyInstructor_screening", "updateManyInstructor_screening", "upsertInstructor_screening", "aggregateInstructor_screening", "groupByInstructor_screening"],
  Jufo_verification_transmission: ["jufo_verification_transmission", "findFirstJufo_verification_transmission", "jufo_verification_transmissions", "createJufo_verification_transmission", "createManyJufo_verification_transmission", "deleteJufo_verification_transmission", "updateJufo_verification_transmission", "deleteManyJufo_verification_transmission", "updateManyJufo_verification_transmission", "upsertJufo_verification_transmission", "aggregateJufo_verification_transmission", "groupByJufo_verification_transmission"],
  Lecture: ["lecture", "findFirstLecture", "lectures", "createLecture", "createManyLecture", "deleteLecture", "updateLecture", "deleteManyLecture", "updateManyLecture", "upsertLecture", "aggregateLecture", "groupByLecture"],
  Log: ["log", "findFirstLog", "logs", "createLog", "createManyLog", "deleteLog", "updateLog", "deleteManyLog", "updateManyLog", "upsertLog", "aggregateLog", "groupByLog"],
  Match: ["match", "findFirstMatch", "matches", "createMatch", "createManyMatch", "deleteMatch", "updateMatch", "deleteManyMatch", "updateManyMatch", "upsertMatch", "aggregateMatch", "groupByMatch"],
  Mentor: ["mentor", "findFirstMentor", "mentors", "createMentor", "createManyMentor", "deleteMentor", "updateMentor", "deleteManyMentor", "updateManyMentor", "upsertMentor", "aggregateMentor", "groupByMentor"],
  Notification: ["notification", "findFirstNotification", "notifications", "createNotification", "createManyNotification", "deleteNotification", "updateNotification", "deleteManyNotification", "updateManyNotification", "upsertNotification", "aggregateNotification", "groupByNotification"],
  Participation_certificate: ["participation_certificate", "findFirstParticipation_certificate", "participation_certificates", "createParticipation_certificate", "createManyParticipation_certificate", "deleteParticipation_certificate", "updateParticipation_certificate", "deleteManyParticipation_certificate", "updateManyParticipation_certificate", "upsertParticipation_certificate", "aggregateParticipation_certificate", "groupByParticipation_certificate"],
  Project_coaching_screening: ["project_coaching_screening", "findFirstProject_coaching_screening", "project_coaching_screenings", "createProject_coaching_screening", "createManyProject_coaching_screening", "deleteProject_coaching_screening", "updateProject_coaching_screening", "deleteManyProject_coaching_screening", "updateManyProject_coaching_screening", "upsertProject_coaching_screening", "aggregateProject_coaching_screening", "groupByProject_coaching_screening"],
  Project_field_with_grade_restriction: ["project_field_with_grade_restriction", "findFirstProject_field_with_grade_restriction", "project_field_with_grade_restrictions", "createProject_field_with_grade_restriction", "createManyProject_field_with_grade_restriction", "deleteProject_field_with_grade_restriction", "updateProject_field_with_grade_restriction", "deleteManyProject_field_with_grade_restriction", "updateManyProject_field_with_grade_restriction", "upsertProject_field_with_grade_restriction", "aggregateProject_field_with_grade_restriction", "groupByProject_field_with_grade_restriction"],
  Project_match: ["project_match", "findFirstProject_match", "project_matches", "createProject_match", "createManyProject_match", "deleteProject_match", "updateProject_match", "deleteManyProject_match", "updateManyProject_match", "upsertProject_match", "aggregateProject_match", "groupByProject_match"],
  Pupil: ["pupil", "findFirstPupil", "pupils", "createPupil", "createManyPupil", "deletePupil", "updatePupil", "deleteManyPupil", "updateManyPupil", "upsertPupil", "aggregatePupil", "groupByPupil"],
  Pupil_tutoring_interest_confirmation_request: ["pupil_tutoring_interest_confirmation_request", "findFirstPupil_tutoring_interest_confirmation_request", "pupil_tutoring_interest_confirmation_requests", "createPupil_tutoring_interest_confirmation_request", "createManyPupil_tutoring_interest_confirmation_request", "deletePupil_tutoring_interest_confirmation_request", "updatePupil_tutoring_interest_confirmation_request", "deleteManyPupil_tutoring_interest_confirmation_request", "updateManyPupil_tutoring_interest_confirmation_request", "upsertPupil_tutoring_interest_confirmation_request", "aggregatePupil_tutoring_interest_confirmation_request", "groupByPupil_tutoring_interest_confirmation_request"],
  School: ["school", "findFirstSchool", "schools", "createSchool", "createManySchool", "deleteSchool", "updateSchool", "deleteManySchool", "updateManySchool", "upsertSchool", "aggregateSchool", "groupBySchool"],
  Screener: ["screener", "findFirstScreener", "screeners", "createScreener", "createManyScreener", "deleteScreener", "updateScreener", "deleteManyScreener", "updateManyScreener", "upsertScreener", "aggregateScreener", "groupByScreener"],
  Screening: ["screening", "findFirstScreening", "screenings", "createScreening", "createManyScreening", "deleteScreening", "updateScreening", "deleteManyScreening", "updateManyScreening", "upsertScreening", "aggregateScreening", "groupByScreening"],
  Student: ["student", "findFirstStudent", "students", "createStudent", "createManyStudent", "deleteStudent", "updateStudent", "deleteManyStudent", "updateManyStudent", "upsertStudent", "aggregateStudent", "groupByStudent"],
  Subcourse: ["subcourse", "findFirstSubcourse", "subcourses", "createSubcourse", "createManySubcourse", "deleteSubcourse", "updateSubcourse", "deleteManySubcourse", "updateManySubcourse", "upsertSubcourse", "aggregateSubcourse", "groupBySubcourse"],
  Subcourse_instructors_student: ["subcourse_instructors_student", "findFirstSubcourse_instructors_student", "subcourse_instructors_students", "createSubcourse_instructors_student", "createManySubcourse_instructors_student", "deleteSubcourse_instructors_student", "updateSubcourse_instructors_student", "deleteManySubcourse_instructors_student", "updateManySubcourse_instructors_student", "upsertSubcourse_instructors_student", "aggregateSubcourse_instructors_student", "groupBySubcourse_instructors_student"],
  Subcourse_participants_pupil: ["subcourse_participants_pupil", "findFirstSubcourse_participants_pupil", "subcourse_participants_pupils", "createSubcourse_participants_pupil", "createManySubcourse_participants_pupil", "deleteSubcourse_participants_pupil", "updateSubcourse_participants_pupil", "deleteManySubcourse_participants_pupil", "updateManySubcourse_participants_pupil", "upsertSubcourse_participants_pupil", "aggregateSubcourse_participants_pupil", "groupBySubcourse_participants_pupil"],
  Subcourse_waiting_list_pupil: ["subcourse_waiting_list_pupil", "findFirstSubcourse_waiting_list_pupil", "subcourse_waiting_list_pupils", "createSubcourse_waiting_list_pupil", "createManySubcourse_waiting_list_pupil", "deleteSubcourse_waiting_list_pupil", "updateSubcourse_waiting_list_pupil", "deleteManySubcourse_waiting_list_pupil", "updateManySubcourse_waiting_list_pupil", "upsertSubcourse_waiting_list_pupil", "aggregateSubcourse_waiting_list_pupil", "groupBySubcourse_waiting_list_pupil"]
};
const relationResolversInfo = {
  Course: ["student", "course_guest", "course_instructors_student", "course_tags_course_tag", "subcourse"],
  Course_attendance_log: ["lecture", "pupil"],
  Course_guest: ["course", "student"],
  Course_instructors_student: ["course", "student"],
  Course_participation_certificate: ["student", "pupil", "subcourse"],
  Course_tag: ["course_tags_course_tag"],
  Course_tags_course_tag: ["course", "course_tag"],
  Expert_data: ["student", "expert_data_expertise_tags_expertise_tag"],
  Expert_data_expertise_tags_expertise_tag: ["expert_data", "expertise_tag"],
  Expertise_tag: ["expert_data_expertise_tags_expertise_tag"],
  Instructor_screening: ["screener", "student"],
  Jufo_verification_transmission: ["student"],
  Lecture: ["student", "subcourse", "course_attendance_log"],
  Match: ["pupil", "student"],
  Participation_certificate: ["pupil", "student"],
  Project_coaching_screening: ["screener", "student"],
  Project_field_with_grade_restriction: ["student"],
  Project_match: ["pupil", "student"],
  Pupil: ["school", "course_attendance_log", "course_participation_certificate", "match", "participation_certificate", "project_match", "pupil_tutoring_interest_confirmation_request", "subcourse_participants_pupil", "subcourse_waiting_list_pupil"],
  Pupil_tutoring_interest_confirmation_request: ["pupil"],
  School: ["pupil"],
  Screener: ["instructor_screening", "project_coaching_screening", "screening"],
  Screening: ["screener", "student"],
  Student: ["course", "course_guest", "course_instructors_student", "course_participation_certificate", "expert_data", "instructor_screening", "jufo_verification_transmission", "lecture", "match", "participation_certificate", "project_coaching_screening", "project_field_with_grade_restriction", "project_match", "screening", "subcourse_instructors_student"],
  Subcourse: ["course", "course_participation_certificate", "lecture", "subcourse_instructors_student", "subcourse_participants_pupil", "subcourse_waiting_list_pupil"],
  Subcourse_instructors_student: ["student", "subcourse"],
  Subcourse_participants_pupil: ["pupil", "subcourse"],
  Subcourse_waiting_list_pupil: ["pupil", "subcourse"]
};
const modelsInfo = {
  Bbb_meeting: ["id", "createdAt", "updatedAt", "meetingID", "meetingName", "attendeePW", "moderatorPW", "alternativeUrl"],
  Concrete_notification: ["id", "userId", "notificationID", "contextID", "context", "sentAt", "state", "error"],
  Course: ["id", "createdAt", "updatedAt", "name", "outline", "description", "imageKey", "category", "courseState", "screeningComment", "publicRanking", "allowContact", "correspondentId"],
  Course_attendance_log: ["id", "createdAt", "updatedAt", "attendedTime", "ip", "pupilId", "lectureId"],
  Course_guest: ["id", "createdAt", "updatedAt", "token", "firstname", "lastname", "email", "courseId", "inviterId"],
  Course_instructors_student: ["courseId", "studentId"],
  Course_participation_certificate: ["id", "createdAt", "updatedAt", "issuerId", "pupilId", "subcourseId"],
  Course_tag: ["id", "identifier", "name", "category"],
  Course_tags_course_tag: ["courseId", "courseTagId"],
  Expert_data: ["id", "createdAt", "updatedAt", "contactEmail", "description", "active", "allowed", "studentId"],
  Expert_data_expertise_tags_expertise_tag: ["expertDataId", "expertiseTagId"],
  Expertise_tag: ["id", "name"],
  Instructor_screening: ["id", "success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt", "screenerId", "studentId"],
  Jufo_verification_transmission: ["id", "createdAt", "uuid", "studentId"],
  Lecture: ["id", "createdAt", "updatedAt", "start", "duration", "instructorId", "subcourseId"],
  Log: ["id", "logtype", "createdAt", "user", "data"],
  Match: ["id", "uuid", "dissolved", "dissolveReason", "proposedTime", "createdAt", "updatedAt", "feedbackToPupilMail", "feedbackToStudentMail", "followUpToPupilMail", "followUpToStudentMail", "source", "studentId", "pupilId"],
  Mentor: ["id", "createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "division", "expertise", "subjects", "teachingExperience", "message", "description", "imageUrl"],
  Notification: ["id", "mailjetTemplateId", "description", "active", "recipient", "onActions", "category", "cancelledOnAction", "delay", "interval"],
  Participation_certificate: ["id", "uuid", "subjects", "categories", "certificateDate", "startDate", "endDate", "hoursPerWeek", "hoursTotal", "medium", "ongoingLessons", "state", "signaturePupil", "signatureParent", "signatureLocation", "signatureDate", "studentId", "pupilId"],
  Project_coaching_screening: ["id", "success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt", "screenerId", "studentId"],
  Project_field_with_grade_restriction: ["id", "createdAt", "updatedAt", "projectField", "min", "max", "studentId"],
  Project_match: ["id", "uuid", "createdAt", "updatedAt", "dissolved", "dissolveReason", "studentId", "pupilId"],
  Pupil: ["id", "createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "state", "schooltype", "msg", "grade", "newsletter", "isPupil", "subjects", "openMatchRequestCount", "isParticipant", "isProjectCoachee", "projectFields", "isJufoParticipant", "openProjectMatchRequestCount", "projectMemberCount", "languages", "learningGermanSince", "matchingPriority", "lastUpdatedSettingsViaBlocker", "teacherEmailAddress", "registrationSource", "schoolId"],
  Pupil_tutoring_interest_confirmation_request: ["id", "createdAt", "updatedAt", "status", "token", "reminderSentDate", "pupilId"],
  School: ["id", "createdAt", "updatedAt", "name", "website", "emailDomain", "state", "schooltype", "activeCooperation"],
  Screener: ["id", "createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "password", "verified", "oldNumberID"],
  Screening: ["id", "success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt", "screenerId", "studentId"],
  Student: ["id", "createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "phone", "feedback", "newsletter", "isStudent", "subjects", "openMatchRequestCount", "isInstructor", "msg", "state", "university", "module", "moduleHours", "isProjectCoach", "wasJufoParticipant", "hasJufoCertificate", "jufoPastParticipationInfo", "jufoPastParticipationConfirmed", "isUniversityStudent", "openProjectMatchRequestCount", "sentJufoAlumniScreeningReminderCount", "lastSentJufoAlumniScreeningInvitationDate", "supportsInDaZ", "languages", "sentScreeningReminderCount", "lastSentScreeningInvitationDate", "sentInstructorScreeningReminderCount", "lastSentInstructorScreeningInvitationDate", "lastUpdatedSettingsViaBlocker", "registrationSource"],
  Subcourse: ["id", "createdAt", "updatedAt", "minGrade", "maxGrade", "maxParticipants", "joinAfterStart", "published", "cancelled", "courseId"],
  Subcourse_instructors_student: ["subcourseId", "studentId"],
  Subcourse_participants_pupil: ["subcourseId", "pupilId"],
  Subcourse_waiting_list_pupil: ["subcourseId", "pupilId"]
};
const inputsInfo = {
  Bbb_meetingWhereInput: ["AND", "OR", "NOT", "id", "createdAt", "updatedAt", "meetingID", "meetingName", "attendeePW", "moderatorPW", "alternativeUrl"],
  Bbb_meetingOrderByInput: ["id", "createdAt", "updatedAt", "meetingID", "meetingName", "attendeePW", "moderatorPW", "alternativeUrl"],
  Bbb_meetingWhereUniqueInput: ["id"],
  Bbb_meetingScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "createdAt", "updatedAt", "meetingID", "meetingName", "attendeePW", "moderatorPW", "alternativeUrl"],
  Concrete_notificationWhereInput: ["AND", "OR", "NOT", "id", "userId", "notificationID", "contextID", "context", "sentAt", "state", "error"],
  Concrete_notificationOrderByInput: ["id", "userId", "notificationID", "contextID", "context", "sentAt", "state", "error"],
  Concrete_notificationWhereUniqueInput: ["id"],
  Concrete_notificationScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "userId", "notificationID", "contextID", "context", "sentAt", "state", "error"],
  CourseWhereInput: ["AND", "OR", "NOT", "id", "createdAt", "updatedAt", "name", "outline", "description", "imageKey", "category", "courseState", "screeningComment", "publicRanking", "allowContact", "correspondentId", "student", "course_guest", "course_instructors_student", "course_tags_course_tag", "subcourse"],
  CourseOrderByInput: ["id", "createdAt", "updatedAt", "name", "outline", "description", "imageKey", "category", "courseState", "screeningComment", "publicRanking", "allowContact", "correspondentId"],
  CourseWhereUniqueInput: ["id"],
  CourseScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "createdAt", "updatedAt", "name", "outline", "description", "imageKey", "category", "courseState", "screeningComment", "publicRanking", "allowContact", "correspondentId"],
  Course_attendance_logWhereInput: ["AND", "OR", "NOT", "id", "createdAt", "updatedAt", "attendedTime", "ip", "pupilId", "lectureId", "lecture", "pupil"],
  Course_attendance_logOrderByInput: ["id", "createdAt", "updatedAt", "attendedTime", "ip", "pupilId", "lectureId"],
  Course_attendance_logWhereUniqueInput: ["id"],
  Course_attendance_logScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "createdAt", "updatedAt", "attendedTime", "ip", "pupilId", "lectureId"],
  Course_guestWhereInput: ["AND", "OR", "NOT", "id", "createdAt", "updatedAt", "token", "firstname", "lastname", "email", "courseId", "inviterId", "course", "student"],
  Course_guestOrderByInput: ["id", "createdAt", "updatedAt", "token", "firstname", "lastname", "email", "courseId", "inviterId"],
  Course_guestWhereUniqueInput: ["id", "token"],
  Course_guestScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "createdAt", "updatedAt", "token", "firstname", "lastname", "email", "courseId", "inviterId"],
  Course_instructors_studentWhereInput: ["AND", "OR", "NOT", "courseId", "studentId", "course", "student"],
  Course_instructors_studentOrderByInput: ["courseId", "studentId"],
  Course_instructors_studentWhereUniqueInput: ["courseId_studentId"],
  Course_instructors_studentScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "courseId", "studentId"],
  Course_participation_certificateWhereInput: ["AND", "OR", "NOT", "id", "createdAt", "updatedAt", "issuerId", "pupilId", "subcourseId", "student", "pupil", "subcourse"],
  Course_participation_certificateOrderByInput: ["id", "createdAt", "updatedAt", "issuerId", "pupilId", "subcourseId"],
  Course_participation_certificateWhereUniqueInput: ["id"],
  Course_participation_certificateScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "createdAt", "updatedAt", "issuerId", "pupilId", "subcourseId"],
  Course_tagWhereInput: ["AND", "OR", "NOT", "id", "identifier", "name", "category", "course_tags_course_tag"],
  Course_tagOrderByInput: ["id", "identifier", "name", "category"],
  Course_tagWhereUniqueInput: ["id", "identifier"],
  Course_tagScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier", "name", "category"],
  Course_tags_course_tagWhereInput: ["AND", "OR", "NOT", "courseId", "courseTagId", "course", "course_tag"],
  Course_tags_course_tagOrderByInput: ["courseId", "courseTagId"],
  Course_tags_course_tagWhereUniqueInput: ["courseId_courseTagId"],
  Course_tags_course_tagScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "courseId", "courseTagId"],
  Expert_dataWhereInput: ["AND", "OR", "NOT", "id", "createdAt", "updatedAt", "contactEmail", "description", "active", "allowed", "studentId", "student", "expert_data_expertise_tags_expertise_tag"],
  Expert_dataOrderByInput: ["id", "createdAt", "updatedAt", "contactEmail", "description", "active", "allowed", "studentId"],
  Expert_dataWhereUniqueInput: ["id", "studentId"],
  Expert_dataScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "createdAt", "updatedAt", "contactEmail", "description", "active", "allowed", "studentId"],
  Expert_data_expertise_tags_expertise_tagWhereInput: ["AND", "OR", "NOT", "expertDataId", "expertiseTagId", "expert_data", "expertise_tag"],
  Expert_data_expertise_tags_expertise_tagOrderByInput: ["expertDataId", "expertiseTagId"],
  Expert_data_expertise_tags_expertise_tagWhereUniqueInput: ["expertDataId_expertiseTagId"],
  Expert_data_expertise_tags_expertise_tagScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "expertDataId", "expertiseTagId"],
  Expertise_tagWhereInput: ["AND", "OR", "NOT", "id", "name", "expert_data_expertise_tags_expertise_tag"],
  Expertise_tagOrderByInput: ["id", "name"],
  Expertise_tagWhereUniqueInput: ["id", "name"],
  Expertise_tagScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "name"],
  Instructor_screeningWhereInput: ["AND", "OR", "NOT", "id", "success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt", "screenerId", "studentId", "screener", "student"],
  Instructor_screeningOrderByInput: ["id", "success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt", "screenerId", "studentId"],
  Instructor_screeningWhereUniqueInput: ["id", "studentId"],
  Instructor_screeningScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt", "screenerId", "studentId"],
  Jufo_verification_transmissionWhereInput: ["AND", "OR", "NOT", "id", "createdAt", "uuid", "studentId", "student"],
  Jufo_verification_transmissionOrderByInput: ["id", "createdAt", "uuid", "studentId"],
  Jufo_verification_transmissionWhereUniqueInput: ["id", "studentId"],
  Jufo_verification_transmissionScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "createdAt", "uuid", "studentId"],
  LectureWhereInput: ["AND", "OR", "NOT", "id", "createdAt", "updatedAt", "start", "duration", "instructorId", "subcourseId", "student", "subcourse", "course_attendance_log"],
  LectureOrderByInput: ["id", "createdAt", "updatedAt", "start", "duration", "instructorId", "subcourseId"],
  LectureWhereUniqueInput: ["id"],
  LectureScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "createdAt", "updatedAt", "start", "duration", "instructorId", "subcourseId"],
  LogWhereInput: ["AND", "OR", "NOT", "id", "logtype", "createdAt", "user", "data"],
  LogOrderByInput: ["id", "logtype", "createdAt", "user", "data"],
  LogWhereUniqueInput: ["id"],
  LogScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "logtype", "createdAt", "user", "data"],
  MatchWhereInput: ["AND", "OR", "NOT", "id", "uuid", "dissolved", "dissolveReason", "proposedTime", "createdAt", "updatedAt", "feedbackToPupilMail", "feedbackToStudentMail", "followUpToPupilMail", "followUpToStudentMail", "source", "studentId", "pupilId", "pupil", "student"],
  MatchOrderByInput: ["id", "uuid", "dissolved", "dissolveReason", "proposedTime", "createdAt", "updatedAt", "feedbackToPupilMail", "feedbackToStudentMail", "followUpToPupilMail", "followUpToStudentMail", "source", "studentId", "pupilId"],
  MatchWhereUniqueInput: ["id", "uuid", "UQ_MATCH"],
  MatchScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "uuid", "dissolved", "dissolveReason", "proposedTime", "createdAt", "updatedAt", "feedbackToPupilMail", "feedbackToStudentMail", "followUpToPupilMail", "followUpToStudentMail", "source", "studentId", "pupilId"],
  MentorWhereInput: ["AND", "OR", "NOT", "id", "createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "division", "expertise", "subjects", "teachingExperience", "message", "description", "imageUrl"],
  MentorOrderByInput: ["id", "createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "division", "expertise", "subjects", "teachingExperience", "message", "description", "imageUrl"],
  MentorWhereUniqueInput: ["id", "email", "verification", "authToken", "wix_id"],
  MentorScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "division", "expertise", "subjects", "teachingExperience", "message", "description", "imageUrl"],
  NotificationWhereInput: ["AND", "OR", "NOT", "id", "mailjetTemplateId", "description", "active", "recipient", "onActions", "category", "cancelledOnAction", "delay", "interval"],
  NotificationOrderByInput: ["id", "mailjetTemplateId", "description", "active", "recipient", "onActions", "category", "cancelledOnAction", "delay", "interval"],
  NotificationWhereUniqueInput: ["id"],
  NotificationScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "mailjetTemplateId", "description", "active", "recipient", "onActions", "category", "cancelledOnAction", "delay", "interval"],
  Participation_certificateWhereInput: ["AND", "OR", "NOT", "id", "uuid", "subjects", "categories", "certificateDate", "startDate", "endDate", "hoursPerWeek", "hoursTotal", "medium", "ongoingLessons", "state", "signaturePupil", "signatureParent", "signatureLocation", "signatureDate", "studentId", "pupilId", "pupil", "student"],
  Participation_certificateOrderByInput: ["id", "uuid", "subjects", "categories", "certificateDate", "startDate", "endDate", "hoursPerWeek", "hoursTotal", "medium", "ongoingLessons", "state", "signaturePupil", "signatureParent", "signatureLocation", "signatureDate", "studentId", "pupilId"],
  Participation_certificateWhereUniqueInput: ["id", "uuid"],
  Participation_certificateScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "uuid", "subjects", "categories", "certificateDate", "startDate", "endDate", "hoursPerWeek", "hoursTotal", "medium", "ongoingLessons", "state", "signaturePupil", "signatureParent", "signatureLocation", "signatureDate", "studentId", "pupilId"],
  Project_coaching_screeningWhereInput: ["AND", "OR", "NOT", "id", "success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt", "screenerId", "studentId", "screener", "student"],
  Project_coaching_screeningOrderByInput: ["id", "success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt", "screenerId", "studentId"],
  Project_coaching_screeningWhereUniqueInput: ["id", "studentId"],
  Project_coaching_screeningScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt", "screenerId", "studentId"],
  Project_field_with_grade_restrictionWhereInput: ["AND", "OR", "NOT", "id", "createdAt", "updatedAt", "projectField", "min", "max", "studentId", "student"],
  Project_field_with_grade_restrictionOrderByInput: ["id", "createdAt", "updatedAt", "projectField", "min", "max", "studentId"],
  Project_field_with_grade_restrictionWhereUniqueInput: ["id", "UQ_PROJECT_FIELDS"],
  Project_field_with_grade_restrictionScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "createdAt", "updatedAt", "projectField", "min", "max", "studentId"],
  Project_matchWhereInput: ["AND", "OR", "NOT", "id", "uuid", "createdAt", "updatedAt", "dissolved", "dissolveReason", "studentId", "pupilId", "pupil", "student"],
  Project_matchOrderByInput: ["id", "uuid", "createdAt", "updatedAt", "dissolved", "dissolveReason", "studentId", "pupilId"],
  Project_matchWhereUniqueInput: ["id", "uuid", "UQ_PJ_MATCH"],
  Project_matchScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "uuid", "createdAt", "updatedAt", "dissolved", "dissolveReason", "studentId", "pupilId"],
  PupilWhereInput: ["AND", "OR", "NOT", "id", "createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "state", "schooltype", "msg", "grade", "newsletter", "isPupil", "subjects", "openMatchRequestCount", "isParticipant", "isProjectCoachee", "projectFields", "isJufoParticipant", "openProjectMatchRequestCount", "projectMemberCount", "languages", "learningGermanSince", "matchingPriority", "lastUpdatedSettingsViaBlocker", "teacherEmailAddress", "registrationSource", "schoolId", "school", "course_attendance_log", "course_participation_certificate", "match", "participation_certificate", "project_match", "pupil_tutoring_interest_confirmation_request", "subcourse_participants_pupil", "subcourse_waiting_list_pupil"],
  PupilOrderByInput: ["id", "createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "state", "schooltype", "msg", "grade", "newsletter", "isPupil", "subjects", "openMatchRequestCount", "isParticipant", "isProjectCoachee", "projectFields", "isJufoParticipant", "openProjectMatchRequestCount", "projectMemberCount", "languages", "learningGermanSince", "matchingPriority", "lastUpdatedSettingsViaBlocker", "teacherEmailAddress", "registrationSource", "schoolId"],
  PupilWhereUniqueInput: ["id", "email", "verification", "authToken", "wix_id"],
  PupilScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "state", "schooltype", "msg", "grade", "newsletter", "isPupil", "subjects", "openMatchRequestCount", "isParticipant", "isProjectCoachee", "projectFields", "isJufoParticipant", "openProjectMatchRequestCount", "projectMemberCount", "languages", "learningGermanSince", "matchingPriority", "lastUpdatedSettingsViaBlocker", "teacherEmailAddress", "registrationSource", "schoolId"],
  Pupil_tutoring_interest_confirmation_requestWhereInput: ["AND", "OR", "NOT", "id", "createdAt", "updatedAt", "status", "token", "reminderSentDate", "pupilId", "pupil"],
  Pupil_tutoring_interest_confirmation_requestOrderByInput: ["id", "createdAt", "updatedAt", "status", "token", "reminderSentDate", "pupilId"],
  Pupil_tutoring_interest_confirmation_requestWhereUniqueInput: ["id", "token", "pupilId"],
  Pupil_tutoring_interest_confirmation_requestScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "createdAt", "updatedAt", "status", "token", "reminderSentDate", "pupilId"],
  SchoolWhereInput: ["AND", "OR", "NOT", "id", "createdAt", "updatedAt", "name", "website", "emailDomain", "state", "schooltype", "activeCooperation", "pupil"],
  SchoolOrderByInput: ["id", "createdAt", "updatedAt", "name", "website", "emailDomain", "state", "schooltype", "activeCooperation"],
  SchoolWhereUniqueInput: ["id", "website", "emailDomain"],
  SchoolScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "createdAt", "updatedAt", "name", "website", "emailDomain", "state", "schooltype", "activeCooperation"],
  ScreenerWhereInput: ["AND", "OR", "NOT", "id", "createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "password", "verified", "oldNumberID", "instructor_screening", "project_coaching_screening", "screening"],
  ScreenerOrderByInput: ["id", "createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "password", "verified", "oldNumberID"],
  ScreenerWhereUniqueInput: ["id", "email", "verification", "authToken", "oldNumberID"],
  ScreenerScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "password", "verified", "oldNumberID"],
  ScreeningWhereInput: ["AND", "OR", "NOT", "id", "success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt", "screenerId", "studentId", "screener", "student"],
  ScreeningOrderByInput: ["id", "success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt", "screenerId", "studentId"],
  ScreeningWhereUniqueInput: ["id", "studentId"],
  ScreeningScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt", "screenerId", "studentId"],
  StudentWhereInput: ["AND", "OR", "NOT", "id", "createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "phone", "feedback", "newsletter", "isStudent", "subjects", "openMatchRequestCount", "isInstructor", "msg", "state", "university", "module", "moduleHours", "isProjectCoach", "wasJufoParticipant", "hasJufoCertificate", "jufoPastParticipationInfo", "jufoPastParticipationConfirmed", "isUniversityStudent", "openProjectMatchRequestCount", "sentJufoAlumniScreeningReminderCount", "lastSentJufoAlumniScreeningInvitationDate", "supportsInDaZ", "languages", "sentScreeningReminderCount", "lastSentScreeningInvitationDate", "sentInstructorScreeningReminderCount", "lastSentInstructorScreeningInvitationDate", "lastUpdatedSettingsViaBlocker", "registrationSource", "course", "course_guest", "course_instructors_student", "course_participation_certificate", "expert_data", "instructor_screening", "jufo_verification_transmission", "lecture", "match", "participation_certificate", "project_coaching_screening", "project_field_with_grade_restriction", "project_match", "screening", "subcourse_instructors_student"],
  StudentOrderByInput: ["id", "createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "phone", "feedback", "newsletter", "isStudent", "subjects", "openMatchRequestCount", "isInstructor", "msg", "state", "university", "module", "moduleHours", "isProjectCoach", "wasJufoParticipant", "hasJufoCertificate", "jufoPastParticipationInfo", "jufoPastParticipationConfirmed", "isUniversityStudent", "openProjectMatchRequestCount", "sentJufoAlumniScreeningReminderCount", "lastSentJufoAlumniScreeningInvitationDate", "supportsInDaZ", "languages", "sentScreeningReminderCount", "lastSentScreeningInvitationDate", "sentInstructorScreeningReminderCount", "lastSentInstructorScreeningInvitationDate", "lastUpdatedSettingsViaBlocker", "registrationSource"],
  StudentWhereUniqueInput: ["id", "email", "verification", "authToken", "wix_id"],
  StudentScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "phone", "feedback", "newsletter", "isStudent", "subjects", "openMatchRequestCount", "isInstructor", "msg", "state", "university", "module", "moduleHours", "isProjectCoach", "wasJufoParticipant", "hasJufoCertificate", "jufoPastParticipationInfo", "jufoPastParticipationConfirmed", "isUniversityStudent", "openProjectMatchRequestCount", "sentJufoAlumniScreeningReminderCount", "lastSentJufoAlumniScreeningInvitationDate", "supportsInDaZ", "languages", "sentScreeningReminderCount", "lastSentScreeningInvitationDate", "sentInstructorScreeningReminderCount", "lastSentInstructorScreeningInvitationDate", "lastUpdatedSettingsViaBlocker", "registrationSource"],
  SubcourseWhereInput: ["AND", "OR", "NOT", "id", "createdAt", "updatedAt", "minGrade", "maxGrade", "maxParticipants", "joinAfterStart", "published", "cancelled", "courseId", "course", "course_participation_certificate", "lecture", "subcourse_instructors_student", "subcourse_participants_pupil", "subcourse_waiting_list_pupil"],
  SubcourseOrderByInput: ["id", "createdAt", "updatedAt", "minGrade", "maxGrade", "maxParticipants", "joinAfterStart", "published", "cancelled", "courseId"],
  SubcourseWhereUniqueInput: ["id"],
  SubcourseScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "createdAt", "updatedAt", "minGrade", "maxGrade", "maxParticipants", "joinAfterStart", "published", "cancelled", "courseId"],
  Subcourse_instructors_studentWhereInput: ["AND", "OR", "NOT", "subcourseId", "studentId", "student", "subcourse"],
  Subcourse_instructors_studentOrderByInput: ["subcourseId", "studentId"],
  Subcourse_instructors_studentWhereUniqueInput: ["subcourseId_studentId"],
  Subcourse_instructors_studentScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "subcourseId", "studentId"],
  Subcourse_participants_pupilWhereInput: ["AND", "OR", "NOT", "subcourseId", "pupilId", "pupil", "subcourse"],
  Subcourse_participants_pupilOrderByInput: ["subcourseId", "pupilId"],
  Subcourse_participants_pupilWhereUniqueInput: ["subcourseId_pupilId"],
  Subcourse_participants_pupilScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "subcourseId", "pupilId"],
  Subcourse_waiting_list_pupilWhereInput: ["AND", "OR", "NOT", "subcourseId", "pupilId", "pupil", "subcourse"],
  Subcourse_waiting_list_pupilOrderByInput: ["subcourseId", "pupilId"],
  Subcourse_waiting_list_pupilWhereUniqueInput: ["subcourseId_pupilId"],
  Subcourse_waiting_list_pupilScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "subcourseId", "pupilId"],
  Bbb_meetingCreateInput: ["createdAt", "updatedAt", "meetingID", "meetingName", "attendeePW", "moderatorPW", "alternativeUrl"],
  Bbb_meetingUpdateInput: ["createdAt", "updatedAt", "meetingID", "meetingName", "attendeePW", "moderatorPW", "alternativeUrl"],
  Bbb_meetingCreateManyInput: ["id", "createdAt", "updatedAt", "meetingID", "meetingName", "attendeePW", "moderatorPW", "alternativeUrl"],
  Bbb_meetingUpdateManyMutationInput: ["createdAt", "updatedAt", "meetingID", "meetingName", "attendeePW", "moderatorPW", "alternativeUrl"],
  Concrete_notificationCreateInput: ["userId", "notificationID", "contextID", "context", "sentAt", "state", "error"],
  Concrete_notificationUpdateInput: ["userId", "notificationID", "contextID", "context", "sentAt", "state", "error"],
  Concrete_notificationCreateManyInput: ["id", "userId", "notificationID", "contextID", "context", "sentAt", "state", "error"],
  Concrete_notificationUpdateManyMutationInput: ["userId", "notificationID", "contextID", "context", "sentAt", "state", "error"],
  CourseCreateInput: ["createdAt", "updatedAt", "name", "outline", "description", "imageKey", "category", "courseState", "screeningComment", "publicRanking", "allowContact", "student", "course_guest", "course_instructors_student", "course_tags_course_tag", "subcourse"],
  CourseUpdateInput: ["createdAt", "updatedAt", "name", "outline", "description", "imageKey", "category", "courseState", "screeningComment", "publicRanking", "allowContact", "student", "course_guest", "course_instructors_student", "course_tags_course_tag", "subcourse"],
  CourseCreateManyInput: ["id", "createdAt", "updatedAt", "name", "outline", "description", "imageKey", "category", "courseState", "screeningComment", "publicRanking", "allowContact", "correspondentId"],
  CourseUpdateManyMutationInput: ["createdAt", "updatedAt", "name", "outline", "description", "imageKey", "category", "courseState", "screeningComment", "publicRanking", "allowContact"],
  Course_attendance_logCreateInput: ["createdAt", "updatedAt", "attendedTime", "ip", "lecture", "pupil"],
  Course_attendance_logUpdateInput: ["createdAt", "updatedAt", "attendedTime", "ip", "lecture", "pupil"],
  Course_attendance_logCreateManyInput: ["id", "createdAt", "updatedAt", "attendedTime", "ip", "pupilId", "lectureId"],
  Course_attendance_logUpdateManyMutationInput: ["createdAt", "updatedAt", "attendedTime", "ip"],
  Course_guestCreateInput: ["createdAt", "updatedAt", "token", "firstname", "lastname", "email", "course", "student"],
  Course_guestUpdateInput: ["createdAt", "updatedAt", "token", "firstname", "lastname", "email", "course", "student"],
  Course_guestCreateManyInput: ["id", "createdAt", "updatedAt", "token", "firstname", "lastname", "email", "courseId", "inviterId"],
  Course_guestUpdateManyMutationInput: ["createdAt", "updatedAt", "token", "firstname", "lastname", "email"],
  Course_instructors_studentCreateInput: ["course", "student"],
  Course_instructors_studentUpdateInput: ["course", "student"],
  Course_instructors_studentCreateManyInput: ["courseId", "studentId"],
  Course_instructors_studentUpdateManyMutationInput: [],
  Course_participation_certificateCreateInput: ["createdAt", "updatedAt", "student", "pupil", "subcourse"],
  Course_participation_certificateUpdateInput: ["createdAt", "updatedAt", "student", "pupil", "subcourse"],
  Course_participation_certificateCreateManyInput: ["id", "createdAt", "updatedAt", "issuerId", "pupilId", "subcourseId"],
  Course_participation_certificateUpdateManyMutationInput: ["createdAt", "updatedAt"],
  Course_tagCreateInput: ["identifier", "name", "category", "course_tags_course_tag"],
  Course_tagUpdateInput: ["identifier", "name", "category", "course_tags_course_tag"],
  Course_tagCreateManyInput: ["id", "identifier", "name", "category"],
  Course_tagUpdateManyMutationInput: ["identifier", "name", "category"],
  Course_tags_course_tagCreateInput: ["course", "course_tag"],
  Course_tags_course_tagUpdateInput: ["course", "course_tag"],
  Course_tags_course_tagCreateManyInput: ["courseId", "courseTagId"],
  Course_tags_course_tagUpdateManyMutationInput: [],
  Expert_dataCreateInput: ["createdAt", "updatedAt", "contactEmail", "description", "active", "allowed", "student", "expert_data_expertise_tags_expertise_tag"],
  Expert_dataUpdateInput: ["createdAt", "updatedAt", "contactEmail", "description", "active", "allowed", "student", "expert_data_expertise_tags_expertise_tag"],
  Expert_dataCreateManyInput: ["id", "createdAt", "updatedAt", "contactEmail", "description", "active", "allowed", "studentId"],
  Expert_dataUpdateManyMutationInput: ["createdAt", "updatedAt", "contactEmail", "description", "active", "allowed"],
  Expert_data_expertise_tags_expertise_tagCreateInput: ["expert_data", "expertise_tag"],
  Expert_data_expertise_tags_expertise_tagUpdateInput: ["expert_data", "expertise_tag"],
  Expert_data_expertise_tags_expertise_tagCreateManyInput: ["expertDataId", "expertiseTagId"],
  Expert_data_expertise_tags_expertise_tagUpdateManyMutationInput: [],
  Expertise_tagCreateInput: ["name", "expert_data_expertise_tags_expertise_tag"],
  Expertise_tagUpdateInput: ["name", "expert_data_expertise_tags_expertise_tag"],
  Expertise_tagCreateManyInput: ["id", "name"],
  Expertise_tagUpdateManyMutationInput: ["name"],
  Instructor_screeningCreateInput: ["success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt", "screener", "student"],
  Instructor_screeningUpdateInput: ["success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt", "screener", "student"],
  Instructor_screeningCreateManyInput: ["id", "success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt", "screenerId", "studentId"],
  Instructor_screeningUpdateManyMutationInput: ["success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt"],
  Jufo_verification_transmissionCreateInput: ["createdAt", "uuid", "student"],
  Jufo_verification_transmissionUpdateInput: ["createdAt", "uuid", "student"],
  Jufo_verification_transmissionCreateManyInput: ["id", "createdAt", "uuid", "studentId"],
  Jufo_verification_transmissionUpdateManyMutationInput: ["createdAt", "uuid"],
  LectureCreateInput: ["createdAt", "updatedAt", "start", "duration", "student", "subcourse", "course_attendance_log"],
  LectureUpdateInput: ["createdAt", "updatedAt", "start", "duration", "student", "subcourse", "course_attendance_log"],
  LectureCreateManyInput: ["id", "createdAt", "updatedAt", "start", "duration", "instructorId", "subcourseId"],
  LectureUpdateManyMutationInput: ["createdAt", "updatedAt", "start", "duration"],
  LogCreateInput: ["logtype", "createdAt", "user", "data"],
  LogUpdateInput: ["logtype", "createdAt", "user", "data"],
  LogCreateManyInput: ["id", "logtype", "createdAt", "user", "data"],
  LogUpdateManyMutationInput: ["logtype", "createdAt", "user", "data"],
  MatchCreateInput: ["uuid", "dissolved", "dissolveReason", "proposedTime", "createdAt", "updatedAt", "feedbackToPupilMail", "feedbackToStudentMail", "followUpToPupilMail", "followUpToStudentMail", "source", "pupil", "student"],
  MatchUpdateInput: ["uuid", "dissolved", "dissolveReason", "proposedTime", "createdAt", "updatedAt", "feedbackToPupilMail", "feedbackToStudentMail", "followUpToPupilMail", "followUpToStudentMail", "source", "pupil", "student"],
  MatchCreateManyInput: ["id", "uuid", "dissolved", "dissolveReason", "proposedTime", "createdAt", "updatedAt", "feedbackToPupilMail", "feedbackToStudentMail", "followUpToPupilMail", "followUpToStudentMail", "source", "studentId", "pupilId"],
  MatchUpdateManyMutationInput: ["uuid", "dissolved", "dissolveReason", "proposedTime", "createdAt", "updatedAt", "feedbackToPupilMail", "feedbackToStudentMail", "followUpToPupilMail", "followUpToStudentMail", "source"],
  MentorCreateInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "subjects", "teachingExperience", "message", "description", "imageUrl", "division", "expertise"],
  MentorUpdateInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "subjects", "teachingExperience", "message", "description", "imageUrl", "division", "expertise"],
  MentorCreateManyInput: ["id", "createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "subjects", "teachingExperience", "message", "description", "imageUrl", "division", "expertise"],
  MentorUpdateManyMutationInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "subjects", "teachingExperience", "message", "description", "imageUrl", "division", "expertise"],
  NotificationCreateInput: ["mailjetTemplateId", "description", "active", "recipient", "delay", "interval", "onActions", "category", "cancelledOnAction"],
  NotificationUpdateInput: ["mailjetTemplateId", "description", "active", "recipient", "delay", "interval", "onActions", "category", "cancelledOnAction"],
  NotificationCreateManyInput: ["id", "mailjetTemplateId", "description", "active", "recipient", "delay", "interval", "onActions", "category", "cancelledOnAction"],
  NotificationUpdateManyMutationInput: ["mailjetTemplateId", "description", "active", "recipient", "delay", "interval", "onActions", "category", "cancelledOnAction"],
  Participation_certificateCreateInput: ["uuid", "subjects", "categories", "certificateDate", "startDate", "endDate", "hoursPerWeek", "hoursTotal", "medium", "ongoingLessons", "state", "signaturePupil", "signatureParent", "signatureLocation", "signatureDate", "pupil", "student"],
  Participation_certificateUpdateInput: ["uuid", "subjects", "categories", "certificateDate", "startDate", "endDate", "hoursPerWeek", "hoursTotal", "medium", "ongoingLessons", "state", "signaturePupil", "signatureParent", "signatureLocation", "signatureDate", "pupil", "student"],
  Participation_certificateCreateManyInput: ["id", "uuid", "subjects", "categories", "certificateDate", "startDate", "endDate", "hoursPerWeek", "hoursTotal", "medium", "ongoingLessons", "state", "signaturePupil", "signatureParent", "signatureLocation", "signatureDate", "studentId", "pupilId"],
  Participation_certificateUpdateManyMutationInput: ["uuid", "subjects", "categories", "certificateDate", "startDate", "endDate", "hoursPerWeek", "hoursTotal", "medium", "ongoingLessons", "state", "signaturePupil", "signatureParent", "signatureLocation", "signatureDate"],
  Project_coaching_screeningCreateInput: ["success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt", "screener", "student"],
  Project_coaching_screeningUpdateInput: ["success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt", "screener", "student"],
  Project_coaching_screeningCreateManyInput: ["id", "success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt", "screenerId", "studentId"],
  Project_coaching_screeningUpdateManyMutationInput: ["success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt"],
  Project_field_with_grade_restrictionCreateInput: ["createdAt", "updatedAt", "projectField", "min", "max", "student"],
  Project_field_with_grade_restrictionUpdateInput: ["createdAt", "updatedAt", "projectField", "min", "max", "student"],
  Project_field_with_grade_restrictionCreateManyInput: ["id", "createdAt", "updatedAt", "projectField", "min", "max", "studentId"],
  Project_field_with_grade_restrictionUpdateManyMutationInput: ["createdAt", "updatedAt", "projectField", "min", "max"],
  Project_matchCreateInput: ["uuid", "createdAt", "updatedAt", "dissolved", "dissolveReason", "pupil", "student"],
  Project_matchUpdateInput: ["uuid", "createdAt", "updatedAt", "dissolved", "dissolveReason", "pupil", "student"],
  Project_matchCreateManyInput: ["id", "uuid", "createdAt", "updatedAt", "dissolved", "dissolveReason", "studentId", "pupilId"],
  Project_matchUpdateManyMutationInput: ["uuid", "createdAt", "updatedAt", "dissolved", "dissolveReason"],
  PupilCreateInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "state", "schooltype", "msg", "grade", "newsletter", "isPupil", "subjects", "openMatchRequestCount", "isParticipant", "isProjectCoachee", "isJufoParticipant", "openProjectMatchRequestCount", "projectMemberCount", "learningGermanSince", "matchingPriority", "lastUpdatedSettingsViaBlocker", "teacherEmailAddress", "registrationSource", "projectFields", "languages", "school", "course_attendance_log", "course_participation_certificate", "match", "participation_certificate", "project_match", "pupil_tutoring_interest_confirmation_request", "subcourse_participants_pupil", "subcourse_waiting_list_pupil"],
  PupilUpdateInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "state", "schooltype", "msg", "grade", "newsletter", "isPupil", "subjects", "openMatchRequestCount", "isParticipant", "isProjectCoachee", "isJufoParticipant", "openProjectMatchRequestCount", "projectMemberCount", "learningGermanSince", "matchingPriority", "lastUpdatedSettingsViaBlocker", "teacherEmailAddress", "registrationSource", "projectFields", "languages", "school", "course_attendance_log", "course_participation_certificate", "match", "participation_certificate", "project_match", "pupil_tutoring_interest_confirmation_request", "subcourse_participants_pupil", "subcourse_waiting_list_pupil"],
  PupilCreateManyInput: ["id", "createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "state", "schooltype", "msg", "grade", "newsletter", "isPupil", "subjects", "openMatchRequestCount", "isParticipant", "isProjectCoachee", "isJufoParticipant", "openProjectMatchRequestCount", "projectMemberCount", "learningGermanSince", "matchingPriority", "lastUpdatedSettingsViaBlocker", "teacherEmailAddress", "registrationSource", "schoolId", "projectFields", "languages"],
  PupilUpdateManyMutationInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "state", "schooltype", "msg", "grade", "newsletter", "isPupil", "subjects", "openMatchRequestCount", "isParticipant", "isProjectCoachee", "isJufoParticipant", "openProjectMatchRequestCount", "projectMemberCount", "learningGermanSince", "matchingPriority", "lastUpdatedSettingsViaBlocker", "teacherEmailAddress", "registrationSource", "projectFields", "languages"],
  Pupil_tutoring_interest_confirmation_requestCreateInput: ["createdAt", "updatedAt", "status", "token", "reminderSentDate", "pupil"],
  Pupil_tutoring_interest_confirmation_requestUpdateInput: ["createdAt", "updatedAt", "status", "token", "reminderSentDate", "pupil"],
  Pupil_tutoring_interest_confirmation_requestCreateManyInput: ["id", "createdAt", "updatedAt", "status", "token", "reminderSentDate", "pupilId"],
  Pupil_tutoring_interest_confirmation_requestUpdateManyMutationInput: ["createdAt", "updatedAt", "status", "token", "reminderSentDate"],
  SchoolCreateInput: ["createdAt", "updatedAt", "name", "website", "emailDomain", "state", "schooltype", "activeCooperation", "pupil"],
  SchoolUpdateInput: ["createdAt", "updatedAt", "name", "website", "emailDomain", "state", "schooltype", "activeCooperation", "pupil"],
  SchoolCreateManyInput: ["id", "createdAt", "updatedAt", "name", "website", "emailDomain", "state", "schooltype", "activeCooperation"],
  SchoolUpdateManyMutationInput: ["createdAt", "updatedAt", "name", "website", "emailDomain", "state", "schooltype", "activeCooperation"],
  ScreenerCreateInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "password", "verified", "oldNumberID", "instructor_screening", "project_coaching_screening", "screening"],
  ScreenerUpdateInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "password", "verified", "oldNumberID", "instructor_screening", "project_coaching_screening", "screening"],
  ScreenerCreateManyInput: ["id", "createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "password", "verified", "oldNumberID"],
  ScreenerUpdateManyMutationInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "password", "verified", "oldNumberID"],
  ScreeningCreateInput: ["success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt", "screener", "student"],
  ScreeningUpdateInput: ["success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt", "screener", "student"],
  ScreeningCreateManyInput: ["id", "success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt", "screenerId", "studentId"],
  ScreeningUpdateManyMutationInput: ["success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt"],
  StudentCreateInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "phone", "feedback", "newsletter", "isStudent", "subjects", "openMatchRequestCount", "isInstructor", "msg", "state", "university", "module", "moduleHours", "isProjectCoach", "wasJufoParticipant", "hasJufoCertificate", "jufoPastParticipationInfo", "jufoPastParticipationConfirmed", "isUniversityStudent", "openProjectMatchRequestCount", "sentJufoAlumniScreeningReminderCount", "lastSentJufoAlumniScreeningInvitationDate", "supportsInDaZ", "sentScreeningReminderCount", "lastSentScreeningInvitationDate", "sentInstructorScreeningReminderCount", "lastSentInstructorScreeningInvitationDate", "lastUpdatedSettingsViaBlocker", "registrationSource", "languages", "course", "course_guest", "course_instructors_student", "course_participation_certificate", "expert_data", "instructor_screening", "jufo_verification_transmission", "lecture", "match", "participation_certificate", "project_coaching_screening", "project_field_with_grade_restriction", "project_match", "screening", "subcourse_instructors_student"],
  StudentUpdateInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "phone", "feedback", "newsletter", "isStudent", "subjects", "openMatchRequestCount", "isInstructor", "msg", "state", "university", "module", "moduleHours", "isProjectCoach", "wasJufoParticipant", "hasJufoCertificate", "jufoPastParticipationInfo", "jufoPastParticipationConfirmed", "isUniversityStudent", "openProjectMatchRequestCount", "sentJufoAlumniScreeningReminderCount", "lastSentJufoAlumniScreeningInvitationDate", "supportsInDaZ", "sentScreeningReminderCount", "lastSentScreeningInvitationDate", "sentInstructorScreeningReminderCount", "lastSentInstructorScreeningInvitationDate", "lastUpdatedSettingsViaBlocker", "registrationSource", "languages", "course", "course_guest", "course_instructors_student", "course_participation_certificate", "expert_data", "instructor_screening", "jufo_verification_transmission", "lecture", "match", "participation_certificate", "project_coaching_screening", "project_field_with_grade_restriction", "project_match", "screening", "subcourse_instructors_student"],
  StudentCreateManyInput: ["id", "createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "phone", "feedback", "newsletter", "isStudent", "subjects", "openMatchRequestCount", "isInstructor", "msg", "state", "university", "module", "moduleHours", "isProjectCoach", "wasJufoParticipant", "hasJufoCertificate", "jufoPastParticipationInfo", "jufoPastParticipationConfirmed", "isUniversityStudent", "openProjectMatchRequestCount", "sentJufoAlumniScreeningReminderCount", "lastSentJufoAlumniScreeningInvitationDate", "supportsInDaZ", "sentScreeningReminderCount", "lastSentScreeningInvitationDate", "sentInstructorScreeningReminderCount", "lastSentInstructorScreeningInvitationDate", "lastUpdatedSettingsViaBlocker", "registrationSource", "languages"],
  StudentUpdateManyMutationInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "phone", "feedback", "newsletter", "isStudent", "subjects", "openMatchRequestCount", "isInstructor", "msg", "state", "university", "module", "moduleHours", "isProjectCoach", "wasJufoParticipant", "hasJufoCertificate", "jufoPastParticipationInfo", "jufoPastParticipationConfirmed", "isUniversityStudent", "openProjectMatchRequestCount", "sentJufoAlumniScreeningReminderCount", "lastSentJufoAlumniScreeningInvitationDate", "supportsInDaZ", "sentScreeningReminderCount", "lastSentScreeningInvitationDate", "sentInstructorScreeningReminderCount", "lastSentInstructorScreeningInvitationDate", "lastUpdatedSettingsViaBlocker", "registrationSource", "languages"],
  SubcourseCreateInput: ["createdAt", "updatedAt", "minGrade", "maxGrade", "maxParticipants", "joinAfterStart", "published", "cancelled", "course", "course_participation_certificate", "lecture", "subcourse_instructors_student", "subcourse_participants_pupil", "subcourse_waiting_list_pupil"],
  SubcourseUpdateInput: ["createdAt", "updatedAt", "minGrade", "maxGrade", "maxParticipants", "joinAfterStart", "published", "cancelled", "course", "course_participation_certificate", "lecture", "subcourse_instructors_student", "subcourse_participants_pupil", "subcourse_waiting_list_pupil"],
  SubcourseCreateManyInput: ["id", "createdAt", "updatedAt", "minGrade", "maxGrade", "maxParticipants", "joinAfterStart", "published", "cancelled", "courseId"],
  SubcourseUpdateManyMutationInput: ["createdAt", "updatedAt", "minGrade", "maxGrade", "maxParticipants", "joinAfterStart", "published", "cancelled"],
  Subcourse_instructors_studentCreateInput: ["student", "subcourse"],
  Subcourse_instructors_studentUpdateInput: ["student", "subcourse"],
  Subcourse_instructors_studentCreateManyInput: ["subcourseId", "studentId"],
  Subcourse_instructors_studentUpdateManyMutationInput: [],
  Subcourse_participants_pupilCreateInput: ["pupil", "subcourse"],
  Subcourse_participants_pupilUpdateInput: ["pupil", "subcourse"],
  Subcourse_participants_pupilCreateManyInput: ["subcourseId", "pupilId"],
  Subcourse_participants_pupilUpdateManyMutationInput: [],
  Subcourse_waiting_list_pupilCreateInput: ["pupil", "subcourse"],
  Subcourse_waiting_list_pupilUpdateInput: ["pupil", "subcourse"],
  Subcourse_waiting_list_pupilCreateManyInput: ["subcourseId", "pupilId"],
  Subcourse_waiting_list_pupilUpdateManyMutationInput: [],
  IntFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
  DateTimeFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
  StringFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "mode", "not"],
  StringNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "mode", "not"],
  IntWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_avg", "_sum", "_min", "_max"],
  DateTimeWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_min", "_max"],
  StringWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "mode", "not", "_count", "_min", "_max"],
  StringNullableWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "mode", "not", "_count", "_min", "_max"],
  JsonFilter: ["equals", "not"],
  JsonWithAggregatesFilter: ["equals", "not", "_count", "_min", "_max"],
  Enumcourse_category_enumFilter: ["equals", "in", "notIn", "not"],
  Enumcourse_coursestate_enumFilter: ["equals", "in", "notIn", "not"],
  BoolFilter: ["equals", "not"],
  IntNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
  StudentRelationFilter: ["is", "isNot"],
  Course_guestListRelationFilter: ["every", "some", "none"],
  Course_instructors_studentListRelationFilter: ["every", "some", "none"],
  Course_tags_course_tagListRelationFilter: ["every", "some", "none"],
  SubcourseListRelationFilter: ["every", "some", "none"],
  Enumcourse_category_enumWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  Enumcourse_coursestate_enumWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  BoolWithAggregatesFilter: ["equals", "not", "_count", "_min", "_max"],
  IntNullableWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_avg", "_sum", "_min", "_max"],
  LectureRelationFilter: ["is", "isNot"],
  PupilRelationFilter: ["is", "isNot"],
  CourseRelationFilter: ["is", "isNot"],
  course_instructors_studentCourseIdStudentIdCompoundUniqueInput: ["courseId", "studentId"],
  SubcourseRelationFilter: ["is", "isNot"],
  Course_tagRelationFilter: ["is", "isNot"],
  course_tags_course_tagCourseIdCourseTagIdCompoundUniqueInput: ["courseId", "courseTagId"],
  Enumexpert_data_allowed_enumFilter: ["equals", "in", "notIn", "not"],
  Expert_data_expertise_tags_expertise_tagListRelationFilter: ["every", "some", "none"],
  Enumexpert_data_allowed_enumWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  Expert_dataRelationFilter: ["is", "isNot"],
  Expertise_tagRelationFilter: ["is", "isNot"],
  expert_data_expertise_tags_expertise_tagExpertDataIdExpertiseTagIdCompoundUniqueInput: ["expertDataId", "expertiseTagId"],
  ScreenerRelationFilter: ["is", "isNot"],
  Course_attendance_logListRelationFilter: ["every", "some", "none"],
  Enumlog_logtype_enumFilter: ["equals", "in", "notIn", "not"],
  Enumlog_logtype_enumWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  DateTimeNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
  Enummatch_source_enumFilter: ["equals", "in", "notIn", "not"],
  matchUQ_MATCHCompoundUniqueInput: ["studentId", "pupilId"],
  DateTimeNullableWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_min", "_max"],
  Enummatch_source_enumWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  Enummentor_division_enumNullableListFilter: ["equals", "has", "hasEvery", "hasSome", "isEmpty"],
  Enummentor_expertise_enumNullableListFilter: ["equals", "has", "hasEvery", "hasSome", "isEmpty"],
  BoolNullableFilter: ["equals", "not"],
  BoolNullableWithAggregatesFilter: ["equals", "not", "_count", "_min", "_max"],
  StringNullableListFilter: ["equals", "has", "hasEvery", "hasSome", "isEmpty"],
  DecimalFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
  BytesNullableFilter: ["equals", "not"],
  DecimalWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_avg", "_sum", "_min", "_max"],
  BytesNullableWithAggregatesFilter: ["equals", "not", "_count", "_min", "_max"],
  Enumproject_field_with_grade_restriction_projectfield_enumFilter: ["equals", "in", "notIn", "not"],
  project_field_with_grade_restrictionUQ_PROJECT_FIELDSCompoundUniqueInput: ["projectField", "studentId"],
  Enumproject_field_with_grade_restriction_projectfield_enumWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  project_matchUQ_PJ_MATCHCompoundUniqueInput: ["studentId", "pupilId"],
  Enumpupil_state_enumFilter: ["equals", "in", "notIn", "not"],
  Enumpupil_schooltype_enumFilter: ["equals", "in", "notIn", "not"],
  Enumpupil_projectfields_enumNullableListFilter: ["equals", "has", "hasEvery", "hasSome", "isEmpty"],
  Enumpupil_languages_enumNullableListFilter: ["equals", "has", "hasEvery", "hasSome", "isEmpty"],
  Enumpupil_learninggermansince_enumNullableFilter: ["equals", "in", "notIn", "not"],
  Enumpupil_registrationsource_enumFilter: ["equals", "in", "notIn", "not"],
  SchoolRelationFilter: ["is", "isNot"],
  Course_participation_certificateListRelationFilter: ["every", "some", "none"],
  MatchListRelationFilter: ["every", "some", "none"],
  Participation_certificateListRelationFilter: ["every", "some", "none"],
  Project_matchListRelationFilter: ["every", "some", "none"],
  Pupil_tutoring_interest_confirmation_requestRelationFilter: ["is", "isNot"],
  Subcourse_participants_pupilListRelationFilter: ["every", "some", "none"],
  Subcourse_waiting_list_pupilListRelationFilter: ["every", "some", "none"],
  Enumpupil_state_enumWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  Enumpupil_schooltype_enumWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  Enumpupil_learninggermansince_enumNullableWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  Enumpupil_registrationsource_enumWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  Enumschool_state_enumNullableFilter: ["equals", "in", "notIn", "not"],
  Enumschool_schooltype_enumFilter: ["equals", "in", "notIn", "not"],
  PupilListRelationFilter: ["every", "some", "none"],
  Enumschool_state_enumNullableWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  Enumschool_schooltype_enumWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  Instructor_screeningListRelationFilter: ["every", "some", "none"],
  Project_coaching_screeningListRelationFilter: ["every", "some", "none"],
  ScreeningListRelationFilter: ["every", "some", "none"],
  Enumstudent_state_enumNullableFilter: ["equals", "in", "notIn", "not"],
  Enumstudent_module_enumNullableFilter: ["equals", "in", "notIn", "not"],
  Enumstudent_languages_enumNullableListFilter: ["equals", "has", "hasEvery", "hasSome", "isEmpty"],
  Enumstudent_registrationsource_enumFilter: ["equals", "in", "notIn", "not"],
  CourseListRelationFilter: ["every", "some", "none"],
  Instructor_screeningRelationFilter: ["is", "isNot"],
  Jufo_verification_transmissionRelationFilter: ["is", "isNot"],
  LectureListRelationFilter: ["every", "some", "none"],
  Project_coaching_screeningRelationFilter: ["is", "isNot"],
  Project_field_with_grade_restrictionListRelationFilter: ["every", "some", "none"],
  ScreeningRelationFilter: ["is", "isNot"],
  Subcourse_instructors_studentListRelationFilter: ["every", "some", "none"],
  Enumstudent_state_enumNullableWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  Enumstudent_module_enumNullableWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  Enumstudent_registrationsource_enumWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  subcourse_instructors_studentSubcourseIdStudentIdCompoundUniqueInput: ["subcourseId", "studentId"],
  subcourse_participants_pupilSubcourseIdPupilIdCompoundUniqueInput: ["subcourseId", "pupilId"],
  subcourse_waiting_list_pupilSubcourseIdPupilIdCompoundUniqueInput: ["subcourseId", "pupilId"],
  DateTimeFieldUpdateOperationsInput: ["set"],
  StringFieldUpdateOperationsInput: ["set"],
  NullableStringFieldUpdateOperationsInput: ["set"],
  IntFieldUpdateOperationsInput: ["set", "increment", "decrement", "multiply", "divide"],
  StudentCreateNestedOneWithoutCourseInput: ["create", "connectOrCreate", "connect"],
  Course_guestCreateNestedManyWithoutCourseInput: ["create", "connectOrCreate", "createMany", "connect"],
  Course_instructors_studentCreateNestedManyWithoutCourseInput: ["create", "connectOrCreate", "createMany", "connect"],
  Course_tags_course_tagCreateNestedManyWithoutCourseInput: ["create", "connectOrCreate", "createMany", "connect"],
  SubcourseCreateNestedManyWithoutCourseInput: ["create", "connectOrCreate", "createMany", "connect"],
  Enumcourse_category_enumFieldUpdateOperationsInput: ["set"],
  Enumcourse_coursestate_enumFieldUpdateOperationsInput: ["set"],
  BoolFieldUpdateOperationsInput: ["set"],
  StudentUpdateOneWithoutCourseInput: ["create", "connectOrCreate", "upsert", "connect", "disconnect", "delete", "update"],
  Course_guestUpdateManyWithoutCourseInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
  Course_instructors_studentUpdateManyWithoutCourseInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
  Course_tags_course_tagUpdateManyWithoutCourseInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
  SubcourseUpdateManyWithoutCourseInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
  NullableIntFieldUpdateOperationsInput: ["set", "increment", "decrement", "multiply", "divide"],
  LectureCreateNestedOneWithoutCourse_attendance_logInput: ["create", "connectOrCreate", "connect"],
  PupilCreateNestedOneWithoutCourse_attendance_logInput: ["create", "connectOrCreate", "connect"],
  LectureUpdateOneWithoutCourse_attendance_logInput: ["create", "connectOrCreate", "upsert", "connect", "disconnect", "delete", "update"],
  PupilUpdateOneWithoutCourse_attendance_logInput: ["create", "connectOrCreate", "upsert", "connect", "disconnect", "delete", "update"],
  CourseCreateNestedOneWithoutCourse_guestInput: ["create", "connectOrCreate", "connect"],
  StudentCreateNestedOneWithoutCourse_guestInput: ["create", "connectOrCreate", "connect"],
  CourseUpdateOneWithoutCourse_guestInput: ["create", "connectOrCreate", "upsert", "connect", "disconnect", "delete", "update"],
  StudentUpdateOneWithoutCourse_guestInput: ["create", "connectOrCreate", "upsert", "connect", "disconnect", "delete", "update"],
  CourseCreateNestedOneWithoutCourse_instructors_studentInput: ["create", "connectOrCreate", "connect"],
  StudentCreateNestedOneWithoutCourse_instructors_studentInput: ["create", "connectOrCreate", "connect"],
  CourseUpdateOneRequiredWithoutCourse_instructors_studentInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
  StudentUpdateOneRequiredWithoutCourse_instructors_studentInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
  StudentCreateNestedOneWithoutCourse_participation_certificateInput: ["create", "connectOrCreate", "connect"],
  PupilCreateNestedOneWithoutCourse_participation_certificateInput: ["create", "connectOrCreate", "connect"],
  SubcourseCreateNestedOneWithoutCourse_participation_certificateInput: ["create", "connectOrCreate", "connect"],
  StudentUpdateOneWithoutCourse_participation_certificateInput: ["create", "connectOrCreate", "upsert", "connect", "disconnect", "delete", "update"],
  PupilUpdateOneWithoutCourse_participation_certificateInput: ["create", "connectOrCreate", "upsert", "connect", "disconnect", "delete", "update"],
  SubcourseUpdateOneWithoutCourse_participation_certificateInput: ["create", "connectOrCreate", "upsert", "connect", "disconnect", "delete", "update"],
  Course_tags_course_tagCreateNestedManyWithoutCourse_tagInput: ["create", "connectOrCreate", "createMany", "connect"],
  Course_tags_course_tagUpdateManyWithoutCourse_tagInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
  CourseCreateNestedOneWithoutCourse_tags_course_tagInput: ["create", "connectOrCreate", "connect"],
  Course_tagCreateNestedOneWithoutCourse_tags_course_tagInput: ["create", "connectOrCreate", "connect"],
  CourseUpdateOneRequiredWithoutCourse_tags_course_tagInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
  Course_tagUpdateOneRequiredWithoutCourse_tags_course_tagInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
  StudentCreateNestedOneWithoutExpert_dataInput: ["create", "connectOrCreate", "connect"],
  Expert_data_expertise_tags_expertise_tagCreateNestedManyWithoutExpert_dataInput: ["create", "connectOrCreate", "createMany", "connect"],
  Enumexpert_data_allowed_enumFieldUpdateOperationsInput: ["set"],
  StudentUpdateOneWithoutExpert_dataInput: ["create", "connectOrCreate", "upsert", "connect", "disconnect", "delete", "update"],
  Expert_data_expertise_tags_expertise_tagUpdateManyWithoutExpert_dataInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
  Expert_dataCreateNestedOneWithoutExpert_data_expertise_tags_expertise_tagInput: ["create", "connectOrCreate", "connect"],
  Expertise_tagCreateNestedOneWithoutExpert_data_expertise_tags_expertise_tagInput: ["create", "connectOrCreate", "connect"],
  Expert_dataUpdateOneRequiredWithoutExpert_data_expertise_tags_expertise_tagInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
  Expertise_tagUpdateOneRequiredWithoutExpert_data_expertise_tags_expertise_tagInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
  Expert_data_expertise_tags_expertise_tagCreateNestedManyWithoutExpertise_tagInput: ["create", "connectOrCreate", "createMany", "connect"],
  Expert_data_expertise_tags_expertise_tagUpdateManyWithoutExpertise_tagInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
  ScreenerCreateNestedOneWithoutInstructor_screeningInput: ["create", "connectOrCreate", "connect"],
  StudentCreateNestedOneWithoutInstructor_screeningInput: ["create", "connectOrCreate", "connect"],
  ScreenerUpdateOneWithoutInstructor_screeningInput: ["create", "connectOrCreate", "upsert", "connect", "disconnect", "delete", "update"],
  StudentUpdateOneWithoutInstructor_screeningInput: ["create", "connectOrCreate", "upsert", "connect", "disconnect", "delete", "update"],
  StudentCreateNestedOneWithoutJufo_verification_transmissionInput: ["create", "connectOrCreate", "connect"],
  StudentUpdateOneWithoutJufo_verification_transmissionInput: ["create", "connectOrCreate", "upsert", "connect", "disconnect", "delete", "update"],
  StudentCreateNestedOneWithoutLectureInput: ["create", "connectOrCreate", "connect"],
  SubcourseCreateNestedOneWithoutLectureInput: ["create", "connectOrCreate", "connect"],
  Course_attendance_logCreateNestedManyWithoutLectureInput: ["create", "connectOrCreate", "createMany", "connect"],
  StudentUpdateOneWithoutLectureInput: ["create", "connectOrCreate", "upsert", "connect", "disconnect", "delete", "update"],
  SubcourseUpdateOneWithoutLectureInput: ["create", "connectOrCreate", "upsert", "connect", "disconnect", "delete", "update"],
  Course_attendance_logUpdateManyWithoutLectureInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
  Enumlog_logtype_enumFieldUpdateOperationsInput: ["set"],
  PupilCreateNestedOneWithoutMatchInput: ["create", "connectOrCreate", "connect"],
  StudentCreateNestedOneWithoutMatchInput: ["create", "connectOrCreate", "connect"],
  NullableDateTimeFieldUpdateOperationsInput: ["set"],
  Enummatch_source_enumFieldUpdateOperationsInput: ["set"],
  PupilUpdateOneWithoutMatchInput: ["create", "connectOrCreate", "upsert", "connect", "disconnect", "delete", "update"],
  StudentUpdateOneWithoutMatchInput: ["create", "connectOrCreate", "upsert", "connect", "disconnect", "delete", "update"],
  MentorCreatedivisionInput: ["set"],
  MentorCreateexpertiseInput: ["set"],
  NullableBoolFieldUpdateOperationsInput: ["set"],
  MentorUpdatedivisionInput: ["set", "push"],
  MentorUpdateexpertiseInput: ["set", "push"],
  MentorCreateManydivisionInput: ["set"],
  MentorCreateManyexpertiseInput: ["set"],
  NotificationCreateonActionsInput: ["set"],
  NotificationCreatecategoryInput: ["set"],
  NotificationCreatecancelledOnActionInput: ["set"],
  NotificationUpdateonActionsInput: ["set", "push"],
  NotificationUpdatecategoryInput: ["set", "push"],
  NotificationUpdatecancelledOnActionInput: ["set", "push"],
  NotificationCreateManyonActionsInput: ["set"],
  NotificationCreateManycategoryInput: ["set"],
  NotificationCreateManycancelledOnActionInput: ["set"],
  PupilCreateNestedOneWithoutParticipation_certificateInput: ["create", "connectOrCreate", "connect"],
  StudentCreateNestedOneWithoutParticipation_certificateInput: ["create", "connectOrCreate", "connect"],
  DecimalFieldUpdateOperationsInput: ["set", "increment", "decrement", "multiply", "divide"],
  NullableBytesFieldUpdateOperationsInput: ["set"],
  PupilUpdateOneWithoutParticipation_certificateInput: ["create", "connectOrCreate", "upsert", "connect", "disconnect", "delete", "update"],
  StudentUpdateOneWithoutParticipation_certificateInput: ["create", "connectOrCreate", "upsert", "connect", "disconnect", "delete", "update"],
  ScreenerCreateNestedOneWithoutProject_coaching_screeningInput: ["create", "connectOrCreate", "connect"],
  StudentCreateNestedOneWithoutProject_coaching_screeningInput: ["create", "connectOrCreate", "connect"],
  ScreenerUpdateOneWithoutProject_coaching_screeningInput: ["create", "connectOrCreate", "upsert", "connect", "disconnect", "delete", "update"],
  StudentUpdateOneWithoutProject_coaching_screeningInput: ["create", "connectOrCreate", "upsert", "connect", "disconnect", "delete", "update"],
  StudentCreateNestedOneWithoutProject_field_with_grade_restrictionInput: ["create", "connectOrCreate", "connect"],
  Enumproject_field_with_grade_restriction_projectfield_enumFieldUpdateOperationsInput: ["set"],
  StudentUpdateOneRequiredWithoutProject_field_with_grade_restrictionInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
  PupilCreateNestedOneWithoutProject_matchInput: ["create", "connectOrCreate", "connect"],
  StudentCreateNestedOneWithoutProject_matchInput: ["create", "connectOrCreate", "connect"],
  PupilUpdateOneWithoutProject_matchInput: ["create", "connectOrCreate", "upsert", "connect", "disconnect", "delete", "update"],
  StudentUpdateOneWithoutProject_matchInput: ["create", "connectOrCreate", "upsert", "connect", "disconnect", "delete", "update"],
  PupilCreateprojectFieldsInput: ["set"],
  PupilCreatelanguagesInput: ["set"],
  SchoolCreateNestedOneWithoutPupilInput: ["create", "connectOrCreate", "connect"],
  Course_attendance_logCreateNestedManyWithoutPupilInput: ["create", "connectOrCreate", "createMany", "connect"],
  Course_participation_certificateCreateNestedManyWithoutPupilInput: ["create", "connectOrCreate", "createMany", "connect"],
  MatchCreateNestedManyWithoutPupilInput: ["create", "connectOrCreate", "createMany", "connect"],
  Participation_certificateCreateNestedManyWithoutPupilInput: ["create", "connectOrCreate", "createMany", "connect"],
  Project_matchCreateNestedManyWithoutPupilInput: ["create", "connectOrCreate", "createMany", "connect"],
  Pupil_tutoring_interest_confirmation_requestCreateNestedOneWithoutPupilInput: ["create", "connectOrCreate", "connect"],
  Subcourse_participants_pupilCreateNestedManyWithoutPupilInput: ["create", "connectOrCreate", "createMany", "connect"],
  Subcourse_waiting_list_pupilCreateNestedManyWithoutPupilInput: ["create", "connectOrCreate", "createMany", "connect"],
  Enumpupil_state_enumFieldUpdateOperationsInput: ["set"],
  Enumpupil_schooltype_enumFieldUpdateOperationsInput: ["set"],
  NullableEnumpupil_learninggermansince_enumFieldUpdateOperationsInput: ["set"],
  Enumpupil_registrationsource_enumFieldUpdateOperationsInput: ["set"],
  PupilUpdateprojectFieldsInput: ["set", "push"],
  PupilUpdatelanguagesInput: ["set", "push"],
  SchoolUpdateOneWithoutPupilInput: ["create", "connectOrCreate", "upsert", "connect", "disconnect", "delete", "update"],
  Course_attendance_logUpdateManyWithoutPupilInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
  Course_participation_certificateUpdateManyWithoutPupilInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
  MatchUpdateManyWithoutPupilInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
  Participation_certificateUpdateManyWithoutPupilInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
  Project_matchUpdateManyWithoutPupilInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
  Pupil_tutoring_interest_confirmation_requestUpdateOneWithoutPupilInput: ["create", "connectOrCreate", "upsert", "connect", "disconnect", "delete", "update"],
  Subcourse_participants_pupilUpdateManyWithoutPupilInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
  Subcourse_waiting_list_pupilUpdateManyWithoutPupilInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
  PupilCreateManyprojectFieldsInput: ["set"],
  PupilCreateManylanguagesInput: ["set"],
  PupilCreateNestedOneWithoutPupil_tutoring_interest_confirmation_requestInput: ["create", "connectOrCreate", "connect"],
  PupilUpdateOneWithoutPupil_tutoring_interest_confirmation_requestInput: ["create", "connectOrCreate", "upsert", "connect", "disconnect", "delete", "update"],
  PupilCreateNestedManyWithoutSchoolInput: ["create", "connectOrCreate", "createMany", "connect"],
  NullableEnumschool_state_enumFieldUpdateOperationsInput: ["set"],
  Enumschool_schooltype_enumFieldUpdateOperationsInput: ["set"],
  PupilUpdateManyWithoutSchoolInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
  Instructor_screeningCreateNestedManyWithoutScreenerInput: ["create", "connectOrCreate", "createMany", "connect"],
  Project_coaching_screeningCreateNestedManyWithoutScreenerInput: ["create", "connectOrCreate", "createMany", "connect"],
  ScreeningCreateNestedManyWithoutScreenerInput: ["create", "connectOrCreate", "createMany", "connect"],
  Instructor_screeningUpdateManyWithoutScreenerInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
  Project_coaching_screeningUpdateManyWithoutScreenerInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
  ScreeningUpdateManyWithoutScreenerInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
  ScreenerCreateNestedOneWithoutScreeningInput: ["create", "connectOrCreate", "connect"],
  StudentCreateNestedOneWithoutScreeningInput: ["create", "connectOrCreate", "connect"],
  ScreenerUpdateOneWithoutScreeningInput: ["create", "connectOrCreate", "upsert", "connect", "disconnect", "delete", "update"],
  StudentUpdateOneWithoutScreeningInput: ["create", "connectOrCreate", "upsert", "connect", "disconnect", "delete", "update"],
  StudentCreatelanguagesInput: ["set"],
  CourseCreateNestedManyWithoutStudentInput: ["create", "connectOrCreate", "createMany", "connect"],
  Course_guestCreateNestedManyWithoutStudentInput: ["create", "connectOrCreate", "createMany", "connect"],
  Course_instructors_studentCreateNestedManyWithoutStudentInput: ["create", "connectOrCreate", "createMany", "connect"],
  Course_participation_certificateCreateNestedManyWithoutStudentInput: ["create", "connectOrCreate", "createMany", "connect"],
  Expert_dataCreateNestedOneWithoutStudentInput: ["create", "connectOrCreate", "connect"],
  Instructor_screeningCreateNestedOneWithoutStudentInput: ["create", "connectOrCreate", "connect"],
  Jufo_verification_transmissionCreateNestedOneWithoutStudentInput: ["create", "connectOrCreate", "connect"],
  LectureCreateNestedManyWithoutStudentInput: ["create", "connectOrCreate", "createMany", "connect"],
  MatchCreateNestedManyWithoutStudentInput: ["create", "connectOrCreate", "createMany", "connect"],
  Participation_certificateCreateNestedManyWithoutStudentInput: ["create", "connectOrCreate", "createMany", "connect"],
  Project_coaching_screeningCreateNestedOneWithoutStudentInput: ["create", "connectOrCreate", "connect"],
  Project_field_with_grade_restrictionCreateNestedManyWithoutStudentInput: ["create", "connectOrCreate", "createMany", "connect"],
  Project_matchCreateNestedManyWithoutStudentInput: ["create", "connectOrCreate", "createMany", "connect"],
  ScreeningCreateNestedOneWithoutStudentInput: ["create", "connectOrCreate", "connect"],
  Subcourse_instructors_studentCreateNestedManyWithoutStudentInput: ["create", "connectOrCreate", "createMany", "connect"],
  NullableEnumstudent_state_enumFieldUpdateOperationsInput: ["set"],
  NullableEnumstudent_module_enumFieldUpdateOperationsInput: ["set"],
  Enumstudent_registrationsource_enumFieldUpdateOperationsInput: ["set"],
  StudentUpdatelanguagesInput: ["set", "push"],
  CourseUpdateManyWithoutStudentInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
  Course_guestUpdateManyWithoutStudentInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
  Course_instructors_studentUpdateManyWithoutStudentInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
  Course_participation_certificateUpdateManyWithoutStudentInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
  Expert_dataUpdateOneWithoutStudentInput: ["create", "connectOrCreate", "upsert", "connect", "disconnect", "delete", "update"],
  Instructor_screeningUpdateOneWithoutStudentInput: ["create", "connectOrCreate", "upsert", "connect", "disconnect", "delete", "update"],
  Jufo_verification_transmissionUpdateOneWithoutStudentInput: ["create", "connectOrCreate", "upsert", "connect", "disconnect", "delete", "update"],
  LectureUpdateManyWithoutStudentInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
  MatchUpdateManyWithoutStudentInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
  Participation_certificateUpdateManyWithoutStudentInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
  Project_coaching_screeningUpdateOneWithoutStudentInput: ["create", "connectOrCreate", "upsert", "connect", "disconnect", "delete", "update"],
  Project_field_with_grade_restrictionUpdateManyWithoutStudentInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
  Project_matchUpdateManyWithoutStudentInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
  ScreeningUpdateOneWithoutStudentInput: ["create", "connectOrCreate", "upsert", "connect", "disconnect", "delete", "update"],
  Subcourse_instructors_studentUpdateManyWithoutStudentInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
  StudentCreateManylanguagesInput: ["set"],
  CourseCreateNestedOneWithoutSubcourseInput: ["create", "connectOrCreate", "connect"],
  Course_participation_certificateCreateNestedManyWithoutSubcourseInput: ["create", "connectOrCreate", "createMany", "connect"],
  LectureCreateNestedManyWithoutSubcourseInput: ["create", "connectOrCreate", "createMany", "connect"],
  Subcourse_instructors_studentCreateNestedManyWithoutSubcourseInput: ["create", "connectOrCreate", "createMany", "connect"],
  Subcourse_participants_pupilCreateNestedManyWithoutSubcourseInput: ["create", "connectOrCreate", "createMany", "connect"],
  Subcourse_waiting_list_pupilCreateNestedManyWithoutSubcourseInput: ["create", "connectOrCreate", "createMany", "connect"],
  CourseUpdateOneWithoutSubcourseInput: ["create", "connectOrCreate", "upsert", "connect", "disconnect", "delete", "update"],
  Course_participation_certificateUpdateManyWithoutSubcourseInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
  LectureUpdateManyWithoutSubcourseInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
  Subcourse_instructors_studentUpdateManyWithoutSubcourseInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
  Subcourse_participants_pupilUpdateManyWithoutSubcourseInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
  Subcourse_waiting_list_pupilUpdateManyWithoutSubcourseInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
  StudentCreateNestedOneWithoutSubcourse_instructors_studentInput: ["create", "connectOrCreate", "connect"],
  SubcourseCreateNestedOneWithoutSubcourse_instructors_studentInput: ["create", "connectOrCreate", "connect"],
  StudentUpdateOneRequiredWithoutSubcourse_instructors_studentInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
  SubcourseUpdateOneRequiredWithoutSubcourse_instructors_studentInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
  PupilCreateNestedOneWithoutSubcourse_participants_pupilInput: ["create", "connectOrCreate", "connect"],
  SubcourseCreateNestedOneWithoutSubcourse_participants_pupilInput: ["create", "connectOrCreate", "connect"],
  PupilUpdateOneRequiredWithoutSubcourse_participants_pupilInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
  SubcourseUpdateOneRequiredWithoutSubcourse_participants_pupilInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
  PupilCreateNestedOneWithoutSubcourse_waiting_list_pupilInput: ["create", "connectOrCreate", "connect"],
  SubcourseCreateNestedOneWithoutSubcourse_waiting_list_pupilInput: ["create", "connectOrCreate", "connect"],
  PupilUpdateOneRequiredWithoutSubcourse_waiting_list_pupilInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
  SubcourseUpdateOneRequiredWithoutSubcourse_waiting_list_pupilInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
  NestedIntFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
  NestedDateTimeFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
  NestedStringFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "not"],
  NestedStringNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "not"],
  NestedIntWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_avg", "_sum", "_min", "_max"],
  NestedFloatFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
  NestedDateTimeWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_min", "_max"],
  NestedStringWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "not", "_count", "_min", "_max"],
  NestedStringNullableWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "not", "_count", "_min", "_max"],
  NestedIntNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
  NestedJsonFilter: ["equals", "not"],
  NestedEnumcourse_category_enumFilter: ["equals", "in", "notIn", "not"],
  NestedEnumcourse_coursestate_enumFilter: ["equals", "in", "notIn", "not"],
  NestedBoolFilter: ["equals", "not"],
  NestedEnumcourse_category_enumWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  NestedEnumcourse_coursestate_enumWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  NestedBoolWithAggregatesFilter: ["equals", "not", "_count", "_min", "_max"],
  NestedIntNullableWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_avg", "_sum", "_min", "_max"],
  NestedFloatNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
  NestedEnumexpert_data_allowed_enumFilter: ["equals", "in", "notIn", "not"],
  NestedEnumexpert_data_allowed_enumWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  NestedEnumlog_logtype_enumFilter: ["equals", "in", "notIn", "not"],
  NestedEnumlog_logtype_enumWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  NestedDateTimeNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
  NestedEnummatch_source_enumFilter: ["equals", "in", "notIn", "not"],
  NestedDateTimeNullableWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_min", "_max"],
  NestedEnummatch_source_enumWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  NestedBoolNullableFilter: ["equals", "not"],
  NestedBoolNullableWithAggregatesFilter: ["equals", "not", "_count", "_min", "_max"],
  NestedDecimalFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
  NestedBytesNullableFilter: ["equals", "not"],
  NestedDecimalWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_avg", "_sum", "_min", "_max"],
  NestedBytesNullableWithAggregatesFilter: ["equals", "not", "_count", "_min", "_max"],
  NestedEnumproject_field_with_grade_restriction_projectfield_enumFilter: ["equals", "in", "notIn", "not"],
  NestedEnumproject_field_with_grade_restriction_projectfield_enumWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  NestedEnumpupil_state_enumFilter: ["equals", "in", "notIn", "not"],
  NestedEnumpupil_schooltype_enumFilter: ["equals", "in", "notIn", "not"],
  NestedEnumpupil_learninggermansince_enumNullableFilter: ["equals", "in", "notIn", "not"],
  NestedEnumpupil_registrationsource_enumFilter: ["equals", "in", "notIn", "not"],
  NestedEnumpupil_state_enumWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  NestedEnumpupil_schooltype_enumWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  NestedEnumpupil_learninggermansince_enumNullableWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  NestedEnumpupil_registrationsource_enumWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  NestedEnumschool_state_enumNullableFilter: ["equals", "in", "notIn", "not"],
  NestedEnumschool_schooltype_enumFilter: ["equals", "in", "notIn", "not"],
  NestedEnumschool_state_enumNullableWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  NestedEnumschool_schooltype_enumWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  NestedEnumstudent_state_enumNullableFilter: ["equals", "in", "notIn", "not"],
  NestedEnumstudent_module_enumNullableFilter: ["equals", "in", "notIn", "not"],
  NestedEnumstudent_registrationsource_enumFilter: ["equals", "in", "notIn", "not"],
  NestedEnumstudent_state_enumNullableWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  NestedEnumstudent_module_enumNullableWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  NestedEnumstudent_registrationsource_enumWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  StudentCreateWithoutCourseInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "phone", "feedback", "newsletter", "isStudent", "subjects", "openMatchRequestCount", "isInstructor", "msg", "state", "university", "module", "moduleHours", "isProjectCoach", "wasJufoParticipant", "hasJufoCertificate", "jufoPastParticipationInfo", "jufoPastParticipationConfirmed", "isUniversityStudent", "openProjectMatchRequestCount", "sentJufoAlumniScreeningReminderCount", "lastSentJufoAlumniScreeningInvitationDate", "supportsInDaZ", "sentScreeningReminderCount", "lastSentScreeningInvitationDate", "sentInstructorScreeningReminderCount", "lastSentInstructorScreeningInvitationDate", "lastUpdatedSettingsViaBlocker", "registrationSource", "languages", "course_guest", "course_instructors_student", "course_participation_certificate", "expert_data", "instructor_screening", "jufo_verification_transmission", "lecture", "match", "participation_certificate", "project_coaching_screening", "project_field_with_grade_restriction", "project_match", "screening", "subcourse_instructors_student"],
  StudentCreateOrConnectWithoutCourseInput: ["where", "create"],
  Course_guestCreateWithoutCourseInput: ["createdAt", "updatedAt", "token", "firstname", "lastname", "email", "student"],
  Course_guestCreateOrConnectWithoutCourseInput: ["where", "create"],
  Course_guestCreateManyCourseInputEnvelope: ["data", "skipDuplicates"],
  Course_instructors_studentCreateWithoutCourseInput: ["student"],
  Course_instructors_studentCreateOrConnectWithoutCourseInput: ["where", "create"],
  Course_instructors_studentCreateManyCourseInputEnvelope: ["data", "skipDuplicates"],
  Course_tags_course_tagCreateWithoutCourseInput: ["course_tag"],
  Course_tags_course_tagCreateOrConnectWithoutCourseInput: ["where", "create"],
  Course_tags_course_tagCreateManyCourseInputEnvelope: ["data", "skipDuplicates"],
  SubcourseCreateWithoutCourseInput: ["createdAt", "updatedAt", "minGrade", "maxGrade", "maxParticipants", "joinAfterStart", "published", "cancelled", "course_participation_certificate", "lecture", "subcourse_instructors_student", "subcourse_participants_pupil", "subcourse_waiting_list_pupil"],
  SubcourseCreateOrConnectWithoutCourseInput: ["where", "create"],
  SubcourseCreateManyCourseInputEnvelope: ["data", "skipDuplicates"],
  StudentUpsertWithoutCourseInput: ["update", "create"],
  StudentUpdateWithoutCourseInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "phone", "feedback", "newsletter", "isStudent", "subjects", "openMatchRequestCount", "isInstructor", "msg", "state", "university", "module", "moduleHours", "isProjectCoach", "wasJufoParticipant", "hasJufoCertificate", "jufoPastParticipationInfo", "jufoPastParticipationConfirmed", "isUniversityStudent", "openProjectMatchRequestCount", "sentJufoAlumniScreeningReminderCount", "lastSentJufoAlumniScreeningInvitationDate", "supportsInDaZ", "sentScreeningReminderCount", "lastSentScreeningInvitationDate", "sentInstructorScreeningReminderCount", "lastSentInstructorScreeningInvitationDate", "lastUpdatedSettingsViaBlocker", "registrationSource", "languages", "course_guest", "course_instructors_student", "course_participation_certificate", "expert_data", "instructor_screening", "jufo_verification_transmission", "lecture", "match", "participation_certificate", "project_coaching_screening", "project_field_with_grade_restriction", "project_match", "screening", "subcourse_instructors_student"],
  Course_guestUpsertWithWhereUniqueWithoutCourseInput: ["where", "update", "create"],
  Course_guestUpdateWithWhereUniqueWithoutCourseInput: ["where", "data"],
  Course_guestUpdateManyWithWhereWithoutCourseInput: ["where", "data"],
  Course_guestScalarWhereInput: ["AND", "OR", "NOT", "id", "createdAt", "updatedAt", "token", "firstname", "lastname", "email", "courseId", "inviterId"],
  Course_instructors_studentUpsertWithWhereUniqueWithoutCourseInput: ["where", "update", "create"],
  Course_instructors_studentUpdateWithWhereUniqueWithoutCourseInput: ["where", "data"],
  Course_instructors_studentUpdateManyWithWhereWithoutCourseInput: ["where", "data"],
  Course_instructors_studentScalarWhereInput: ["AND", "OR", "NOT", "courseId", "studentId"],
  Course_tags_course_tagUpsertWithWhereUniqueWithoutCourseInput: ["where", "update", "create"],
  Course_tags_course_tagUpdateWithWhereUniqueWithoutCourseInput: ["where", "data"],
  Course_tags_course_tagUpdateManyWithWhereWithoutCourseInput: ["where", "data"],
  Course_tags_course_tagScalarWhereInput: ["AND", "OR", "NOT", "courseId", "courseTagId"],
  SubcourseUpsertWithWhereUniqueWithoutCourseInput: ["where", "update", "create"],
  SubcourseUpdateWithWhereUniqueWithoutCourseInput: ["where", "data"],
  SubcourseUpdateManyWithWhereWithoutCourseInput: ["where", "data"],
  SubcourseScalarWhereInput: ["AND", "OR", "NOT", "id", "createdAt", "updatedAt", "minGrade", "maxGrade", "maxParticipants", "joinAfterStart", "published", "cancelled", "courseId"],
  LectureCreateWithoutCourse_attendance_logInput: ["createdAt", "updatedAt", "start", "duration", "student", "subcourse"],
  LectureCreateOrConnectWithoutCourse_attendance_logInput: ["where", "create"],
  PupilCreateWithoutCourse_attendance_logInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "state", "schooltype", "msg", "grade", "newsletter", "isPupil", "subjects", "openMatchRequestCount", "isParticipant", "isProjectCoachee", "isJufoParticipant", "openProjectMatchRequestCount", "projectMemberCount", "learningGermanSince", "matchingPriority", "lastUpdatedSettingsViaBlocker", "teacherEmailAddress", "registrationSource", "projectFields", "languages", "school", "course_participation_certificate", "match", "participation_certificate", "project_match", "pupil_tutoring_interest_confirmation_request", "subcourse_participants_pupil", "subcourse_waiting_list_pupil"],
  PupilCreateOrConnectWithoutCourse_attendance_logInput: ["where", "create"],
  LectureUpsertWithoutCourse_attendance_logInput: ["update", "create"],
  LectureUpdateWithoutCourse_attendance_logInput: ["createdAt", "updatedAt", "start", "duration", "student", "subcourse"],
  PupilUpsertWithoutCourse_attendance_logInput: ["update", "create"],
  PupilUpdateWithoutCourse_attendance_logInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "state", "schooltype", "msg", "grade", "newsletter", "isPupil", "subjects", "openMatchRequestCount", "isParticipant", "isProjectCoachee", "isJufoParticipant", "openProjectMatchRequestCount", "projectMemberCount", "learningGermanSince", "matchingPriority", "lastUpdatedSettingsViaBlocker", "teacherEmailAddress", "registrationSource", "projectFields", "languages", "school", "course_participation_certificate", "match", "participation_certificate", "project_match", "pupil_tutoring_interest_confirmation_request", "subcourse_participants_pupil", "subcourse_waiting_list_pupil"],
  CourseCreateWithoutCourse_guestInput: ["createdAt", "updatedAt", "name", "outline", "description", "imageKey", "category", "courseState", "screeningComment", "publicRanking", "allowContact", "student", "course_instructors_student", "course_tags_course_tag", "subcourse"],
  CourseCreateOrConnectWithoutCourse_guestInput: ["where", "create"],
  StudentCreateWithoutCourse_guestInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "phone", "feedback", "newsletter", "isStudent", "subjects", "openMatchRequestCount", "isInstructor", "msg", "state", "university", "module", "moduleHours", "isProjectCoach", "wasJufoParticipant", "hasJufoCertificate", "jufoPastParticipationInfo", "jufoPastParticipationConfirmed", "isUniversityStudent", "openProjectMatchRequestCount", "sentJufoAlumniScreeningReminderCount", "lastSentJufoAlumniScreeningInvitationDate", "supportsInDaZ", "sentScreeningReminderCount", "lastSentScreeningInvitationDate", "sentInstructorScreeningReminderCount", "lastSentInstructorScreeningInvitationDate", "lastUpdatedSettingsViaBlocker", "registrationSource", "languages", "course", "course_instructors_student", "course_participation_certificate", "expert_data", "instructor_screening", "jufo_verification_transmission", "lecture", "match", "participation_certificate", "project_coaching_screening", "project_field_with_grade_restriction", "project_match", "screening", "subcourse_instructors_student"],
  StudentCreateOrConnectWithoutCourse_guestInput: ["where", "create"],
  CourseUpsertWithoutCourse_guestInput: ["update", "create"],
  CourseUpdateWithoutCourse_guestInput: ["createdAt", "updatedAt", "name", "outline", "description", "imageKey", "category", "courseState", "screeningComment", "publicRanking", "allowContact", "student", "course_instructors_student", "course_tags_course_tag", "subcourse"],
  StudentUpsertWithoutCourse_guestInput: ["update", "create"],
  StudentUpdateWithoutCourse_guestInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "phone", "feedback", "newsletter", "isStudent", "subjects", "openMatchRequestCount", "isInstructor", "msg", "state", "university", "module", "moduleHours", "isProjectCoach", "wasJufoParticipant", "hasJufoCertificate", "jufoPastParticipationInfo", "jufoPastParticipationConfirmed", "isUniversityStudent", "openProjectMatchRequestCount", "sentJufoAlumniScreeningReminderCount", "lastSentJufoAlumniScreeningInvitationDate", "supportsInDaZ", "sentScreeningReminderCount", "lastSentScreeningInvitationDate", "sentInstructorScreeningReminderCount", "lastSentInstructorScreeningInvitationDate", "lastUpdatedSettingsViaBlocker", "registrationSource", "languages", "course", "course_instructors_student", "course_participation_certificate", "expert_data", "instructor_screening", "jufo_verification_transmission", "lecture", "match", "participation_certificate", "project_coaching_screening", "project_field_with_grade_restriction", "project_match", "screening", "subcourse_instructors_student"],
  CourseCreateWithoutCourse_instructors_studentInput: ["createdAt", "updatedAt", "name", "outline", "description", "imageKey", "category", "courseState", "screeningComment", "publicRanking", "allowContact", "student", "course_guest", "course_tags_course_tag", "subcourse"],
  CourseCreateOrConnectWithoutCourse_instructors_studentInput: ["where", "create"],
  StudentCreateWithoutCourse_instructors_studentInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "phone", "feedback", "newsletter", "isStudent", "subjects", "openMatchRequestCount", "isInstructor", "msg", "state", "university", "module", "moduleHours", "isProjectCoach", "wasJufoParticipant", "hasJufoCertificate", "jufoPastParticipationInfo", "jufoPastParticipationConfirmed", "isUniversityStudent", "openProjectMatchRequestCount", "sentJufoAlumniScreeningReminderCount", "lastSentJufoAlumniScreeningInvitationDate", "supportsInDaZ", "sentScreeningReminderCount", "lastSentScreeningInvitationDate", "sentInstructorScreeningReminderCount", "lastSentInstructorScreeningInvitationDate", "lastUpdatedSettingsViaBlocker", "registrationSource", "languages", "course", "course_guest", "course_participation_certificate", "expert_data", "instructor_screening", "jufo_verification_transmission", "lecture", "match", "participation_certificate", "project_coaching_screening", "project_field_with_grade_restriction", "project_match", "screening", "subcourse_instructors_student"],
  StudentCreateOrConnectWithoutCourse_instructors_studentInput: ["where", "create"],
  CourseUpsertWithoutCourse_instructors_studentInput: ["update", "create"],
  CourseUpdateWithoutCourse_instructors_studentInput: ["createdAt", "updatedAt", "name", "outline", "description", "imageKey", "category", "courseState", "screeningComment", "publicRanking", "allowContact", "student", "course_guest", "course_tags_course_tag", "subcourse"],
  StudentUpsertWithoutCourse_instructors_studentInput: ["update", "create"],
  StudentUpdateWithoutCourse_instructors_studentInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "phone", "feedback", "newsletter", "isStudent", "subjects", "openMatchRequestCount", "isInstructor", "msg", "state", "university", "module", "moduleHours", "isProjectCoach", "wasJufoParticipant", "hasJufoCertificate", "jufoPastParticipationInfo", "jufoPastParticipationConfirmed", "isUniversityStudent", "openProjectMatchRequestCount", "sentJufoAlumniScreeningReminderCount", "lastSentJufoAlumniScreeningInvitationDate", "supportsInDaZ", "sentScreeningReminderCount", "lastSentScreeningInvitationDate", "sentInstructorScreeningReminderCount", "lastSentInstructorScreeningInvitationDate", "lastUpdatedSettingsViaBlocker", "registrationSource", "languages", "course", "course_guest", "course_participation_certificate", "expert_data", "instructor_screening", "jufo_verification_transmission", "lecture", "match", "participation_certificate", "project_coaching_screening", "project_field_with_grade_restriction", "project_match", "screening", "subcourse_instructors_student"],
  StudentCreateWithoutCourse_participation_certificateInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "phone", "feedback", "newsletter", "isStudent", "subjects", "openMatchRequestCount", "isInstructor", "msg", "state", "university", "module", "moduleHours", "isProjectCoach", "wasJufoParticipant", "hasJufoCertificate", "jufoPastParticipationInfo", "jufoPastParticipationConfirmed", "isUniversityStudent", "openProjectMatchRequestCount", "sentJufoAlumniScreeningReminderCount", "lastSentJufoAlumniScreeningInvitationDate", "supportsInDaZ", "sentScreeningReminderCount", "lastSentScreeningInvitationDate", "sentInstructorScreeningReminderCount", "lastSentInstructorScreeningInvitationDate", "lastUpdatedSettingsViaBlocker", "registrationSource", "languages", "course", "course_guest", "course_instructors_student", "expert_data", "instructor_screening", "jufo_verification_transmission", "lecture", "match", "participation_certificate", "project_coaching_screening", "project_field_with_grade_restriction", "project_match", "screening", "subcourse_instructors_student"],
  StudentCreateOrConnectWithoutCourse_participation_certificateInput: ["where", "create"],
  PupilCreateWithoutCourse_participation_certificateInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "state", "schooltype", "msg", "grade", "newsletter", "isPupil", "subjects", "openMatchRequestCount", "isParticipant", "isProjectCoachee", "isJufoParticipant", "openProjectMatchRequestCount", "projectMemberCount", "learningGermanSince", "matchingPriority", "lastUpdatedSettingsViaBlocker", "teacherEmailAddress", "registrationSource", "projectFields", "languages", "school", "course_attendance_log", "match", "participation_certificate", "project_match", "pupil_tutoring_interest_confirmation_request", "subcourse_participants_pupil", "subcourse_waiting_list_pupil"],
  PupilCreateOrConnectWithoutCourse_participation_certificateInput: ["where", "create"],
  SubcourseCreateWithoutCourse_participation_certificateInput: ["createdAt", "updatedAt", "minGrade", "maxGrade", "maxParticipants", "joinAfterStart", "published", "cancelled", "course", "lecture", "subcourse_instructors_student", "subcourse_participants_pupil", "subcourse_waiting_list_pupil"],
  SubcourseCreateOrConnectWithoutCourse_participation_certificateInput: ["where", "create"],
  StudentUpsertWithoutCourse_participation_certificateInput: ["update", "create"],
  StudentUpdateWithoutCourse_participation_certificateInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "phone", "feedback", "newsletter", "isStudent", "subjects", "openMatchRequestCount", "isInstructor", "msg", "state", "university", "module", "moduleHours", "isProjectCoach", "wasJufoParticipant", "hasJufoCertificate", "jufoPastParticipationInfo", "jufoPastParticipationConfirmed", "isUniversityStudent", "openProjectMatchRequestCount", "sentJufoAlumniScreeningReminderCount", "lastSentJufoAlumniScreeningInvitationDate", "supportsInDaZ", "sentScreeningReminderCount", "lastSentScreeningInvitationDate", "sentInstructorScreeningReminderCount", "lastSentInstructorScreeningInvitationDate", "lastUpdatedSettingsViaBlocker", "registrationSource", "languages", "course", "course_guest", "course_instructors_student", "expert_data", "instructor_screening", "jufo_verification_transmission", "lecture", "match", "participation_certificate", "project_coaching_screening", "project_field_with_grade_restriction", "project_match", "screening", "subcourse_instructors_student"],
  PupilUpsertWithoutCourse_participation_certificateInput: ["update", "create"],
  PupilUpdateWithoutCourse_participation_certificateInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "state", "schooltype", "msg", "grade", "newsletter", "isPupil", "subjects", "openMatchRequestCount", "isParticipant", "isProjectCoachee", "isJufoParticipant", "openProjectMatchRequestCount", "projectMemberCount", "learningGermanSince", "matchingPriority", "lastUpdatedSettingsViaBlocker", "teacherEmailAddress", "registrationSource", "projectFields", "languages", "school", "course_attendance_log", "match", "participation_certificate", "project_match", "pupil_tutoring_interest_confirmation_request", "subcourse_participants_pupil", "subcourse_waiting_list_pupil"],
  SubcourseUpsertWithoutCourse_participation_certificateInput: ["update", "create"],
  SubcourseUpdateWithoutCourse_participation_certificateInput: ["createdAt", "updatedAt", "minGrade", "maxGrade", "maxParticipants", "joinAfterStart", "published", "cancelled", "course", "lecture", "subcourse_instructors_student", "subcourse_participants_pupil", "subcourse_waiting_list_pupil"],
  Course_tags_course_tagCreateWithoutCourse_tagInput: ["course"],
  Course_tags_course_tagCreateOrConnectWithoutCourse_tagInput: ["where", "create"],
  Course_tags_course_tagCreateManyCourse_tagInputEnvelope: ["data", "skipDuplicates"],
  Course_tags_course_tagUpsertWithWhereUniqueWithoutCourse_tagInput: ["where", "update", "create"],
  Course_tags_course_tagUpdateWithWhereUniqueWithoutCourse_tagInput: ["where", "data"],
  Course_tags_course_tagUpdateManyWithWhereWithoutCourse_tagInput: ["where", "data"],
  CourseCreateWithoutCourse_tags_course_tagInput: ["createdAt", "updatedAt", "name", "outline", "description", "imageKey", "category", "courseState", "screeningComment", "publicRanking", "allowContact", "student", "course_guest", "course_instructors_student", "subcourse"],
  CourseCreateOrConnectWithoutCourse_tags_course_tagInput: ["where", "create"],
  Course_tagCreateWithoutCourse_tags_course_tagInput: ["identifier", "name", "category"],
  Course_tagCreateOrConnectWithoutCourse_tags_course_tagInput: ["where", "create"],
  CourseUpsertWithoutCourse_tags_course_tagInput: ["update", "create"],
  CourseUpdateWithoutCourse_tags_course_tagInput: ["createdAt", "updatedAt", "name", "outline", "description", "imageKey", "category", "courseState", "screeningComment", "publicRanking", "allowContact", "student", "course_guest", "course_instructors_student", "subcourse"],
  Course_tagUpsertWithoutCourse_tags_course_tagInput: ["update", "create"],
  Course_tagUpdateWithoutCourse_tags_course_tagInput: ["identifier", "name", "category"],
  StudentCreateWithoutExpert_dataInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "phone", "feedback", "newsletter", "isStudent", "subjects", "openMatchRequestCount", "isInstructor", "msg", "state", "university", "module", "moduleHours", "isProjectCoach", "wasJufoParticipant", "hasJufoCertificate", "jufoPastParticipationInfo", "jufoPastParticipationConfirmed", "isUniversityStudent", "openProjectMatchRequestCount", "sentJufoAlumniScreeningReminderCount", "lastSentJufoAlumniScreeningInvitationDate", "supportsInDaZ", "sentScreeningReminderCount", "lastSentScreeningInvitationDate", "sentInstructorScreeningReminderCount", "lastSentInstructorScreeningInvitationDate", "lastUpdatedSettingsViaBlocker", "registrationSource", "languages", "course", "course_guest", "course_instructors_student", "course_participation_certificate", "instructor_screening", "jufo_verification_transmission", "lecture", "match", "participation_certificate", "project_coaching_screening", "project_field_with_grade_restriction", "project_match", "screening", "subcourse_instructors_student"],
  StudentCreateOrConnectWithoutExpert_dataInput: ["where", "create"],
  Expert_data_expertise_tags_expertise_tagCreateWithoutExpert_dataInput: ["expertise_tag"],
  Expert_data_expertise_tags_expertise_tagCreateOrConnectWithoutExpert_dataInput: ["where", "create"],
  Expert_data_expertise_tags_expertise_tagCreateManyExpert_dataInputEnvelope: ["data", "skipDuplicates"],
  StudentUpsertWithoutExpert_dataInput: ["update", "create"],
  StudentUpdateWithoutExpert_dataInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "phone", "feedback", "newsletter", "isStudent", "subjects", "openMatchRequestCount", "isInstructor", "msg", "state", "university", "module", "moduleHours", "isProjectCoach", "wasJufoParticipant", "hasJufoCertificate", "jufoPastParticipationInfo", "jufoPastParticipationConfirmed", "isUniversityStudent", "openProjectMatchRequestCount", "sentJufoAlumniScreeningReminderCount", "lastSentJufoAlumniScreeningInvitationDate", "supportsInDaZ", "sentScreeningReminderCount", "lastSentScreeningInvitationDate", "sentInstructorScreeningReminderCount", "lastSentInstructorScreeningInvitationDate", "lastUpdatedSettingsViaBlocker", "registrationSource", "languages", "course", "course_guest", "course_instructors_student", "course_participation_certificate", "instructor_screening", "jufo_verification_transmission", "lecture", "match", "participation_certificate", "project_coaching_screening", "project_field_with_grade_restriction", "project_match", "screening", "subcourse_instructors_student"],
  Expert_data_expertise_tags_expertise_tagUpsertWithWhereUniqueWithoutExpert_dataInput: ["where", "update", "create"],
  Expert_data_expertise_tags_expertise_tagUpdateWithWhereUniqueWithoutExpert_dataInput: ["where", "data"],
  Expert_data_expertise_tags_expertise_tagUpdateManyWithWhereWithoutExpert_dataInput: ["where", "data"],
  Expert_data_expertise_tags_expertise_tagScalarWhereInput: ["AND", "OR", "NOT", "expertDataId", "expertiseTagId"],
  Expert_dataCreateWithoutExpert_data_expertise_tags_expertise_tagInput: ["createdAt", "updatedAt", "contactEmail", "description", "active", "allowed", "student"],
  Expert_dataCreateOrConnectWithoutExpert_data_expertise_tags_expertise_tagInput: ["where", "create"],
  Expertise_tagCreateWithoutExpert_data_expertise_tags_expertise_tagInput: ["name"],
  Expertise_tagCreateOrConnectWithoutExpert_data_expertise_tags_expertise_tagInput: ["where", "create"],
  Expert_dataUpsertWithoutExpert_data_expertise_tags_expertise_tagInput: ["update", "create"],
  Expert_dataUpdateWithoutExpert_data_expertise_tags_expertise_tagInput: ["createdAt", "updatedAt", "contactEmail", "description", "active", "allowed", "student"],
  Expertise_tagUpsertWithoutExpert_data_expertise_tags_expertise_tagInput: ["update", "create"],
  Expertise_tagUpdateWithoutExpert_data_expertise_tags_expertise_tagInput: ["name"],
  Expert_data_expertise_tags_expertise_tagCreateWithoutExpertise_tagInput: ["expert_data"],
  Expert_data_expertise_tags_expertise_tagCreateOrConnectWithoutExpertise_tagInput: ["where", "create"],
  Expert_data_expertise_tags_expertise_tagCreateManyExpertise_tagInputEnvelope: ["data", "skipDuplicates"],
  Expert_data_expertise_tags_expertise_tagUpsertWithWhereUniqueWithoutExpertise_tagInput: ["where", "update", "create"],
  Expert_data_expertise_tags_expertise_tagUpdateWithWhereUniqueWithoutExpertise_tagInput: ["where", "data"],
  Expert_data_expertise_tags_expertise_tagUpdateManyWithWhereWithoutExpertise_tagInput: ["where", "data"],
  ScreenerCreateWithoutInstructor_screeningInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "password", "verified", "oldNumberID", "project_coaching_screening", "screening"],
  ScreenerCreateOrConnectWithoutInstructor_screeningInput: ["where", "create"],
  StudentCreateWithoutInstructor_screeningInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "phone", "feedback", "newsletter", "isStudent", "subjects", "openMatchRequestCount", "isInstructor", "msg", "state", "university", "module", "moduleHours", "isProjectCoach", "wasJufoParticipant", "hasJufoCertificate", "jufoPastParticipationInfo", "jufoPastParticipationConfirmed", "isUniversityStudent", "openProjectMatchRequestCount", "sentJufoAlumniScreeningReminderCount", "lastSentJufoAlumniScreeningInvitationDate", "supportsInDaZ", "sentScreeningReminderCount", "lastSentScreeningInvitationDate", "sentInstructorScreeningReminderCount", "lastSentInstructorScreeningInvitationDate", "lastUpdatedSettingsViaBlocker", "registrationSource", "languages", "course", "course_guest", "course_instructors_student", "course_participation_certificate", "expert_data", "jufo_verification_transmission", "lecture", "match", "participation_certificate", "project_coaching_screening", "project_field_with_grade_restriction", "project_match", "screening", "subcourse_instructors_student"],
  StudentCreateOrConnectWithoutInstructor_screeningInput: ["where", "create"],
  ScreenerUpsertWithoutInstructor_screeningInput: ["update", "create"],
  ScreenerUpdateWithoutInstructor_screeningInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "password", "verified", "oldNumberID", "project_coaching_screening", "screening"],
  StudentUpsertWithoutInstructor_screeningInput: ["update", "create"],
  StudentUpdateWithoutInstructor_screeningInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "phone", "feedback", "newsletter", "isStudent", "subjects", "openMatchRequestCount", "isInstructor", "msg", "state", "university", "module", "moduleHours", "isProjectCoach", "wasJufoParticipant", "hasJufoCertificate", "jufoPastParticipationInfo", "jufoPastParticipationConfirmed", "isUniversityStudent", "openProjectMatchRequestCount", "sentJufoAlumniScreeningReminderCount", "lastSentJufoAlumniScreeningInvitationDate", "supportsInDaZ", "sentScreeningReminderCount", "lastSentScreeningInvitationDate", "sentInstructorScreeningReminderCount", "lastSentInstructorScreeningInvitationDate", "lastUpdatedSettingsViaBlocker", "registrationSource", "languages", "course", "course_guest", "course_instructors_student", "course_participation_certificate", "expert_data", "jufo_verification_transmission", "lecture", "match", "participation_certificate", "project_coaching_screening", "project_field_with_grade_restriction", "project_match", "screening", "subcourse_instructors_student"],
  StudentCreateWithoutJufo_verification_transmissionInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "phone", "feedback", "newsletter", "isStudent", "subjects", "openMatchRequestCount", "isInstructor", "msg", "state", "university", "module", "moduleHours", "isProjectCoach", "wasJufoParticipant", "hasJufoCertificate", "jufoPastParticipationInfo", "jufoPastParticipationConfirmed", "isUniversityStudent", "openProjectMatchRequestCount", "sentJufoAlumniScreeningReminderCount", "lastSentJufoAlumniScreeningInvitationDate", "supportsInDaZ", "sentScreeningReminderCount", "lastSentScreeningInvitationDate", "sentInstructorScreeningReminderCount", "lastSentInstructorScreeningInvitationDate", "lastUpdatedSettingsViaBlocker", "registrationSource", "languages", "course", "course_guest", "course_instructors_student", "course_participation_certificate", "expert_data", "instructor_screening", "lecture", "match", "participation_certificate", "project_coaching_screening", "project_field_with_grade_restriction", "project_match", "screening", "subcourse_instructors_student"],
  StudentCreateOrConnectWithoutJufo_verification_transmissionInput: ["where", "create"],
  StudentUpsertWithoutJufo_verification_transmissionInput: ["update", "create"],
  StudentUpdateWithoutJufo_verification_transmissionInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "phone", "feedback", "newsletter", "isStudent", "subjects", "openMatchRequestCount", "isInstructor", "msg", "state", "university", "module", "moduleHours", "isProjectCoach", "wasJufoParticipant", "hasJufoCertificate", "jufoPastParticipationInfo", "jufoPastParticipationConfirmed", "isUniversityStudent", "openProjectMatchRequestCount", "sentJufoAlumniScreeningReminderCount", "lastSentJufoAlumniScreeningInvitationDate", "supportsInDaZ", "sentScreeningReminderCount", "lastSentScreeningInvitationDate", "sentInstructorScreeningReminderCount", "lastSentInstructorScreeningInvitationDate", "lastUpdatedSettingsViaBlocker", "registrationSource", "languages", "course", "course_guest", "course_instructors_student", "course_participation_certificate", "expert_data", "instructor_screening", "lecture", "match", "participation_certificate", "project_coaching_screening", "project_field_with_grade_restriction", "project_match", "screening", "subcourse_instructors_student"],
  StudentCreateWithoutLectureInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "phone", "feedback", "newsletter", "isStudent", "subjects", "openMatchRequestCount", "isInstructor", "msg", "state", "university", "module", "moduleHours", "isProjectCoach", "wasJufoParticipant", "hasJufoCertificate", "jufoPastParticipationInfo", "jufoPastParticipationConfirmed", "isUniversityStudent", "openProjectMatchRequestCount", "sentJufoAlumniScreeningReminderCount", "lastSentJufoAlumniScreeningInvitationDate", "supportsInDaZ", "sentScreeningReminderCount", "lastSentScreeningInvitationDate", "sentInstructorScreeningReminderCount", "lastSentInstructorScreeningInvitationDate", "lastUpdatedSettingsViaBlocker", "registrationSource", "languages", "course", "course_guest", "course_instructors_student", "course_participation_certificate", "expert_data", "instructor_screening", "jufo_verification_transmission", "match", "participation_certificate", "project_coaching_screening", "project_field_with_grade_restriction", "project_match", "screening", "subcourse_instructors_student"],
  StudentCreateOrConnectWithoutLectureInput: ["where", "create"],
  SubcourseCreateWithoutLectureInput: ["createdAt", "updatedAt", "minGrade", "maxGrade", "maxParticipants", "joinAfterStart", "published", "cancelled", "course", "course_participation_certificate", "subcourse_instructors_student", "subcourse_participants_pupil", "subcourse_waiting_list_pupil"],
  SubcourseCreateOrConnectWithoutLectureInput: ["where", "create"],
  Course_attendance_logCreateWithoutLectureInput: ["createdAt", "updatedAt", "attendedTime", "ip", "pupil"],
  Course_attendance_logCreateOrConnectWithoutLectureInput: ["where", "create"],
  Course_attendance_logCreateManyLectureInputEnvelope: ["data", "skipDuplicates"],
  StudentUpsertWithoutLectureInput: ["update", "create"],
  StudentUpdateWithoutLectureInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "phone", "feedback", "newsletter", "isStudent", "subjects", "openMatchRequestCount", "isInstructor", "msg", "state", "university", "module", "moduleHours", "isProjectCoach", "wasJufoParticipant", "hasJufoCertificate", "jufoPastParticipationInfo", "jufoPastParticipationConfirmed", "isUniversityStudent", "openProjectMatchRequestCount", "sentJufoAlumniScreeningReminderCount", "lastSentJufoAlumniScreeningInvitationDate", "supportsInDaZ", "sentScreeningReminderCount", "lastSentScreeningInvitationDate", "sentInstructorScreeningReminderCount", "lastSentInstructorScreeningInvitationDate", "lastUpdatedSettingsViaBlocker", "registrationSource", "languages", "course", "course_guest", "course_instructors_student", "course_participation_certificate", "expert_data", "instructor_screening", "jufo_verification_transmission", "match", "participation_certificate", "project_coaching_screening", "project_field_with_grade_restriction", "project_match", "screening", "subcourse_instructors_student"],
  SubcourseUpsertWithoutLectureInput: ["update", "create"],
  SubcourseUpdateWithoutLectureInput: ["createdAt", "updatedAt", "minGrade", "maxGrade", "maxParticipants", "joinAfterStart", "published", "cancelled", "course", "course_participation_certificate", "subcourse_instructors_student", "subcourse_participants_pupil", "subcourse_waiting_list_pupil"],
  Course_attendance_logUpsertWithWhereUniqueWithoutLectureInput: ["where", "update", "create"],
  Course_attendance_logUpdateWithWhereUniqueWithoutLectureInput: ["where", "data"],
  Course_attendance_logUpdateManyWithWhereWithoutLectureInput: ["where", "data"],
  Course_attendance_logScalarWhereInput: ["AND", "OR", "NOT", "id", "createdAt", "updatedAt", "attendedTime", "ip", "pupilId", "lectureId"],
  PupilCreateWithoutMatchInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "state", "schooltype", "msg", "grade", "newsletter", "isPupil", "subjects", "openMatchRequestCount", "isParticipant", "isProjectCoachee", "isJufoParticipant", "openProjectMatchRequestCount", "projectMemberCount", "learningGermanSince", "matchingPriority", "lastUpdatedSettingsViaBlocker", "teacherEmailAddress", "registrationSource", "projectFields", "languages", "school", "course_attendance_log", "course_participation_certificate", "participation_certificate", "project_match", "pupil_tutoring_interest_confirmation_request", "subcourse_participants_pupil", "subcourse_waiting_list_pupil"],
  PupilCreateOrConnectWithoutMatchInput: ["where", "create"],
  StudentCreateWithoutMatchInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "phone", "feedback", "newsletter", "isStudent", "subjects", "openMatchRequestCount", "isInstructor", "msg", "state", "university", "module", "moduleHours", "isProjectCoach", "wasJufoParticipant", "hasJufoCertificate", "jufoPastParticipationInfo", "jufoPastParticipationConfirmed", "isUniversityStudent", "openProjectMatchRequestCount", "sentJufoAlumniScreeningReminderCount", "lastSentJufoAlumniScreeningInvitationDate", "supportsInDaZ", "sentScreeningReminderCount", "lastSentScreeningInvitationDate", "sentInstructorScreeningReminderCount", "lastSentInstructorScreeningInvitationDate", "lastUpdatedSettingsViaBlocker", "registrationSource", "languages", "course", "course_guest", "course_instructors_student", "course_participation_certificate", "expert_data", "instructor_screening", "jufo_verification_transmission", "lecture", "participation_certificate", "project_coaching_screening", "project_field_with_grade_restriction", "project_match", "screening", "subcourse_instructors_student"],
  StudentCreateOrConnectWithoutMatchInput: ["where", "create"],
  PupilUpsertWithoutMatchInput: ["update", "create"],
  PupilUpdateWithoutMatchInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "state", "schooltype", "msg", "grade", "newsletter", "isPupil", "subjects", "openMatchRequestCount", "isParticipant", "isProjectCoachee", "isJufoParticipant", "openProjectMatchRequestCount", "projectMemberCount", "learningGermanSince", "matchingPriority", "lastUpdatedSettingsViaBlocker", "teacherEmailAddress", "registrationSource", "projectFields", "languages", "school", "course_attendance_log", "course_participation_certificate", "participation_certificate", "project_match", "pupil_tutoring_interest_confirmation_request", "subcourse_participants_pupil", "subcourse_waiting_list_pupil"],
  StudentUpsertWithoutMatchInput: ["update", "create"],
  StudentUpdateWithoutMatchInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "phone", "feedback", "newsletter", "isStudent", "subjects", "openMatchRequestCount", "isInstructor", "msg", "state", "university", "module", "moduleHours", "isProjectCoach", "wasJufoParticipant", "hasJufoCertificate", "jufoPastParticipationInfo", "jufoPastParticipationConfirmed", "isUniversityStudent", "openProjectMatchRequestCount", "sentJufoAlumniScreeningReminderCount", "lastSentJufoAlumniScreeningInvitationDate", "supportsInDaZ", "sentScreeningReminderCount", "lastSentScreeningInvitationDate", "sentInstructorScreeningReminderCount", "lastSentInstructorScreeningInvitationDate", "lastUpdatedSettingsViaBlocker", "registrationSource", "languages", "course", "course_guest", "course_instructors_student", "course_participation_certificate", "expert_data", "instructor_screening", "jufo_verification_transmission", "lecture", "participation_certificate", "project_coaching_screening", "project_field_with_grade_restriction", "project_match", "screening", "subcourse_instructors_student"],
  PupilCreateWithoutParticipation_certificateInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "state", "schooltype", "msg", "grade", "newsletter", "isPupil", "subjects", "openMatchRequestCount", "isParticipant", "isProjectCoachee", "isJufoParticipant", "openProjectMatchRequestCount", "projectMemberCount", "learningGermanSince", "matchingPriority", "lastUpdatedSettingsViaBlocker", "teacherEmailAddress", "registrationSource", "projectFields", "languages", "school", "course_attendance_log", "course_participation_certificate", "match", "project_match", "pupil_tutoring_interest_confirmation_request", "subcourse_participants_pupil", "subcourse_waiting_list_pupil"],
  PupilCreateOrConnectWithoutParticipation_certificateInput: ["where", "create"],
  StudentCreateWithoutParticipation_certificateInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "phone", "feedback", "newsletter", "isStudent", "subjects", "openMatchRequestCount", "isInstructor", "msg", "state", "university", "module", "moduleHours", "isProjectCoach", "wasJufoParticipant", "hasJufoCertificate", "jufoPastParticipationInfo", "jufoPastParticipationConfirmed", "isUniversityStudent", "openProjectMatchRequestCount", "sentJufoAlumniScreeningReminderCount", "lastSentJufoAlumniScreeningInvitationDate", "supportsInDaZ", "sentScreeningReminderCount", "lastSentScreeningInvitationDate", "sentInstructorScreeningReminderCount", "lastSentInstructorScreeningInvitationDate", "lastUpdatedSettingsViaBlocker", "registrationSource", "languages", "course", "course_guest", "course_instructors_student", "course_participation_certificate", "expert_data", "instructor_screening", "jufo_verification_transmission", "lecture", "match", "project_coaching_screening", "project_field_with_grade_restriction", "project_match", "screening", "subcourse_instructors_student"],
  StudentCreateOrConnectWithoutParticipation_certificateInput: ["where", "create"],
  PupilUpsertWithoutParticipation_certificateInput: ["update", "create"],
  PupilUpdateWithoutParticipation_certificateInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "state", "schooltype", "msg", "grade", "newsletter", "isPupil", "subjects", "openMatchRequestCount", "isParticipant", "isProjectCoachee", "isJufoParticipant", "openProjectMatchRequestCount", "projectMemberCount", "learningGermanSince", "matchingPriority", "lastUpdatedSettingsViaBlocker", "teacherEmailAddress", "registrationSource", "projectFields", "languages", "school", "course_attendance_log", "course_participation_certificate", "match", "project_match", "pupil_tutoring_interest_confirmation_request", "subcourse_participants_pupil", "subcourse_waiting_list_pupil"],
  StudentUpsertWithoutParticipation_certificateInput: ["update", "create"],
  StudentUpdateWithoutParticipation_certificateInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "phone", "feedback", "newsletter", "isStudent", "subjects", "openMatchRequestCount", "isInstructor", "msg", "state", "university", "module", "moduleHours", "isProjectCoach", "wasJufoParticipant", "hasJufoCertificate", "jufoPastParticipationInfo", "jufoPastParticipationConfirmed", "isUniversityStudent", "openProjectMatchRequestCount", "sentJufoAlumniScreeningReminderCount", "lastSentJufoAlumniScreeningInvitationDate", "supportsInDaZ", "sentScreeningReminderCount", "lastSentScreeningInvitationDate", "sentInstructorScreeningReminderCount", "lastSentInstructorScreeningInvitationDate", "lastUpdatedSettingsViaBlocker", "registrationSource", "languages", "course", "course_guest", "course_instructors_student", "course_participation_certificate", "expert_data", "instructor_screening", "jufo_verification_transmission", "lecture", "match", "project_coaching_screening", "project_field_with_grade_restriction", "project_match", "screening", "subcourse_instructors_student"],
  ScreenerCreateWithoutProject_coaching_screeningInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "password", "verified", "oldNumberID", "instructor_screening", "screening"],
  ScreenerCreateOrConnectWithoutProject_coaching_screeningInput: ["where", "create"],
  StudentCreateWithoutProject_coaching_screeningInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "phone", "feedback", "newsletter", "isStudent", "subjects", "openMatchRequestCount", "isInstructor", "msg", "state", "university", "module", "moduleHours", "isProjectCoach", "wasJufoParticipant", "hasJufoCertificate", "jufoPastParticipationInfo", "jufoPastParticipationConfirmed", "isUniversityStudent", "openProjectMatchRequestCount", "sentJufoAlumniScreeningReminderCount", "lastSentJufoAlumniScreeningInvitationDate", "supportsInDaZ", "sentScreeningReminderCount", "lastSentScreeningInvitationDate", "sentInstructorScreeningReminderCount", "lastSentInstructorScreeningInvitationDate", "lastUpdatedSettingsViaBlocker", "registrationSource", "languages", "course", "course_guest", "course_instructors_student", "course_participation_certificate", "expert_data", "instructor_screening", "jufo_verification_transmission", "lecture", "match", "participation_certificate", "project_field_with_grade_restriction", "project_match", "screening", "subcourse_instructors_student"],
  StudentCreateOrConnectWithoutProject_coaching_screeningInput: ["where", "create"],
  ScreenerUpsertWithoutProject_coaching_screeningInput: ["update", "create"],
  ScreenerUpdateWithoutProject_coaching_screeningInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "password", "verified", "oldNumberID", "instructor_screening", "screening"],
  StudentUpsertWithoutProject_coaching_screeningInput: ["update", "create"],
  StudentUpdateWithoutProject_coaching_screeningInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "phone", "feedback", "newsletter", "isStudent", "subjects", "openMatchRequestCount", "isInstructor", "msg", "state", "university", "module", "moduleHours", "isProjectCoach", "wasJufoParticipant", "hasJufoCertificate", "jufoPastParticipationInfo", "jufoPastParticipationConfirmed", "isUniversityStudent", "openProjectMatchRequestCount", "sentJufoAlumniScreeningReminderCount", "lastSentJufoAlumniScreeningInvitationDate", "supportsInDaZ", "sentScreeningReminderCount", "lastSentScreeningInvitationDate", "sentInstructorScreeningReminderCount", "lastSentInstructorScreeningInvitationDate", "lastUpdatedSettingsViaBlocker", "registrationSource", "languages", "course", "course_guest", "course_instructors_student", "course_participation_certificate", "expert_data", "instructor_screening", "jufo_verification_transmission", "lecture", "match", "participation_certificate", "project_field_with_grade_restriction", "project_match", "screening", "subcourse_instructors_student"],
  StudentCreateWithoutProject_field_with_grade_restrictionInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "phone", "feedback", "newsletter", "isStudent", "subjects", "openMatchRequestCount", "isInstructor", "msg", "state", "university", "module", "moduleHours", "isProjectCoach", "wasJufoParticipant", "hasJufoCertificate", "jufoPastParticipationInfo", "jufoPastParticipationConfirmed", "isUniversityStudent", "openProjectMatchRequestCount", "sentJufoAlumniScreeningReminderCount", "lastSentJufoAlumniScreeningInvitationDate", "supportsInDaZ", "sentScreeningReminderCount", "lastSentScreeningInvitationDate", "sentInstructorScreeningReminderCount", "lastSentInstructorScreeningInvitationDate", "lastUpdatedSettingsViaBlocker", "registrationSource", "languages", "course", "course_guest", "course_instructors_student", "course_participation_certificate", "expert_data", "instructor_screening", "jufo_verification_transmission", "lecture", "match", "participation_certificate", "project_coaching_screening", "project_match", "screening", "subcourse_instructors_student"],
  StudentCreateOrConnectWithoutProject_field_with_grade_restrictionInput: ["where", "create"],
  StudentUpsertWithoutProject_field_with_grade_restrictionInput: ["update", "create"],
  StudentUpdateWithoutProject_field_with_grade_restrictionInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "phone", "feedback", "newsletter", "isStudent", "subjects", "openMatchRequestCount", "isInstructor", "msg", "state", "university", "module", "moduleHours", "isProjectCoach", "wasJufoParticipant", "hasJufoCertificate", "jufoPastParticipationInfo", "jufoPastParticipationConfirmed", "isUniversityStudent", "openProjectMatchRequestCount", "sentJufoAlumniScreeningReminderCount", "lastSentJufoAlumniScreeningInvitationDate", "supportsInDaZ", "sentScreeningReminderCount", "lastSentScreeningInvitationDate", "sentInstructorScreeningReminderCount", "lastSentInstructorScreeningInvitationDate", "lastUpdatedSettingsViaBlocker", "registrationSource", "languages", "course", "course_guest", "course_instructors_student", "course_participation_certificate", "expert_data", "instructor_screening", "jufo_verification_transmission", "lecture", "match", "participation_certificate", "project_coaching_screening", "project_match", "screening", "subcourse_instructors_student"],
  PupilCreateWithoutProject_matchInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "state", "schooltype", "msg", "grade", "newsletter", "isPupil", "subjects", "openMatchRequestCount", "isParticipant", "isProjectCoachee", "isJufoParticipant", "openProjectMatchRequestCount", "projectMemberCount", "learningGermanSince", "matchingPriority", "lastUpdatedSettingsViaBlocker", "teacherEmailAddress", "registrationSource", "projectFields", "languages", "school", "course_attendance_log", "course_participation_certificate", "match", "participation_certificate", "pupil_tutoring_interest_confirmation_request", "subcourse_participants_pupil", "subcourse_waiting_list_pupil"],
  PupilCreateOrConnectWithoutProject_matchInput: ["where", "create"],
  StudentCreateWithoutProject_matchInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "phone", "feedback", "newsletter", "isStudent", "subjects", "openMatchRequestCount", "isInstructor", "msg", "state", "university", "module", "moduleHours", "isProjectCoach", "wasJufoParticipant", "hasJufoCertificate", "jufoPastParticipationInfo", "jufoPastParticipationConfirmed", "isUniversityStudent", "openProjectMatchRequestCount", "sentJufoAlumniScreeningReminderCount", "lastSentJufoAlumniScreeningInvitationDate", "supportsInDaZ", "sentScreeningReminderCount", "lastSentScreeningInvitationDate", "sentInstructorScreeningReminderCount", "lastSentInstructorScreeningInvitationDate", "lastUpdatedSettingsViaBlocker", "registrationSource", "languages", "course", "course_guest", "course_instructors_student", "course_participation_certificate", "expert_data", "instructor_screening", "jufo_verification_transmission", "lecture", "match", "participation_certificate", "project_coaching_screening", "project_field_with_grade_restriction", "screening", "subcourse_instructors_student"],
  StudentCreateOrConnectWithoutProject_matchInput: ["where", "create"],
  PupilUpsertWithoutProject_matchInput: ["update", "create"],
  PupilUpdateWithoutProject_matchInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "state", "schooltype", "msg", "grade", "newsletter", "isPupil", "subjects", "openMatchRequestCount", "isParticipant", "isProjectCoachee", "isJufoParticipant", "openProjectMatchRequestCount", "projectMemberCount", "learningGermanSince", "matchingPriority", "lastUpdatedSettingsViaBlocker", "teacherEmailAddress", "registrationSource", "projectFields", "languages", "school", "course_attendance_log", "course_participation_certificate", "match", "participation_certificate", "pupil_tutoring_interest_confirmation_request", "subcourse_participants_pupil", "subcourse_waiting_list_pupil"],
  StudentUpsertWithoutProject_matchInput: ["update", "create"],
  StudentUpdateWithoutProject_matchInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "phone", "feedback", "newsletter", "isStudent", "subjects", "openMatchRequestCount", "isInstructor", "msg", "state", "university", "module", "moduleHours", "isProjectCoach", "wasJufoParticipant", "hasJufoCertificate", "jufoPastParticipationInfo", "jufoPastParticipationConfirmed", "isUniversityStudent", "openProjectMatchRequestCount", "sentJufoAlumniScreeningReminderCount", "lastSentJufoAlumniScreeningInvitationDate", "supportsInDaZ", "sentScreeningReminderCount", "lastSentScreeningInvitationDate", "sentInstructorScreeningReminderCount", "lastSentInstructorScreeningInvitationDate", "lastUpdatedSettingsViaBlocker", "registrationSource", "languages", "course", "course_guest", "course_instructors_student", "course_participation_certificate", "expert_data", "instructor_screening", "jufo_verification_transmission", "lecture", "match", "participation_certificate", "project_coaching_screening", "project_field_with_grade_restriction", "screening", "subcourse_instructors_student"],
  SchoolCreateWithoutPupilInput: ["createdAt", "updatedAt", "name", "website", "emailDomain", "state", "schooltype", "activeCooperation"],
  SchoolCreateOrConnectWithoutPupilInput: ["where", "create"],
  Course_attendance_logCreateWithoutPupilInput: ["createdAt", "updatedAt", "attendedTime", "ip", "lecture"],
  Course_attendance_logCreateOrConnectWithoutPupilInput: ["where", "create"],
  Course_attendance_logCreateManyPupilInputEnvelope: ["data", "skipDuplicates"],
  Course_participation_certificateCreateWithoutPupilInput: ["createdAt", "updatedAt", "student", "subcourse"],
  Course_participation_certificateCreateOrConnectWithoutPupilInput: ["where", "create"],
  Course_participation_certificateCreateManyPupilInputEnvelope: ["data", "skipDuplicates"],
  MatchCreateWithoutPupilInput: ["uuid", "dissolved", "dissolveReason", "proposedTime", "createdAt", "updatedAt", "feedbackToPupilMail", "feedbackToStudentMail", "followUpToPupilMail", "followUpToStudentMail", "source", "student"],
  MatchCreateOrConnectWithoutPupilInput: ["where", "create"],
  MatchCreateManyPupilInputEnvelope: ["data", "skipDuplicates"],
  Participation_certificateCreateWithoutPupilInput: ["uuid", "subjects", "categories", "certificateDate", "startDate", "endDate", "hoursPerWeek", "hoursTotal", "medium", "ongoingLessons", "state", "signaturePupil", "signatureParent", "signatureLocation", "signatureDate", "student"],
  Participation_certificateCreateOrConnectWithoutPupilInput: ["where", "create"],
  Participation_certificateCreateManyPupilInputEnvelope: ["data", "skipDuplicates"],
  Project_matchCreateWithoutPupilInput: ["uuid", "createdAt", "updatedAt", "dissolved", "dissolveReason", "student"],
  Project_matchCreateOrConnectWithoutPupilInput: ["where", "create"],
  Project_matchCreateManyPupilInputEnvelope: ["data", "skipDuplicates"],
  Pupil_tutoring_interest_confirmation_requestCreateWithoutPupilInput: ["createdAt", "updatedAt", "status", "token", "reminderSentDate"],
  Pupil_tutoring_interest_confirmation_requestCreateOrConnectWithoutPupilInput: ["where", "create"],
  Subcourse_participants_pupilCreateWithoutPupilInput: ["subcourse"],
  Subcourse_participants_pupilCreateOrConnectWithoutPupilInput: ["where", "create"],
  Subcourse_participants_pupilCreateManyPupilInputEnvelope: ["data", "skipDuplicates"],
  Subcourse_waiting_list_pupilCreateWithoutPupilInput: ["subcourse"],
  Subcourse_waiting_list_pupilCreateOrConnectWithoutPupilInput: ["where", "create"],
  Subcourse_waiting_list_pupilCreateManyPupilInputEnvelope: ["data", "skipDuplicates"],
  SchoolUpsertWithoutPupilInput: ["update", "create"],
  SchoolUpdateWithoutPupilInput: ["createdAt", "updatedAt", "name", "website", "emailDomain", "state", "schooltype", "activeCooperation"],
  Course_attendance_logUpsertWithWhereUniqueWithoutPupilInput: ["where", "update", "create"],
  Course_attendance_logUpdateWithWhereUniqueWithoutPupilInput: ["where", "data"],
  Course_attendance_logUpdateManyWithWhereWithoutPupilInput: ["where", "data"],
  Course_participation_certificateUpsertWithWhereUniqueWithoutPupilInput: ["where", "update", "create"],
  Course_participation_certificateUpdateWithWhereUniqueWithoutPupilInput: ["where", "data"],
  Course_participation_certificateUpdateManyWithWhereWithoutPupilInput: ["where", "data"],
  Course_participation_certificateScalarWhereInput: ["AND", "OR", "NOT", "id", "createdAt", "updatedAt", "issuerId", "pupilId", "subcourseId"],
  MatchUpsertWithWhereUniqueWithoutPupilInput: ["where", "update", "create"],
  MatchUpdateWithWhereUniqueWithoutPupilInput: ["where", "data"],
  MatchUpdateManyWithWhereWithoutPupilInput: ["where", "data"],
  MatchScalarWhereInput: ["AND", "OR", "NOT", "id", "uuid", "dissolved", "dissolveReason", "proposedTime", "createdAt", "updatedAt", "feedbackToPupilMail", "feedbackToStudentMail", "followUpToPupilMail", "followUpToStudentMail", "source", "studentId", "pupilId"],
  Participation_certificateUpsertWithWhereUniqueWithoutPupilInput: ["where", "update", "create"],
  Participation_certificateUpdateWithWhereUniqueWithoutPupilInput: ["where", "data"],
  Participation_certificateUpdateManyWithWhereWithoutPupilInput: ["where", "data"],
  Participation_certificateScalarWhereInput: ["AND", "OR", "NOT", "id", "uuid", "subjects", "categories", "certificateDate", "startDate", "endDate", "hoursPerWeek", "hoursTotal", "medium", "ongoingLessons", "state", "signaturePupil", "signatureParent", "signatureLocation", "signatureDate", "studentId", "pupilId"],
  Project_matchUpsertWithWhereUniqueWithoutPupilInput: ["where", "update", "create"],
  Project_matchUpdateWithWhereUniqueWithoutPupilInput: ["where", "data"],
  Project_matchUpdateManyWithWhereWithoutPupilInput: ["where", "data"],
  Project_matchScalarWhereInput: ["AND", "OR", "NOT", "id", "uuid", "createdAt", "updatedAt", "dissolved", "dissolveReason", "studentId", "pupilId"],
  Pupil_tutoring_interest_confirmation_requestUpsertWithoutPupilInput: ["update", "create"],
  Pupil_tutoring_interest_confirmation_requestUpdateWithoutPupilInput: ["createdAt", "updatedAt", "status", "token", "reminderSentDate"],
  Subcourse_participants_pupilUpsertWithWhereUniqueWithoutPupilInput: ["where", "update", "create"],
  Subcourse_participants_pupilUpdateWithWhereUniqueWithoutPupilInput: ["where", "data"],
  Subcourse_participants_pupilUpdateManyWithWhereWithoutPupilInput: ["where", "data"],
  Subcourse_participants_pupilScalarWhereInput: ["AND", "OR", "NOT", "subcourseId", "pupilId"],
  Subcourse_waiting_list_pupilUpsertWithWhereUniqueWithoutPupilInput: ["where", "update", "create"],
  Subcourse_waiting_list_pupilUpdateWithWhereUniqueWithoutPupilInput: ["where", "data"],
  Subcourse_waiting_list_pupilUpdateManyWithWhereWithoutPupilInput: ["where", "data"],
  Subcourse_waiting_list_pupilScalarWhereInput: ["AND", "OR", "NOT", "subcourseId", "pupilId"],
  PupilCreateWithoutPupil_tutoring_interest_confirmation_requestInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "state", "schooltype", "msg", "grade", "newsletter", "isPupil", "subjects", "openMatchRequestCount", "isParticipant", "isProjectCoachee", "isJufoParticipant", "openProjectMatchRequestCount", "projectMemberCount", "learningGermanSince", "matchingPriority", "lastUpdatedSettingsViaBlocker", "teacherEmailAddress", "registrationSource", "projectFields", "languages", "school", "course_attendance_log", "course_participation_certificate", "match", "participation_certificate", "project_match", "subcourse_participants_pupil", "subcourse_waiting_list_pupil"],
  PupilCreateOrConnectWithoutPupil_tutoring_interest_confirmation_requestInput: ["where", "create"],
  PupilUpsertWithoutPupil_tutoring_interest_confirmation_requestInput: ["update", "create"],
  PupilUpdateWithoutPupil_tutoring_interest_confirmation_requestInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "state", "schooltype", "msg", "grade", "newsletter", "isPupil", "subjects", "openMatchRequestCount", "isParticipant", "isProjectCoachee", "isJufoParticipant", "openProjectMatchRequestCount", "projectMemberCount", "learningGermanSince", "matchingPriority", "lastUpdatedSettingsViaBlocker", "teacherEmailAddress", "registrationSource", "projectFields", "languages", "school", "course_attendance_log", "course_participation_certificate", "match", "participation_certificate", "project_match", "subcourse_participants_pupil", "subcourse_waiting_list_pupil"],
  PupilCreateWithoutSchoolInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "state", "schooltype", "msg", "grade", "newsletter", "isPupil", "subjects", "openMatchRequestCount", "isParticipant", "isProjectCoachee", "isJufoParticipant", "openProjectMatchRequestCount", "projectMemberCount", "learningGermanSince", "matchingPriority", "lastUpdatedSettingsViaBlocker", "teacherEmailAddress", "registrationSource", "projectFields", "languages", "course_attendance_log", "course_participation_certificate", "match", "participation_certificate", "project_match", "pupil_tutoring_interest_confirmation_request", "subcourse_participants_pupil", "subcourse_waiting_list_pupil"],
  PupilCreateOrConnectWithoutSchoolInput: ["where", "create"],
  PupilCreateManySchoolInputEnvelope: ["data", "skipDuplicates"],
  PupilUpsertWithWhereUniqueWithoutSchoolInput: ["where", "update", "create"],
  PupilUpdateWithWhereUniqueWithoutSchoolInput: ["where", "data"],
  PupilUpdateManyWithWhereWithoutSchoolInput: ["where", "data"],
  PupilScalarWhereInput: ["AND", "OR", "NOT", "id", "createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "state", "schooltype", "msg", "grade", "newsletter", "isPupil", "subjects", "openMatchRequestCount", "isParticipant", "isProjectCoachee", "projectFields", "isJufoParticipant", "openProjectMatchRequestCount", "projectMemberCount", "languages", "learningGermanSince", "matchingPriority", "lastUpdatedSettingsViaBlocker", "teacherEmailAddress", "registrationSource", "schoolId"],
  Instructor_screeningCreateWithoutScreenerInput: ["success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt", "student"],
  Instructor_screeningCreateOrConnectWithoutScreenerInput: ["where", "create"],
  Instructor_screeningCreateManyScreenerInputEnvelope: ["data", "skipDuplicates"],
  Project_coaching_screeningCreateWithoutScreenerInput: ["success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt", "student"],
  Project_coaching_screeningCreateOrConnectWithoutScreenerInput: ["where", "create"],
  Project_coaching_screeningCreateManyScreenerInputEnvelope: ["data", "skipDuplicates"],
  ScreeningCreateWithoutScreenerInput: ["success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt", "student"],
  ScreeningCreateOrConnectWithoutScreenerInput: ["where", "create"],
  ScreeningCreateManyScreenerInputEnvelope: ["data", "skipDuplicates"],
  Instructor_screeningUpsertWithWhereUniqueWithoutScreenerInput: ["where", "update", "create"],
  Instructor_screeningUpdateWithWhereUniqueWithoutScreenerInput: ["where", "data"],
  Instructor_screeningUpdateManyWithWhereWithoutScreenerInput: ["where", "data"],
  Instructor_screeningScalarWhereInput: ["AND", "OR", "NOT", "id", "success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt", "screenerId", "studentId"],
  Project_coaching_screeningUpsertWithWhereUniqueWithoutScreenerInput: ["where", "update", "create"],
  Project_coaching_screeningUpdateWithWhereUniqueWithoutScreenerInput: ["where", "data"],
  Project_coaching_screeningUpdateManyWithWhereWithoutScreenerInput: ["where", "data"],
  Project_coaching_screeningScalarWhereInput: ["AND", "OR", "NOT", "id", "success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt", "screenerId", "studentId"],
  ScreeningUpsertWithWhereUniqueWithoutScreenerInput: ["where", "update", "create"],
  ScreeningUpdateWithWhereUniqueWithoutScreenerInput: ["where", "data"],
  ScreeningUpdateManyWithWhereWithoutScreenerInput: ["where", "data"],
  ScreeningScalarWhereInput: ["AND", "OR", "NOT", "id", "success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt", "screenerId", "studentId"],
  ScreenerCreateWithoutScreeningInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "password", "verified", "oldNumberID", "instructor_screening", "project_coaching_screening"],
  ScreenerCreateOrConnectWithoutScreeningInput: ["where", "create"],
  StudentCreateWithoutScreeningInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "phone", "feedback", "newsletter", "isStudent", "subjects", "openMatchRequestCount", "isInstructor", "msg", "state", "university", "module", "moduleHours", "isProjectCoach", "wasJufoParticipant", "hasJufoCertificate", "jufoPastParticipationInfo", "jufoPastParticipationConfirmed", "isUniversityStudent", "openProjectMatchRequestCount", "sentJufoAlumniScreeningReminderCount", "lastSentJufoAlumniScreeningInvitationDate", "supportsInDaZ", "sentScreeningReminderCount", "lastSentScreeningInvitationDate", "sentInstructorScreeningReminderCount", "lastSentInstructorScreeningInvitationDate", "lastUpdatedSettingsViaBlocker", "registrationSource", "languages", "course", "course_guest", "course_instructors_student", "course_participation_certificate", "expert_data", "instructor_screening", "jufo_verification_transmission", "lecture", "match", "participation_certificate", "project_coaching_screening", "project_field_with_grade_restriction", "project_match", "subcourse_instructors_student"],
  StudentCreateOrConnectWithoutScreeningInput: ["where", "create"],
  ScreenerUpsertWithoutScreeningInput: ["update", "create"],
  ScreenerUpdateWithoutScreeningInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "password", "verified", "oldNumberID", "instructor_screening", "project_coaching_screening"],
  StudentUpsertWithoutScreeningInput: ["update", "create"],
  StudentUpdateWithoutScreeningInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "phone", "feedback", "newsletter", "isStudent", "subjects", "openMatchRequestCount", "isInstructor", "msg", "state", "university", "module", "moduleHours", "isProjectCoach", "wasJufoParticipant", "hasJufoCertificate", "jufoPastParticipationInfo", "jufoPastParticipationConfirmed", "isUniversityStudent", "openProjectMatchRequestCount", "sentJufoAlumniScreeningReminderCount", "lastSentJufoAlumniScreeningInvitationDate", "supportsInDaZ", "sentScreeningReminderCount", "lastSentScreeningInvitationDate", "sentInstructorScreeningReminderCount", "lastSentInstructorScreeningInvitationDate", "lastUpdatedSettingsViaBlocker", "registrationSource", "languages", "course", "course_guest", "course_instructors_student", "course_participation_certificate", "expert_data", "instructor_screening", "jufo_verification_transmission", "lecture", "match", "participation_certificate", "project_coaching_screening", "project_field_with_grade_restriction", "project_match", "subcourse_instructors_student"],
  CourseCreateWithoutStudentInput: ["createdAt", "updatedAt", "name", "outline", "description", "imageKey", "category", "courseState", "screeningComment", "publicRanking", "allowContact", "course_guest", "course_instructors_student", "course_tags_course_tag", "subcourse"],
  CourseCreateOrConnectWithoutStudentInput: ["where", "create"],
  CourseCreateManyStudentInputEnvelope: ["data", "skipDuplicates"],
  Course_guestCreateWithoutStudentInput: ["createdAt", "updatedAt", "token", "firstname", "lastname", "email", "course"],
  Course_guestCreateOrConnectWithoutStudentInput: ["where", "create"],
  Course_guestCreateManyStudentInputEnvelope: ["data", "skipDuplicates"],
  Course_instructors_studentCreateWithoutStudentInput: ["course"],
  Course_instructors_studentCreateOrConnectWithoutStudentInput: ["where", "create"],
  Course_instructors_studentCreateManyStudentInputEnvelope: ["data", "skipDuplicates"],
  Course_participation_certificateCreateWithoutStudentInput: ["createdAt", "updatedAt", "pupil", "subcourse"],
  Course_participation_certificateCreateOrConnectWithoutStudentInput: ["where", "create"],
  Course_participation_certificateCreateManyStudentInputEnvelope: ["data", "skipDuplicates"],
  Expert_dataCreateWithoutStudentInput: ["createdAt", "updatedAt", "contactEmail", "description", "active", "allowed", "expert_data_expertise_tags_expertise_tag"],
  Expert_dataCreateOrConnectWithoutStudentInput: ["where", "create"],
  Instructor_screeningCreateWithoutStudentInput: ["success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt", "screener"],
  Instructor_screeningCreateOrConnectWithoutStudentInput: ["where", "create"],
  Jufo_verification_transmissionCreateWithoutStudentInput: ["createdAt", "uuid"],
  Jufo_verification_transmissionCreateOrConnectWithoutStudentInput: ["where", "create"],
  LectureCreateWithoutStudentInput: ["createdAt", "updatedAt", "start", "duration", "subcourse", "course_attendance_log"],
  LectureCreateOrConnectWithoutStudentInput: ["where", "create"],
  LectureCreateManyStudentInputEnvelope: ["data", "skipDuplicates"],
  MatchCreateWithoutStudentInput: ["uuid", "dissolved", "dissolveReason", "proposedTime", "createdAt", "updatedAt", "feedbackToPupilMail", "feedbackToStudentMail", "followUpToPupilMail", "followUpToStudentMail", "source", "pupil"],
  MatchCreateOrConnectWithoutStudentInput: ["where", "create"],
  MatchCreateManyStudentInputEnvelope: ["data", "skipDuplicates"],
  Participation_certificateCreateWithoutStudentInput: ["uuid", "subjects", "categories", "certificateDate", "startDate", "endDate", "hoursPerWeek", "hoursTotal", "medium", "ongoingLessons", "state", "signaturePupil", "signatureParent", "signatureLocation", "signatureDate", "pupil"],
  Participation_certificateCreateOrConnectWithoutStudentInput: ["where", "create"],
  Participation_certificateCreateManyStudentInputEnvelope: ["data", "skipDuplicates"],
  Project_coaching_screeningCreateWithoutStudentInput: ["success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt", "screener"],
  Project_coaching_screeningCreateOrConnectWithoutStudentInput: ["where", "create"],
  Project_field_with_grade_restrictionCreateWithoutStudentInput: ["createdAt", "updatedAt", "projectField", "min", "max"],
  Project_field_with_grade_restrictionCreateOrConnectWithoutStudentInput: ["where", "create"],
  Project_field_with_grade_restrictionCreateManyStudentInputEnvelope: ["data", "skipDuplicates"],
  Project_matchCreateWithoutStudentInput: ["uuid", "createdAt", "updatedAt", "dissolved", "dissolveReason", "pupil"],
  Project_matchCreateOrConnectWithoutStudentInput: ["where", "create"],
  Project_matchCreateManyStudentInputEnvelope: ["data", "skipDuplicates"],
  ScreeningCreateWithoutStudentInput: ["success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt", "screener"],
  ScreeningCreateOrConnectWithoutStudentInput: ["where", "create"],
  Subcourse_instructors_studentCreateWithoutStudentInput: ["subcourse"],
  Subcourse_instructors_studentCreateOrConnectWithoutStudentInput: ["where", "create"],
  Subcourse_instructors_studentCreateManyStudentInputEnvelope: ["data", "skipDuplicates"],
  CourseUpsertWithWhereUniqueWithoutStudentInput: ["where", "update", "create"],
  CourseUpdateWithWhereUniqueWithoutStudentInput: ["where", "data"],
  CourseUpdateManyWithWhereWithoutStudentInput: ["where", "data"],
  CourseScalarWhereInput: ["AND", "OR", "NOT", "id", "createdAt", "updatedAt", "name", "outline", "description", "imageKey", "category", "courseState", "screeningComment", "publicRanking", "allowContact", "correspondentId"],
  Course_guestUpsertWithWhereUniqueWithoutStudentInput: ["where", "update", "create"],
  Course_guestUpdateWithWhereUniqueWithoutStudentInput: ["where", "data"],
  Course_guestUpdateManyWithWhereWithoutStudentInput: ["where", "data"],
  Course_instructors_studentUpsertWithWhereUniqueWithoutStudentInput: ["where", "update", "create"],
  Course_instructors_studentUpdateWithWhereUniqueWithoutStudentInput: ["where", "data"],
  Course_instructors_studentUpdateManyWithWhereWithoutStudentInput: ["where", "data"],
  Course_participation_certificateUpsertWithWhereUniqueWithoutStudentInput: ["where", "update", "create"],
  Course_participation_certificateUpdateWithWhereUniqueWithoutStudentInput: ["where", "data"],
  Course_participation_certificateUpdateManyWithWhereWithoutStudentInput: ["where", "data"],
  Expert_dataUpsertWithoutStudentInput: ["update", "create"],
  Expert_dataUpdateWithoutStudentInput: ["createdAt", "updatedAt", "contactEmail", "description", "active", "allowed", "expert_data_expertise_tags_expertise_tag"],
  Instructor_screeningUpsertWithoutStudentInput: ["update", "create"],
  Instructor_screeningUpdateWithoutStudentInput: ["success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt", "screener"],
  Jufo_verification_transmissionUpsertWithoutStudentInput: ["update", "create"],
  Jufo_verification_transmissionUpdateWithoutStudentInput: ["createdAt", "uuid"],
  LectureUpsertWithWhereUniqueWithoutStudentInput: ["where", "update", "create"],
  LectureUpdateWithWhereUniqueWithoutStudentInput: ["where", "data"],
  LectureUpdateManyWithWhereWithoutStudentInput: ["where", "data"],
  LectureScalarWhereInput: ["AND", "OR", "NOT", "id", "createdAt", "updatedAt", "start", "duration", "instructorId", "subcourseId"],
  MatchUpsertWithWhereUniqueWithoutStudentInput: ["where", "update", "create"],
  MatchUpdateWithWhereUniqueWithoutStudentInput: ["where", "data"],
  MatchUpdateManyWithWhereWithoutStudentInput: ["where", "data"],
  Participation_certificateUpsertWithWhereUniqueWithoutStudentInput: ["where", "update", "create"],
  Participation_certificateUpdateWithWhereUniqueWithoutStudentInput: ["where", "data"],
  Participation_certificateUpdateManyWithWhereWithoutStudentInput: ["where", "data"],
  Project_coaching_screeningUpsertWithoutStudentInput: ["update", "create"],
  Project_coaching_screeningUpdateWithoutStudentInput: ["success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt", "screener"],
  Project_field_with_grade_restrictionUpsertWithWhereUniqueWithoutStudentInput: ["where", "update", "create"],
  Project_field_with_grade_restrictionUpdateWithWhereUniqueWithoutStudentInput: ["where", "data"],
  Project_field_with_grade_restrictionUpdateManyWithWhereWithoutStudentInput: ["where", "data"],
  Project_field_with_grade_restrictionScalarWhereInput: ["AND", "OR", "NOT", "id", "createdAt", "updatedAt", "projectField", "min", "max", "studentId"],
  Project_matchUpsertWithWhereUniqueWithoutStudentInput: ["where", "update", "create"],
  Project_matchUpdateWithWhereUniqueWithoutStudentInput: ["where", "data"],
  Project_matchUpdateManyWithWhereWithoutStudentInput: ["where", "data"],
  ScreeningUpsertWithoutStudentInput: ["update", "create"],
  ScreeningUpdateWithoutStudentInput: ["success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt", "screener"],
  Subcourse_instructors_studentUpsertWithWhereUniqueWithoutStudentInput: ["where", "update", "create"],
  Subcourse_instructors_studentUpdateWithWhereUniqueWithoutStudentInput: ["where", "data"],
  Subcourse_instructors_studentUpdateManyWithWhereWithoutStudentInput: ["where", "data"],
  Subcourse_instructors_studentScalarWhereInput: ["AND", "OR", "NOT", "subcourseId", "studentId"],
  CourseCreateWithoutSubcourseInput: ["createdAt", "updatedAt", "name", "outline", "description", "imageKey", "category", "courseState", "screeningComment", "publicRanking", "allowContact", "student", "course_guest", "course_instructors_student", "course_tags_course_tag"],
  CourseCreateOrConnectWithoutSubcourseInput: ["where", "create"],
  Course_participation_certificateCreateWithoutSubcourseInput: ["createdAt", "updatedAt", "student", "pupil"],
  Course_participation_certificateCreateOrConnectWithoutSubcourseInput: ["where", "create"],
  Course_participation_certificateCreateManySubcourseInputEnvelope: ["data", "skipDuplicates"],
  LectureCreateWithoutSubcourseInput: ["createdAt", "updatedAt", "start", "duration", "student", "course_attendance_log"],
  LectureCreateOrConnectWithoutSubcourseInput: ["where", "create"],
  LectureCreateManySubcourseInputEnvelope: ["data", "skipDuplicates"],
  Subcourse_instructors_studentCreateWithoutSubcourseInput: ["student"],
  Subcourse_instructors_studentCreateOrConnectWithoutSubcourseInput: ["where", "create"],
  Subcourse_instructors_studentCreateManySubcourseInputEnvelope: ["data", "skipDuplicates"],
  Subcourse_participants_pupilCreateWithoutSubcourseInput: ["pupil"],
  Subcourse_participants_pupilCreateOrConnectWithoutSubcourseInput: ["where", "create"],
  Subcourse_participants_pupilCreateManySubcourseInputEnvelope: ["data", "skipDuplicates"],
  Subcourse_waiting_list_pupilCreateWithoutSubcourseInput: ["pupil"],
  Subcourse_waiting_list_pupilCreateOrConnectWithoutSubcourseInput: ["where", "create"],
  Subcourse_waiting_list_pupilCreateManySubcourseInputEnvelope: ["data", "skipDuplicates"],
  CourseUpsertWithoutSubcourseInput: ["update", "create"],
  CourseUpdateWithoutSubcourseInput: ["createdAt", "updatedAt", "name", "outline", "description", "imageKey", "category", "courseState", "screeningComment", "publicRanking", "allowContact", "student", "course_guest", "course_instructors_student", "course_tags_course_tag"],
  Course_participation_certificateUpsertWithWhereUniqueWithoutSubcourseInput: ["where", "update", "create"],
  Course_participation_certificateUpdateWithWhereUniqueWithoutSubcourseInput: ["where", "data"],
  Course_participation_certificateUpdateManyWithWhereWithoutSubcourseInput: ["where", "data"],
  LectureUpsertWithWhereUniqueWithoutSubcourseInput: ["where", "update", "create"],
  LectureUpdateWithWhereUniqueWithoutSubcourseInput: ["where", "data"],
  LectureUpdateManyWithWhereWithoutSubcourseInput: ["where", "data"],
  Subcourse_instructors_studentUpsertWithWhereUniqueWithoutSubcourseInput: ["where", "update", "create"],
  Subcourse_instructors_studentUpdateWithWhereUniqueWithoutSubcourseInput: ["where", "data"],
  Subcourse_instructors_studentUpdateManyWithWhereWithoutSubcourseInput: ["where", "data"],
  Subcourse_participants_pupilUpsertWithWhereUniqueWithoutSubcourseInput: ["where", "update", "create"],
  Subcourse_participants_pupilUpdateWithWhereUniqueWithoutSubcourseInput: ["where", "data"],
  Subcourse_participants_pupilUpdateManyWithWhereWithoutSubcourseInput: ["where", "data"],
  Subcourse_waiting_list_pupilUpsertWithWhereUniqueWithoutSubcourseInput: ["where", "update", "create"],
  Subcourse_waiting_list_pupilUpdateWithWhereUniqueWithoutSubcourseInput: ["where", "data"],
  Subcourse_waiting_list_pupilUpdateManyWithWhereWithoutSubcourseInput: ["where", "data"],
  StudentCreateWithoutSubcourse_instructors_studentInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "phone", "feedback", "newsletter", "isStudent", "subjects", "openMatchRequestCount", "isInstructor", "msg", "state", "university", "module", "moduleHours", "isProjectCoach", "wasJufoParticipant", "hasJufoCertificate", "jufoPastParticipationInfo", "jufoPastParticipationConfirmed", "isUniversityStudent", "openProjectMatchRequestCount", "sentJufoAlumniScreeningReminderCount", "lastSentJufoAlumniScreeningInvitationDate", "supportsInDaZ", "sentScreeningReminderCount", "lastSentScreeningInvitationDate", "sentInstructorScreeningReminderCount", "lastSentInstructorScreeningInvitationDate", "lastUpdatedSettingsViaBlocker", "registrationSource", "languages", "course", "course_guest", "course_instructors_student", "course_participation_certificate", "expert_data", "instructor_screening", "jufo_verification_transmission", "lecture", "match", "participation_certificate", "project_coaching_screening", "project_field_with_grade_restriction", "project_match", "screening"],
  StudentCreateOrConnectWithoutSubcourse_instructors_studentInput: ["where", "create"],
  SubcourseCreateWithoutSubcourse_instructors_studentInput: ["createdAt", "updatedAt", "minGrade", "maxGrade", "maxParticipants", "joinAfterStart", "published", "cancelled", "course", "course_participation_certificate", "lecture", "subcourse_participants_pupil", "subcourse_waiting_list_pupil"],
  SubcourseCreateOrConnectWithoutSubcourse_instructors_studentInput: ["where", "create"],
  StudentUpsertWithoutSubcourse_instructors_studentInput: ["update", "create"],
  StudentUpdateWithoutSubcourse_instructors_studentInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "phone", "feedback", "newsletter", "isStudent", "subjects", "openMatchRequestCount", "isInstructor", "msg", "state", "university", "module", "moduleHours", "isProjectCoach", "wasJufoParticipant", "hasJufoCertificate", "jufoPastParticipationInfo", "jufoPastParticipationConfirmed", "isUniversityStudent", "openProjectMatchRequestCount", "sentJufoAlumniScreeningReminderCount", "lastSentJufoAlumniScreeningInvitationDate", "supportsInDaZ", "sentScreeningReminderCount", "lastSentScreeningInvitationDate", "sentInstructorScreeningReminderCount", "lastSentInstructorScreeningInvitationDate", "lastUpdatedSettingsViaBlocker", "registrationSource", "languages", "course", "course_guest", "course_instructors_student", "course_participation_certificate", "expert_data", "instructor_screening", "jufo_verification_transmission", "lecture", "match", "participation_certificate", "project_coaching_screening", "project_field_with_grade_restriction", "project_match", "screening"],
  SubcourseUpsertWithoutSubcourse_instructors_studentInput: ["update", "create"],
  SubcourseUpdateWithoutSubcourse_instructors_studentInput: ["createdAt", "updatedAt", "minGrade", "maxGrade", "maxParticipants", "joinAfterStart", "published", "cancelled", "course", "course_participation_certificate", "lecture", "subcourse_participants_pupil", "subcourse_waiting_list_pupil"],
  PupilCreateWithoutSubcourse_participants_pupilInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "state", "schooltype", "msg", "grade", "newsletter", "isPupil", "subjects", "openMatchRequestCount", "isParticipant", "isProjectCoachee", "isJufoParticipant", "openProjectMatchRequestCount", "projectMemberCount", "learningGermanSince", "matchingPriority", "lastUpdatedSettingsViaBlocker", "teacherEmailAddress", "registrationSource", "projectFields", "languages", "school", "course_attendance_log", "course_participation_certificate", "match", "participation_certificate", "project_match", "pupil_tutoring_interest_confirmation_request", "subcourse_waiting_list_pupil"],
  PupilCreateOrConnectWithoutSubcourse_participants_pupilInput: ["where", "create"],
  SubcourseCreateWithoutSubcourse_participants_pupilInput: ["createdAt", "updatedAt", "minGrade", "maxGrade", "maxParticipants", "joinAfterStart", "published", "cancelled", "course", "course_participation_certificate", "lecture", "subcourse_instructors_student", "subcourse_waiting_list_pupil"],
  SubcourseCreateOrConnectWithoutSubcourse_participants_pupilInput: ["where", "create"],
  PupilUpsertWithoutSubcourse_participants_pupilInput: ["update", "create"],
  PupilUpdateWithoutSubcourse_participants_pupilInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "state", "schooltype", "msg", "grade", "newsletter", "isPupil", "subjects", "openMatchRequestCount", "isParticipant", "isProjectCoachee", "isJufoParticipant", "openProjectMatchRequestCount", "projectMemberCount", "learningGermanSince", "matchingPriority", "lastUpdatedSettingsViaBlocker", "teacherEmailAddress", "registrationSource", "projectFields", "languages", "school", "course_attendance_log", "course_participation_certificate", "match", "participation_certificate", "project_match", "pupil_tutoring_interest_confirmation_request", "subcourse_waiting_list_pupil"],
  SubcourseUpsertWithoutSubcourse_participants_pupilInput: ["update", "create"],
  SubcourseUpdateWithoutSubcourse_participants_pupilInput: ["createdAt", "updatedAt", "minGrade", "maxGrade", "maxParticipants", "joinAfterStart", "published", "cancelled", "course", "course_participation_certificate", "lecture", "subcourse_instructors_student", "subcourse_waiting_list_pupil"],
  PupilCreateWithoutSubcourse_waiting_list_pupilInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "state", "schooltype", "msg", "grade", "newsletter", "isPupil", "subjects", "openMatchRequestCount", "isParticipant", "isProjectCoachee", "isJufoParticipant", "openProjectMatchRequestCount", "projectMemberCount", "learningGermanSince", "matchingPriority", "lastUpdatedSettingsViaBlocker", "teacherEmailAddress", "registrationSource", "projectFields", "languages", "school", "course_attendance_log", "course_participation_certificate", "match", "participation_certificate", "project_match", "pupil_tutoring_interest_confirmation_request", "subcourse_participants_pupil"],
  PupilCreateOrConnectWithoutSubcourse_waiting_list_pupilInput: ["where", "create"],
  SubcourseCreateWithoutSubcourse_waiting_list_pupilInput: ["createdAt", "updatedAt", "minGrade", "maxGrade", "maxParticipants", "joinAfterStart", "published", "cancelled", "course", "course_participation_certificate", "lecture", "subcourse_instructors_student", "subcourse_participants_pupil"],
  SubcourseCreateOrConnectWithoutSubcourse_waiting_list_pupilInput: ["where", "create"],
  PupilUpsertWithoutSubcourse_waiting_list_pupilInput: ["update", "create"],
  PupilUpdateWithoutSubcourse_waiting_list_pupilInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "state", "schooltype", "msg", "grade", "newsletter", "isPupil", "subjects", "openMatchRequestCount", "isParticipant", "isProjectCoachee", "isJufoParticipant", "openProjectMatchRequestCount", "projectMemberCount", "learningGermanSince", "matchingPriority", "lastUpdatedSettingsViaBlocker", "teacherEmailAddress", "registrationSource", "projectFields", "languages", "school", "course_attendance_log", "course_participation_certificate", "match", "participation_certificate", "project_match", "pupil_tutoring_interest_confirmation_request", "subcourse_participants_pupil"],
  SubcourseUpsertWithoutSubcourse_waiting_list_pupilInput: ["update", "create"],
  SubcourseUpdateWithoutSubcourse_waiting_list_pupilInput: ["createdAt", "updatedAt", "minGrade", "maxGrade", "maxParticipants", "joinAfterStart", "published", "cancelled", "course", "course_participation_certificate", "lecture", "subcourse_instructors_student", "subcourse_participants_pupil"],
  Course_guestCreateManyCourseInput: ["id", "createdAt", "updatedAt", "token", "firstname", "lastname", "email", "inviterId"],
  Course_instructors_studentCreateManyCourseInput: ["studentId"],
  Course_tags_course_tagCreateManyCourseInput: ["courseTagId"],
  SubcourseCreateManyCourseInput: ["id", "createdAt", "updatedAt", "minGrade", "maxGrade", "maxParticipants", "joinAfterStart", "published", "cancelled"],
  Course_guestUpdateWithoutCourseInput: ["createdAt", "updatedAt", "token", "firstname", "lastname", "email", "student"],
  Course_instructors_studentUpdateWithoutCourseInput: ["student"],
  Course_tags_course_tagUpdateWithoutCourseInput: ["course_tag"],
  SubcourseUpdateWithoutCourseInput: ["createdAt", "updatedAt", "minGrade", "maxGrade", "maxParticipants", "joinAfterStart", "published", "cancelled", "course_participation_certificate", "lecture", "subcourse_instructors_student", "subcourse_participants_pupil", "subcourse_waiting_list_pupil"],
  Course_tags_course_tagCreateManyCourse_tagInput: ["courseId"],
  Course_tags_course_tagUpdateWithoutCourse_tagInput: ["course"],
  Expert_data_expertise_tags_expertise_tagCreateManyExpert_dataInput: ["expertiseTagId"],
  Expert_data_expertise_tags_expertise_tagUpdateWithoutExpert_dataInput: ["expertise_tag"],
  Expert_data_expertise_tags_expertise_tagCreateManyExpertise_tagInput: ["expertDataId"],
  Expert_data_expertise_tags_expertise_tagUpdateWithoutExpertise_tagInput: ["expert_data"],
  Course_attendance_logCreateManyLectureInput: ["id", "createdAt", "updatedAt", "attendedTime", "ip", "pupilId"],
  Course_attendance_logUpdateWithoutLectureInput: ["createdAt", "updatedAt", "attendedTime", "ip", "pupil"],
  Course_attendance_logCreateManyPupilInput: ["id", "createdAt", "updatedAt", "attendedTime", "ip", "lectureId"],
  Course_participation_certificateCreateManyPupilInput: ["id", "createdAt", "updatedAt", "issuerId", "subcourseId"],
  MatchCreateManyPupilInput: ["id", "uuid", "dissolved", "dissolveReason", "proposedTime", "createdAt", "updatedAt", "feedbackToPupilMail", "feedbackToStudentMail", "followUpToPupilMail", "followUpToStudentMail", "source", "studentId"],
  Participation_certificateCreateManyPupilInput: ["id", "uuid", "subjects", "categories", "certificateDate", "startDate", "endDate", "hoursPerWeek", "hoursTotal", "medium", "ongoingLessons", "state", "signaturePupil", "signatureParent", "signatureLocation", "signatureDate", "studentId"],
  Project_matchCreateManyPupilInput: ["id", "uuid", "createdAt", "updatedAt", "dissolved", "dissolveReason", "studentId"],
  Subcourse_participants_pupilCreateManyPupilInput: ["subcourseId"],
  Subcourse_waiting_list_pupilCreateManyPupilInput: ["subcourseId"],
  Course_attendance_logUpdateWithoutPupilInput: ["createdAt", "updatedAt", "attendedTime", "ip", "lecture"],
  Course_participation_certificateUpdateWithoutPupilInput: ["createdAt", "updatedAt", "student", "subcourse"],
  MatchUpdateWithoutPupilInput: ["uuid", "dissolved", "dissolveReason", "proposedTime", "createdAt", "updatedAt", "feedbackToPupilMail", "feedbackToStudentMail", "followUpToPupilMail", "followUpToStudentMail", "source", "student"],
  Participation_certificateUpdateWithoutPupilInput: ["uuid", "subjects", "categories", "certificateDate", "startDate", "endDate", "hoursPerWeek", "hoursTotal", "medium", "ongoingLessons", "state", "signaturePupil", "signatureParent", "signatureLocation", "signatureDate", "student"],
  Project_matchUpdateWithoutPupilInput: ["uuid", "createdAt", "updatedAt", "dissolved", "dissolveReason", "student"],
  Subcourse_participants_pupilUpdateWithoutPupilInput: ["subcourse"],
  Subcourse_waiting_list_pupilUpdateWithoutPupilInput: ["subcourse"],
  PupilCreateManySchoolInput: ["id", "createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "state", "schooltype", "msg", "grade", "newsletter", "isPupil", "subjects", "openMatchRequestCount", "isParticipant", "isProjectCoachee", "isJufoParticipant", "openProjectMatchRequestCount", "projectMemberCount", "learningGermanSince", "matchingPriority", "lastUpdatedSettingsViaBlocker", "teacherEmailAddress", "registrationSource", "projectFields", "languages"],
  PupilUpdateWithoutSchoolInput: ["createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "state", "schooltype", "msg", "grade", "newsletter", "isPupil", "subjects", "openMatchRequestCount", "isParticipant", "isProjectCoachee", "isJufoParticipant", "openProjectMatchRequestCount", "projectMemberCount", "learningGermanSince", "matchingPriority", "lastUpdatedSettingsViaBlocker", "teacherEmailAddress", "registrationSource", "projectFields", "languages", "course_attendance_log", "course_participation_certificate", "match", "participation_certificate", "project_match", "pupil_tutoring_interest_confirmation_request", "subcourse_participants_pupil", "subcourse_waiting_list_pupil"],
  Instructor_screeningCreateManyScreenerInput: ["id", "success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt", "studentId"],
  Project_coaching_screeningCreateManyScreenerInput: ["id", "success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt", "studentId"],
  ScreeningCreateManyScreenerInput: ["id", "success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt", "studentId"],
  Instructor_screeningUpdateWithoutScreenerInput: ["success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt", "student"],
  Project_coaching_screeningUpdateWithoutScreenerInput: ["success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt", "student"],
  ScreeningUpdateWithoutScreenerInput: ["success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt", "student"],
  CourseCreateManyStudentInput: ["id", "createdAt", "updatedAt", "name", "outline", "description", "imageKey", "category", "courseState", "screeningComment", "publicRanking", "allowContact"],
  Course_guestCreateManyStudentInput: ["id", "createdAt", "updatedAt", "token", "firstname", "lastname", "email", "courseId"],
  Course_instructors_studentCreateManyStudentInput: ["courseId"],
  Course_participation_certificateCreateManyStudentInput: ["id", "createdAt", "updatedAt", "pupilId", "subcourseId"],
  LectureCreateManyStudentInput: ["id", "createdAt", "updatedAt", "start", "duration", "subcourseId"],
  MatchCreateManyStudentInput: ["id", "uuid", "dissolved", "dissolveReason", "proposedTime", "createdAt", "updatedAt", "feedbackToPupilMail", "feedbackToStudentMail", "followUpToPupilMail", "followUpToStudentMail", "source", "pupilId"],
  Participation_certificateCreateManyStudentInput: ["id", "uuid", "subjects", "categories", "certificateDate", "startDate", "endDate", "hoursPerWeek", "hoursTotal", "medium", "ongoingLessons", "state", "signaturePupil", "signatureParent", "signatureLocation", "signatureDate", "pupilId"],
  Project_field_with_grade_restrictionCreateManyStudentInput: ["id", "createdAt", "updatedAt", "projectField", "min", "max"],
  Project_matchCreateManyStudentInput: ["id", "uuid", "createdAt", "updatedAt", "dissolved", "dissolveReason", "pupilId"],
  Subcourse_instructors_studentCreateManyStudentInput: ["subcourseId"],
  CourseUpdateWithoutStudentInput: ["createdAt", "updatedAt", "name", "outline", "description", "imageKey", "category", "courseState", "screeningComment", "publicRanking", "allowContact", "course_guest", "course_instructors_student", "course_tags_course_tag", "subcourse"],
  Course_guestUpdateWithoutStudentInput: ["createdAt", "updatedAt", "token", "firstname", "lastname", "email", "course"],
  Course_instructors_studentUpdateWithoutStudentInput: ["course"],
  Course_participation_certificateUpdateWithoutStudentInput: ["createdAt", "updatedAt", "pupil", "subcourse"],
  LectureUpdateWithoutStudentInput: ["createdAt", "updatedAt", "start", "duration", "subcourse", "course_attendance_log"],
  MatchUpdateWithoutStudentInput: ["uuid", "dissolved", "dissolveReason", "proposedTime", "createdAt", "updatedAt", "feedbackToPupilMail", "feedbackToStudentMail", "followUpToPupilMail", "followUpToStudentMail", "source", "pupil"],
  Participation_certificateUpdateWithoutStudentInput: ["uuid", "subjects", "categories", "certificateDate", "startDate", "endDate", "hoursPerWeek", "hoursTotal", "medium", "ongoingLessons", "state", "signaturePupil", "signatureParent", "signatureLocation", "signatureDate", "pupil"],
  Project_field_with_grade_restrictionUpdateWithoutStudentInput: ["createdAt", "updatedAt", "projectField", "min", "max"],
  Project_matchUpdateWithoutStudentInput: ["uuid", "createdAt", "updatedAt", "dissolved", "dissolveReason", "pupil"],
  Subcourse_instructors_studentUpdateWithoutStudentInput: ["subcourse"],
  Course_participation_certificateCreateManySubcourseInput: ["id", "createdAt", "updatedAt", "issuerId", "pupilId"],
  LectureCreateManySubcourseInput: ["id", "createdAt", "updatedAt", "start", "duration", "instructorId"],
  Subcourse_instructors_studentCreateManySubcourseInput: ["studentId"],
  Subcourse_participants_pupilCreateManySubcourseInput: ["pupilId"],
  Subcourse_waiting_list_pupilCreateManySubcourseInput: ["pupilId"],
  Course_participation_certificateUpdateWithoutSubcourseInput: ["createdAt", "updatedAt", "student", "pupil"],
  LectureUpdateWithoutSubcourseInput: ["createdAt", "updatedAt", "start", "duration", "student", "course_attendance_log"],
  Subcourse_instructors_studentUpdateWithoutSubcourseInput: ["student"],
  Subcourse_participants_pupilUpdateWithoutSubcourseInput: ["pupil"],
  Subcourse_waiting_list_pupilUpdateWithoutSubcourseInput: ["pupil"]
};
const outputsInfo = {
  AggregateBbb_meeting: ["_count", "_avg", "_sum", "_min", "_max"],
  Bbb_meetingGroupBy: ["id", "createdAt", "updatedAt", "meetingID", "meetingName", "attendeePW", "moderatorPW", "alternativeUrl", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateConcrete_notification: ["_count", "_avg", "_sum", "_min", "_max"],
  Concrete_notificationGroupBy: ["id", "userId", "notificationID", "contextID", "context", "sentAt", "state", "error", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateCourse: ["_count", "_avg", "_sum", "_min", "_max"],
  CourseGroupBy: ["id", "createdAt", "updatedAt", "name", "outline", "description", "imageKey", "category", "courseState", "screeningComment", "publicRanking", "allowContact", "correspondentId", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateCourse_attendance_log: ["_count", "_avg", "_sum", "_min", "_max"],
  Course_attendance_logGroupBy: ["id", "createdAt", "updatedAt", "attendedTime", "ip", "pupilId", "lectureId", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateCourse_guest: ["_count", "_avg", "_sum", "_min", "_max"],
  Course_guestGroupBy: ["id", "createdAt", "updatedAt", "token", "firstname", "lastname", "email", "courseId", "inviterId", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateCourse_instructors_student: ["_count", "_avg", "_sum", "_min", "_max"],
  Course_instructors_studentGroupBy: ["courseId", "studentId", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateCourse_participation_certificate: ["_count", "_avg", "_sum", "_min", "_max"],
  Course_participation_certificateGroupBy: ["id", "createdAt", "updatedAt", "issuerId", "pupilId", "subcourseId", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateCourse_tag: ["_count", "_avg", "_sum", "_min", "_max"],
  Course_tagGroupBy: ["id", "identifier", "name", "category", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateCourse_tags_course_tag: ["_count", "_avg", "_sum", "_min", "_max"],
  Course_tags_course_tagGroupBy: ["courseId", "courseTagId", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateExpert_data: ["_count", "_avg", "_sum", "_min", "_max"],
  Expert_dataGroupBy: ["id", "createdAt", "updatedAt", "contactEmail", "description", "active", "allowed", "studentId", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateExpert_data_expertise_tags_expertise_tag: ["_count", "_avg", "_sum", "_min", "_max"],
  Expert_data_expertise_tags_expertise_tagGroupBy: ["expertDataId", "expertiseTagId", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateExpertise_tag: ["_count", "_avg", "_sum", "_min", "_max"],
  Expertise_tagGroupBy: ["id", "name", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateInstructor_screening: ["_count", "_avg", "_sum", "_min", "_max"],
  Instructor_screeningGroupBy: ["id", "success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt", "screenerId", "studentId", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateJufo_verification_transmission: ["_count", "_avg", "_sum", "_min", "_max"],
  Jufo_verification_transmissionGroupBy: ["id", "createdAt", "uuid", "studentId", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateLecture: ["_count", "_avg", "_sum", "_min", "_max"],
  LectureGroupBy: ["id", "createdAt", "updatedAt", "start", "duration", "instructorId", "subcourseId", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateLog: ["_count", "_avg", "_sum", "_min", "_max"],
  LogGroupBy: ["id", "logtype", "createdAt", "user", "data", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateMatch: ["_count", "_avg", "_sum", "_min", "_max"],
  MatchGroupBy: ["id", "uuid", "dissolved", "dissolveReason", "proposedTime", "createdAt", "updatedAt", "feedbackToPupilMail", "feedbackToStudentMail", "followUpToPupilMail", "followUpToStudentMail", "source", "studentId", "pupilId", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateMentor: ["_count", "_avg", "_sum", "_min", "_max"],
  MentorGroupBy: ["id", "createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "division", "expertise", "subjects", "teachingExperience", "message", "description", "imageUrl", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateNotification: ["_count", "_avg", "_sum", "_min", "_max"],
  NotificationGroupBy: ["id", "mailjetTemplateId", "description", "active", "recipient", "onActions", "category", "cancelledOnAction", "delay", "interval", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateParticipation_certificate: ["_count", "_avg", "_sum", "_min", "_max"],
  Participation_certificateGroupBy: ["id", "uuid", "subjects", "categories", "certificateDate", "startDate", "endDate", "hoursPerWeek", "hoursTotal", "medium", "ongoingLessons", "state", "signaturePupil", "signatureParent", "signatureLocation", "signatureDate", "studentId", "pupilId", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateProject_coaching_screening: ["_count", "_avg", "_sum", "_min", "_max"],
  Project_coaching_screeningGroupBy: ["id", "success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt", "screenerId", "studentId", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateProject_field_with_grade_restriction: ["_count", "_avg", "_sum", "_min", "_max"],
  Project_field_with_grade_restrictionGroupBy: ["id", "createdAt", "updatedAt", "projectField", "min", "max", "studentId", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateProject_match: ["_count", "_avg", "_sum", "_min", "_max"],
  Project_matchGroupBy: ["id", "uuid", "createdAt", "updatedAt", "dissolved", "dissolveReason", "studentId", "pupilId", "_count", "_avg", "_sum", "_min", "_max"],
  AggregatePupil: ["_count", "_avg", "_sum", "_min", "_max"],
  PupilGroupBy: ["id", "createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "state", "schooltype", "msg", "grade", "newsletter", "isPupil", "subjects", "openMatchRequestCount", "isParticipant", "isProjectCoachee", "projectFields", "isJufoParticipant", "openProjectMatchRequestCount", "projectMemberCount", "languages", "learningGermanSince", "matchingPriority", "lastUpdatedSettingsViaBlocker", "teacherEmailAddress", "registrationSource", "schoolId", "_count", "_avg", "_sum", "_min", "_max"],
  AggregatePupil_tutoring_interest_confirmation_request: ["_count", "_avg", "_sum", "_min", "_max"],
  Pupil_tutoring_interest_confirmation_requestGroupBy: ["id", "createdAt", "updatedAt", "status", "token", "reminderSentDate", "pupilId", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateSchool: ["_count", "_avg", "_sum", "_min", "_max"],
  SchoolGroupBy: ["id", "createdAt", "updatedAt", "name", "website", "emailDomain", "state", "schooltype", "activeCooperation", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateScreener: ["_count", "_avg", "_sum", "_min", "_max"],
  ScreenerGroupBy: ["id", "createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "password", "verified", "oldNumberID", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateScreening: ["_count", "_avg", "_sum", "_min", "_max"],
  ScreeningGroupBy: ["id", "success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt", "screenerId", "studentId", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateStudent: ["_count", "_avg", "_sum", "_min", "_max"],
  StudentGroupBy: ["id", "createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "phone", "feedback", "newsletter", "isStudent", "subjects", "openMatchRequestCount", "isInstructor", "msg", "state", "university", "module", "moduleHours", "isProjectCoach", "wasJufoParticipant", "hasJufoCertificate", "jufoPastParticipationInfo", "jufoPastParticipationConfirmed", "isUniversityStudent", "openProjectMatchRequestCount", "sentJufoAlumniScreeningReminderCount", "lastSentJufoAlumniScreeningInvitationDate", "supportsInDaZ", "languages", "sentScreeningReminderCount", "lastSentScreeningInvitationDate", "sentInstructorScreeningReminderCount", "lastSentInstructorScreeningInvitationDate", "lastUpdatedSettingsViaBlocker", "registrationSource", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateSubcourse: ["_count", "_avg", "_sum", "_min", "_max"],
  SubcourseGroupBy: ["id", "createdAt", "updatedAt", "minGrade", "maxGrade", "maxParticipants", "joinAfterStart", "published", "cancelled", "courseId", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateSubcourse_instructors_student: ["_count", "_avg", "_sum", "_min", "_max"],
  Subcourse_instructors_studentGroupBy: ["subcourseId", "studentId", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateSubcourse_participants_pupil: ["_count", "_avg", "_sum", "_min", "_max"],
  Subcourse_participants_pupilGroupBy: ["subcourseId", "pupilId", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateSubcourse_waiting_list_pupil: ["_count", "_avg", "_sum", "_min", "_max"],
  Subcourse_waiting_list_pupilGroupBy: ["subcourseId", "pupilId", "_count", "_avg", "_sum", "_min", "_max"],
  AffectedRowsOutput: ["count"],
  Bbb_meetingCountAggregate: ["id", "createdAt", "updatedAt", "meetingID", "meetingName", "attendeePW", "moderatorPW", "alternativeUrl", "_all"],
  Bbb_meetingAvgAggregate: ["id"],
  Bbb_meetingSumAggregate: ["id"],
  Bbb_meetingMinAggregate: ["id", "createdAt", "updatedAt", "meetingID", "meetingName", "attendeePW", "moderatorPW", "alternativeUrl"],
  Bbb_meetingMaxAggregate: ["id", "createdAt", "updatedAt", "meetingID", "meetingName", "attendeePW", "moderatorPW", "alternativeUrl"],
  Concrete_notificationCountAggregate: ["id", "userId", "notificationID", "contextID", "context", "sentAt", "state", "error", "_all"],
  Concrete_notificationAvgAggregate: ["id", "notificationID", "state"],
  Concrete_notificationSumAggregate: ["id", "notificationID", "state"],
  Concrete_notificationMinAggregate: ["id", "userId", "notificationID", "contextID", "sentAt", "state", "error"],
  Concrete_notificationMaxAggregate: ["id", "userId", "notificationID", "contextID", "sentAt", "state", "error"],
  CourseCountAggregate: ["id", "createdAt", "updatedAt", "name", "outline", "description", "imageKey", "category", "courseState", "screeningComment", "publicRanking", "allowContact", "correspondentId", "_all"],
  CourseAvgAggregate: ["id", "publicRanking", "correspondentId"],
  CourseSumAggregate: ["id", "publicRanking", "correspondentId"],
  CourseMinAggregate: ["id", "createdAt", "updatedAt", "name", "outline", "description", "imageKey", "category", "courseState", "screeningComment", "publicRanking", "allowContact", "correspondentId"],
  CourseMaxAggregate: ["id", "createdAt", "updatedAt", "name", "outline", "description", "imageKey", "category", "courseState", "screeningComment", "publicRanking", "allowContact", "correspondentId"],
  Course_attendance_logCountAggregate: ["id", "createdAt", "updatedAt", "attendedTime", "ip", "pupilId", "lectureId", "_all"],
  Course_attendance_logAvgAggregate: ["id", "attendedTime", "pupilId", "lectureId"],
  Course_attendance_logSumAggregate: ["id", "attendedTime", "pupilId", "lectureId"],
  Course_attendance_logMinAggregate: ["id", "createdAt", "updatedAt", "attendedTime", "ip", "pupilId", "lectureId"],
  Course_attendance_logMaxAggregate: ["id", "createdAt", "updatedAt", "attendedTime", "ip", "pupilId", "lectureId"],
  Course_guestCountAggregate: ["id", "createdAt", "updatedAt", "token", "firstname", "lastname", "email", "courseId", "inviterId", "_all"],
  Course_guestAvgAggregate: ["id", "courseId", "inviterId"],
  Course_guestSumAggregate: ["id", "courseId", "inviterId"],
  Course_guestMinAggregate: ["id", "createdAt", "updatedAt", "token", "firstname", "lastname", "email", "courseId", "inviterId"],
  Course_guestMaxAggregate: ["id", "createdAt", "updatedAt", "token", "firstname", "lastname", "email", "courseId", "inviterId"],
  Course_instructors_studentCountAggregate: ["courseId", "studentId", "_all"],
  Course_instructors_studentAvgAggregate: ["courseId", "studentId"],
  Course_instructors_studentSumAggregate: ["courseId", "studentId"],
  Course_instructors_studentMinAggregate: ["courseId", "studentId"],
  Course_instructors_studentMaxAggregate: ["courseId", "studentId"],
  Course_participation_certificateCountAggregate: ["id", "createdAt", "updatedAt", "issuerId", "pupilId", "subcourseId", "_all"],
  Course_participation_certificateAvgAggregate: ["id", "issuerId", "pupilId", "subcourseId"],
  Course_participation_certificateSumAggregate: ["id", "issuerId", "pupilId", "subcourseId"],
  Course_participation_certificateMinAggregate: ["id", "createdAt", "updatedAt", "issuerId", "pupilId", "subcourseId"],
  Course_participation_certificateMaxAggregate: ["id", "createdAt", "updatedAt", "issuerId", "pupilId", "subcourseId"],
  Course_tagCountAggregate: ["id", "identifier", "name", "category", "_all"],
  Course_tagAvgAggregate: ["id"],
  Course_tagSumAggregate: ["id"],
  Course_tagMinAggregate: ["id", "identifier", "name", "category"],
  Course_tagMaxAggregate: ["id", "identifier", "name", "category"],
  Course_tags_course_tagCountAggregate: ["courseId", "courseTagId", "_all"],
  Course_tags_course_tagAvgAggregate: ["courseId", "courseTagId"],
  Course_tags_course_tagSumAggregate: ["courseId", "courseTagId"],
  Course_tags_course_tagMinAggregate: ["courseId", "courseTagId"],
  Course_tags_course_tagMaxAggregate: ["courseId", "courseTagId"],
  Expert_dataCountAggregate: ["id", "createdAt", "updatedAt", "contactEmail", "description", "active", "allowed", "studentId", "_all"],
  Expert_dataAvgAggregate: ["id", "studentId"],
  Expert_dataSumAggregate: ["id", "studentId"],
  Expert_dataMinAggregate: ["id", "createdAt", "updatedAt", "contactEmail", "description", "active", "allowed", "studentId"],
  Expert_dataMaxAggregate: ["id", "createdAt", "updatedAt", "contactEmail", "description", "active", "allowed", "studentId"],
  Expert_data_expertise_tags_expertise_tagCountAggregate: ["expertDataId", "expertiseTagId", "_all"],
  Expert_data_expertise_tags_expertise_tagAvgAggregate: ["expertDataId", "expertiseTagId"],
  Expert_data_expertise_tags_expertise_tagSumAggregate: ["expertDataId", "expertiseTagId"],
  Expert_data_expertise_tags_expertise_tagMinAggregate: ["expertDataId", "expertiseTagId"],
  Expert_data_expertise_tags_expertise_tagMaxAggregate: ["expertDataId", "expertiseTagId"],
  Expertise_tagCountAggregate: ["id", "name", "_all"],
  Expertise_tagAvgAggregate: ["id"],
  Expertise_tagSumAggregate: ["id"],
  Expertise_tagMinAggregate: ["id", "name"],
  Expertise_tagMaxAggregate: ["id", "name"],
  Instructor_screeningCountAggregate: ["id", "success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt", "screenerId", "studentId", "_all"],
  Instructor_screeningAvgAggregate: ["id", "screenerId", "studentId"],
  Instructor_screeningSumAggregate: ["id", "screenerId", "studentId"],
  Instructor_screeningMinAggregate: ["id", "success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt", "screenerId", "studentId"],
  Instructor_screeningMaxAggregate: ["id", "success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt", "screenerId", "studentId"],
  Jufo_verification_transmissionCountAggregate: ["id", "createdAt", "uuid", "studentId", "_all"],
  Jufo_verification_transmissionAvgAggregate: ["id", "studentId"],
  Jufo_verification_transmissionSumAggregate: ["id", "studentId"],
  Jufo_verification_transmissionMinAggregate: ["id", "createdAt", "uuid", "studentId"],
  Jufo_verification_transmissionMaxAggregate: ["id", "createdAt", "uuid", "studentId"],
  LectureCountAggregate: ["id", "createdAt", "updatedAt", "start", "duration", "instructorId", "subcourseId", "_all"],
  LectureAvgAggregate: ["id", "duration", "instructorId", "subcourseId"],
  LectureSumAggregate: ["id", "duration", "instructorId", "subcourseId"],
  LectureMinAggregate: ["id", "createdAt", "updatedAt", "start", "duration", "instructorId", "subcourseId"],
  LectureMaxAggregate: ["id", "createdAt", "updatedAt", "start", "duration", "instructorId", "subcourseId"],
  LogCountAggregate: ["id", "logtype", "createdAt", "user", "data", "_all"],
  LogAvgAggregate: ["id"],
  LogSumAggregate: ["id"],
  LogMinAggregate: ["id", "logtype", "createdAt", "user", "data"],
  LogMaxAggregate: ["id", "logtype", "createdAt", "user", "data"],
  MatchCountAggregate: ["id", "uuid", "dissolved", "dissolveReason", "proposedTime", "createdAt", "updatedAt", "feedbackToPupilMail", "feedbackToStudentMail", "followUpToPupilMail", "followUpToStudentMail", "source", "studentId", "pupilId", "_all"],
  MatchAvgAggregate: ["id", "dissolveReason", "studentId", "pupilId"],
  MatchSumAggregate: ["id", "dissolveReason", "studentId", "pupilId"],
  MatchMinAggregate: ["id", "uuid", "dissolved", "dissolveReason", "proposedTime", "createdAt", "updatedAt", "feedbackToPupilMail", "feedbackToStudentMail", "followUpToPupilMail", "followUpToStudentMail", "source", "studentId", "pupilId"],
  MatchMaxAggregate: ["id", "uuid", "dissolved", "dissolveReason", "proposedTime", "createdAt", "updatedAt", "feedbackToPupilMail", "feedbackToStudentMail", "followUpToPupilMail", "followUpToStudentMail", "source", "studentId", "pupilId"],
  MentorCountAggregate: ["id", "createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "division", "expertise", "subjects", "teachingExperience", "message", "description", "imageUrl", "_all"],
  MentorAvgAggregate: ["id"],
  MentorSumAggregate: ["id"],
  MentorMinAggregate: ["id", "createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "subjects", "teachingExperience", "message", "description", "imageUrl"],
  MentorMaxAggregate: ["id", "createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "subjects", "teachingExperience", "message", "description", "imageUrl"],
  NotificationCountAggregate: ["id", "mailjetTemplateId", "description", "active", "recipient", "onActions", "category", "cancelledOnAction", "delay", "interval", "_all"],
  NotificationAvgAggregate: ["id", "mailjetTemplateId", "recipient", "delay", "interval"],
  NotificationSumAggregate: ["id", "mailjetTemplateId", "recipient", "delay", "interval"],
  NotificationMinAggregate: ["id", "mailjetTemplateId", "description", "active", "recipient", "delay", "interval"],
  NotificationMaxAggregate: ["id", "mailjetTemplateId", "description", "active", "recipient", "delay", "interval"],
  Participation_certificateCountAggregate: ["id", "uuid", "subjects", "categories", "certificateDate", "startDate", "endDate", "hoursPerWeek", "hoursTotal", "medium", "ongoingLessons", "state", "signaturePupil", "signatureParent", "signatureLocation", "signatureDate", "studentId", "pupilId", "_all"],
  Participation_certificateAvgAggregate: ["id", "hoursPerWeek", "hoursTotal", "studentId", "pupilId"],
  Participation_certificateSumAggregate: ["id", "hoursPerWeek", "hoursTotal", "studentId", "pupilId"],
  Participation_certificateMinAggregate: ["id", "uuid", "subjects", "categories", "certificateDate", "startDate", "endDate", "hoursPerWeek", "hoursTotal", "medium", "ongoingLessons", "state", "signaturePupil", "signatureParent", "signatureLocation", "signatureDate", "studentId", "pupilId"],
  Participation_certificateMaxAggregate: ["id", "uuid", "subjects", "categories", "certificateDate", "startDate", "endDate", "hoursPerWeek", "hoursTotal", "medium", "ongoingLessons", "state", "signaturePupil", "signatureParent", "signatureLocation", "signatureDate", "studentId", "pupilId"],
  Project_coaching_screeningCountAggregate: ["id", "success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt", "screenerId", "studentId", "_all"],
  Project_coaching_screeningAvgAggregate: ["id", "screenerId", "studentId"],
  Project_coaching_screeningSumAggregate: ["id", "screenerId", "studentId"],
  Project_coaching_screeningMinAggregate: ["id", "success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt", "screenerId", "studentId"],
  Project_coaching_screeningMaxAggregate: ["id", "success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt", "screenerId", "studentId"],
  Project_field_with_grade_restrictionCountAggregate: ["id", "createdAt", "updatedAt", "projectField", "min", "max", "studentId", "_all"],
  Project_field_with_grade_restrictionAvgAggregate: ["id", "min", "max", "studentId"],
  Project_field_with_grade_restrictionSumAggregate: ["id", "min", "max", "studentId"],
  Project_field_with_grade_restrictionMinAggregate: ["id", "createdAt", "updatedAt", "projectField", "min", "max", "studentId"],
  Project_field_with_grade_restrictionMaxAggregate: ["id", "createdAt", "updatedAt", "projectField", "min", "max", "studentId"],
  Project_matchCountAggregate: ["id", "uuid", "createdAt", "updatedAt", "dissolved", "dissolveReason", "studentId", "pupilId", "_all"],
  Project_matchAvgAggregate: ["id", "dissolveReason", "studentId", "pupilId"],
  Project_matchSumAggregate: ["id", "dissolveReason", "studentId", "pupilId"],
  Project_matchMinAggregate: ["id", "uuid", "createdAt", "updatedAt", "dissolved", "dissolveReason", "studentId", "pupilId"],
  Project_matchMaxAggregate: ["id", "uuid", "createdAt", "updatedAt", "dissolved", "dissolveReason", "studentId", "pupilId"],
  PupilCountAggregate: ["id", "createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "state", "schooltype", "msg", "grade", "newsletter", "isPupil", "subjects", "openMatchRequestCount", "isParticipant", "isProjectCoachee", "projectFields", "isJufoParticipant", "openProjectMatchRequestCount", "projectMemberCount", "languages", "learningGermanSince", "matchingPriority", "lastUpdatedSettingsViaBlocker", "teacherEmailAddress", "registrationSource", "schoolId", "_all"],
  PupilAvgAggregate: ["id", "openMatchRequestCount", "openProjectMatchRequestCount", "projectMemberCount", "matchingPriority", "schoolId"],
  PupilSumAggregate: ["id", "openMatchRequestCount", "openProjectMatchRequestCount", "projectMemberCount", "matchingPriority", "schoolId"],
  PupilMinAggregate: ["id", "createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "state", "schooltype", "msg", "grade", "newsletter", "isPupil", "subjects", "openMatchRequestCount", "isParticipant", "isProjectCoachee", "isJufoParticipant", "openProjectMatchRequestCount", "projectMemberCount", "learningGermanSince", "matchingPriority", "lastUpdatedSettingsViaBlocker", "teacherEmailAddress", "registrationSource", "schoolId"],
  PupilMaxAggregate: ["id", "createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "state", "schooltype", "msg", "grade", "newsletter", "isPupil", "subjects", "openMatchRequestCount", "isParticipant", "isProjectCoachee", "isJufoParticipant", "openProjectMatchRequestCount", "projectMemberCount", "learningGermanSince", "matchingPriority", "lastUpdatedSettingsViaBlocker", "teacherEmailAddress", "registrationSource", "schoolId"],
  Pupil_tutoring_interest_confirmation_requestCountAggregate: ["id", "createdAt", "updatedAt", "status", "token", "reminderSentDate", "pupilId", "_all"],
  Pupil_tutoring_interest_confirmation_requestAvgAggregate: ["id", "pupilId"],
  Pupil_tutoring_interest_confirmation_requestSumAggregate: ["id", "pupilId"],
  Pupil_tutoring_interest_confirmation_requestMinAggregate: ["id", "createdAt", "updatedAt", "status", "token", "reminderSentDate", "pupilId"],
  Pupil_tutoring_interest_confirmation_requestMaxAggregate: ["id", "createdAt", "updatedAt", "status", "token", "reminderSentDate", "pupilId"],
  SchoolCountAggregate: ["id", "createdAt", "updatedAt", "name", "website", "emailDomain", "state", "schooltype", "activeCooperation", "_all"],
  SchoolAvgAggregate: ["id"],
  SchoolSumAggregate: ["id"],
  SchoolMinAggregate: ["id", "createdAt", "updatedAt", "name", "website", "emailDomain", "state", "schooltype", "activeCooperation"],
  SchoolMaxAggregate: ["id", "createdAt", "updatedAt", "name", "website", "emailDomain", "state", "schooltype", "activeCooperation"],
  ScreenerCountAggregate: ["id", "createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "password", "verified", "oldNumberID", "_all"],
  ScreenerAvgAggregate: ["id", "oldNumberID"],
  ScreenerSumAggregate: ["id", "oldNumberID"],
  ScreenerMinAggregate: ["id", "createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "password", "verified", "oldNumberID"],
  ScreenerMaxAggregate: ["id", "createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "password", "verified", "oldNumberID"],
  ScreeningCountAggregate: ["id", "success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt", "screenerId", "studentId", "_all"],
  ScreeningAvgAggregate: ["id", "screenerId", "studentId"],
  ScreeningSumAggregate: ["id", "screenerId", "studentId"],
  ScreeningMinAggregate: ["id", "success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt", "screenerId", "studentId"],
  ScreeningMaxAggregate: ["id", "success", "comment", "knowsCoronaSchoolFrom", "createdAt", "updatedAt", "screenerId", "studentId"],
  StudentCountAggregate: ["id", "createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "phone", "feedback", "newsletter", "isStudent", "subjects", "openMatchRequestCount", "isInstructor", "msg", "state", "university", "module", "moduleHours", "isProjectCoach", "wasJufoParticipant", "hasJufoCertificate", "jufoPastParticipationInfo", "jufoPastParticipationConfirmed", "isUniversityStudent", "openProjectMatchRequestCount", "sentJufoAlumniScreeningReminderCount", "lastSentJufoAlumniScreeningInvitationDate", "supportsInDaZ", "languages", "sentScreeningReminderCount", "lastSentScreeningInvitationDate", "sentInstructorScreeningReminderCount", "lastSentInstructorScreeningInvitationDate", "lastUpdatedSettingsViaBlocker", "registrationSource", "_all"],
  StudentAvgAggregate: ["id", "openMatchRequestCount", "moduleHours", "openProjectMatchRequestCount", "sentJufoAlumniScreeningReminderCount", "sentScreeningReminderCount", "sentInstructorScreeningReminderCount"],
  StudentSumAggregate: ["id", "openMatchRequestCount", "moduleHours", "openProjectMatchRequestCount", "sentJufoAlumniScreeningReminderCount", "sentScreeningReminderCount", "sentInstructorScreeningReminderCount"],
  StudentMinAggregate: ["id", "createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "phone", "feedback", "newsletter", "isStudent", "subjects", "openMatchRequestCount", "isInstructor", "msg", "state", "university", "module", "moduleHours", "isProjectCoach", "wasJufoParticipant", "hasJufoCertificate", "jufoPastParticipationInfo", "jufoPastParticipationConfirmed", "isUniversityStudent", "openProjectMatchRequestCount", "sentJufoAlumniScreeningReminderCount", "lastSentJufoAlumniScreeningInvitationDate", "supportsInDaZ", "sentScreeningReminderCount", "lastSentScreeningInvitationDate", "sentInstructorScreeningReminderCount", "lastSentInstructorScreeningInvitationDate", "lastUpdatedSettingsViaBlocker", "registrationSource"],
  StudentMaxAggregate: ["id", "createdAt", "updatedAt", "firstname", "lastname", "active", "email", "verification", "verifiedAt", "authToken", "authTokenUsed", "authTokenSent", "wix_id", "wix_creation_date", "phone", "feedback", "newsletter", "isStudent", "subjects", "openMatchRequestCount", "isInstructor", "msg", "state", "university", "module", "moduleHours", "isProjectCoach", "wasJufoParticipant", "hasJufoCertificate", "jufoPastParticipationInfo", "jufoPastParticipationConfirmed", "isUniversityStudent", "openProjectMatchRequestCount", "sentJufoAlumniScreeningReminderCount", "lastSentJufoAlumniScreeningInvitationDate", "supportsInDaZ", "sentScreeningReminderCount", "lastSentScreeningInvitationDate", "sentInstructorScreeningReminderCount", "lastSentInstructorScreeningInvitationDate", "lastUpdatedSettingsViaBlocker", "registrationSource"],
  SubcourseCountAggregate: ["id", "createdAt", "updatedAt", "minGrade", "maxGrade", "maxParticipants", "joinAfterStart", "published", "cancelled", "courseId", "_all"],
  SubcourseAvgAggregate: ["id", "minGrade", "maxGrade", "maxParticipants", "courseId"],
  SubcourseSumAggregate: ["id", "minGrade", "maxGrade", "maxParticipants", "courseId"],
  SubcourseMinAggregate: ["id", "createdAt", "updatedAt", "minGrade", "maxGrade", "maxParticipants", "joinAfterStart", "published", "cancelled", "courseId"],
  SubcourseMaxAggregate: ["id", "createdAt", "updatedAt", "minGrade", "maxGrade", "maxParticipants", "joinAfterStart", "published", "cancelled", "courseId"],
  Subcourse_instructors_studentCountAggregate: ["subcourseId", "studentId", "_all"],
  Subcourse_instructors_studentAvgAggregate: ["subcourseId", "studentId"],
  Subcourse_instructors_studentSumAggregate: ["subcourseId", "studentId"],
  Subcourse_instructors_studentMinAggregate: ["subcourseId", "studentId"],
  Subcourse_instructors_studentMaxAggregate: ["subcourseId", "studentId"],
  Subcourse_participants_pupilCountAggregate: ["subcourseId", "pupilId", "_all"],
  Subcourse_participants_pupilAvgAggregate: ["subcourseId", "pupilId"],
  Subcourse_participants_pupilSumAggregate: ["subcourseId", "pupilId"],
  Subcourse_participants_pupilMinAggregate: ["subcourseId", "pupilId"],
  Subcourse_participants_pupilMaxAggregate: ["subcourseId", "pupilId"],
  Subcourse_waiting_list_pupilCountAggregate: ["subcourseId", "pupilId", "_all"],
  Subcourse_waiting_list_pupilAvgAggregate: ["subcourseId", "pupilId"],
  Subcourse_waiting_list_pupilSumAggregate: ["subcourseId", "pupilId"],
  Subcourse_waiting_list_pupilMinAggregate: ["subcourseId", "pupilId"],
  Subcourse_waiting_list_pupilMaxAggregate: ["subcourseId", "pupilId"]
};
const argsInfo = {
  FindUniqueBbb_meetingArgs: ["where"],
  FindFirstBbb_meetingArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyBbb_meetingArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  CreateBbb_meetingArgs: ["data"],
  CreateManyBbb_meetingArgs: ["data", "skipDuplicates"],
  DeleteBbb_meetingArgs: ["where"],
  UpdateBbb_meetingArgs: ["data", "where"],
  DeleteManyBbb_meetingArgs: ["where"],
  UpdateManyBbb_meetingArgs: ["data", "where"],
  UpsertBbb_meetingArgs: ["where", "create", "update"],
  AggregateBbb_meetingArgs: ["where", "orderBy", "cursor", "take", "skip"],
  GroupByBbb_meetingArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  FindUniqueConcrete_notificationArgs: ["where"],
  FindFirstConcrete_notificationArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyConcrete_notificationArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  CreateConcrete_notificationArgs: ["data"],
  CreateManyConcrete_notificationArgs: ["data", "skipDuplicates"],
  DeleteConcrete_notificationArgs: ["where"],
  UpdateConcrete_notificationArgs: ["data", "where"],
  DeleteManyConcrete_notificationArgs: ["where"],
  UpdateManyConcrete_notificationArgs: ["data", "where"],
  UpsertConcrete_notificationArgs: ["where", "create", "update"],
  AggregateConcrete_notificationArgs: ["where", "orderBy", "cursor", "take", "skip"],
  GroupByConcrete_notificationArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  FindUniqueCourseArgs: ["where"],
  FindFirstCourseArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyCourseArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  CreateCourseArgs: ["data"],
  CreateManyCourseArgs: ["data", "skipDuplicates"],
  DeleteCourseArgs: ["where"],
  UpdateCourseArgs: ["data", "where"],
  DeleteManyCourseArgs: ["where"],
  UpdateManyCourseArgs: ["data", "where"],
  UpsertCourseArgs: ["where", "create", "update"],
  AggregateCourseArgs: ["where", "orderBy", "cursor", "take", "skip"],
  GroupByCourseArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  FindUniqueCourse_attendance_logArgs: ["where"],
  FindFirstCourse_attendance_logArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyCourse_attendance_logArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  CreateCourse_attendance_logArgs: ["data"],
  CreateManyCourse_attendance_logArgs: ["data", "skipDuplicates"],
  DeleteCourse_attendance_logArgs: ["where"],
  UpdateCourse_attendance_logArgs: ["data", "where"],
  DeleteManyCourse_attendance_logArgs: ["where"],
  UpdateManyCourse_attendance_logArgs: ["data", "where"],
  UpsertCourse_attendance_logArgs: ["where", "create", "update"],
  AggregateCourse_attendance_logArgs: ["where", "orderBy", "cursor", "take", "skip"],
  GroupByCourse_attendance_logArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  FindUniqueCourse_guestArgs: ["where"],
  FindFirstCourse_guestArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyCourse_guestArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  CreateCourse_guestArgs: ["data"],
  CreateManyCourse_guestArgs: ["data", "skipDuplicates"],
  DeleteCourse_guestArgs: ["where"],
  UpdateCourse_guestArgs: ["data", "where"],
  DeleteManyCourse_guestArgs: ["where"],
  UpdateManyCourse_guestArgs: ["data", "where"],
  UpsertCourse_guestArgs: ["where", "create", "update"],
  AggregateCourse_guestArgs: ["where", "orderBy", "cursor", "take", "skip"],
  GroupByCourse_guestArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  FindUniqueCourse_instructors_studentArgs: ["where"],
  FindFirstCourse_instructors_studentArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyCourse_instructors_studentArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  CreateCourse_instructors_studentArgs: ["data"],
  CreateManyCourse_instructors_studentArgs: ["data", "skipDuplicates"],
  DeleteCourse_instructors_studentArgs: ["where"],
  UpdateCourse_instructors_studentArgs: ["data", "where"],
  DeleteManyCourse_instructors_studentArgs: ["where"],
  UpdateManyCourse_instructors_studentArgs: ["data", "where"],
  UpsertCourse_instructors_studentArgs: ["where", "create", "update"],
  AggregateCourse_instructors_studentArgs: ["where", "orderBy", "cursor", "take", "skip"],
  GroupByCourse_instructors_studentArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  FindUniqueCourse_participation_certificateArgs: ["where"],
  FindFirstCourse_participation_certificateArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyCourse_participation_certificateArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  CreateCourse_participation_certificateArgs: ["data"],
  CreateManyCourse_participation_certificateArgs: ["data", "skipDuplicates"],
  DeleteCourse_participation_certificateArgs: ["where"],
  UpdateCourse_participation_certificateArgs: ["data", "where"],
  DeleteManyCourse_participation_certificateArgs: ["where"],
  UpdateManyCourse_participation_certificateArgs: ["data", "where"],
  UpsertCourse_participation_certificateArgs: ["where", "create", "update"],
  AggregateCourse_participation_certificateArgs: ["where", "orderBy", "cursor", "take", "skip"],
  GroupByCourse_participation_certificateArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  FindUniqueCourse_tagArgs: ["where"],
  FindFirstCourse_tagArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyCourse_tagArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  CreateCourse_tagArgs: ["data"],
  CreateManyCourse_tagArgs: ["data", "skipDuplicates"],
  DeleteCourse_tagArgs: ["where"],
  UpdateCourse_tagArgs: ["data", "where"],
  DeleteManyCourse_tagArgs: ["where"],
  UpdateManyCourse_tagArgs: ["data", "where"],
  UpsertCourse_tagArgs: ["where", "create", "update"],
  AggregateCourse_tagArgs: ["where", "orderBy", "cursor", "take", "skip"],
  GroupByCourse_tagArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  FindUniqueCourse_tags_course_tagArgs: ["where"],
  FindFirstCourse_tags_course_tagArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyCourse_tags_course_tagArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  CreateCourse_tags_course_tagArgs: ["data"],
  CreateManyCourse_tags_course_tagArgs: ["data", "skipDuplicates"],
  DeleteCourse_tags_course_tagArgs: ["where"],
  UpdateCourse_tags_course_tagArgs: ["data", "where"],
  DeleteManyCourse_tags_course_tagArgs: ["where"],
  UpdateManyCourse_tags_course_tagArgs: ["data", "where"],
  UpsertCourse_tags_course_tagArgs: ["where", "create", "update"],
  AggregateCourse_tags_course_tagArgs: ["where", "orderBy", "cursor", "take", "skip"],
  GroupByCourse_tags_course_tagArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  FindUniqueExpert_dataArgs: ["where"],
  FindFirstExpert_dataArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyExpert_dataArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  CreateExpert_dataArgs: ["data"],
  CreateManyExpert_dataArgs: ["data", "skipDuplicates"],
  DeleteExpert_dataArgs: ["where"],
  UpdateExpert_dataArgs: ["data", "where"],
  DeleteManyExpert_dataArgs: ["where"],
  UpdateManyExpert_dataArgs: ["data", "where"],
  UpsertExpert_dataArgs: ["where", "create", "update"],
  AggregateExpert_dataArgs: ["where", "orderBy", "cursor", "take", "skip"],
  GroupByExpert_dataArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  FindUniqueExpert_data_expertise_tags_expertise_tagArgs: ["where"],
  FindFirstExpert_data_expertise_tags_expertise_tagArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyExpert_data_expertise_tags_expertise_tagArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  CreateExpert_data_expertise_tags_expertise_tagArgs: ["data"],
  CreateManyExpert_data_expertise_tags_expertise_tagArgs: ["data", "skipDuplicates"],
  DeleteExpert_data_expertise_tags_expertise_tagArgs: ["where"],
  UpdateExpert_data_expertise_tags_expertise_tagArgs: ["data", "where"],
  DeleteManyExpert_data_expertise_tags_expertise_tagArgs: ["where"],
  UpdateManyExpert_data_expertise_tags_expertise_tagArgs: ["data", "where"],
  UpsertExpert_data_expertise_tags_expertise_tagArgs: ["where", "create", "update"],
  AggregateExpert_data_expertise_tags_expertise_tagArgs: ["where", "orderBy", "cursor", "take", "skip"],
  GroupByExpert_data_expertise_tags_expertise_tagArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  FindUniqueExpertise_tagArgs: ["where"],
  FindFirstExpertise_tagArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyExpertise_tagArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  CreateExpertise_tagArgs: ["data"],
  CreateManyExpertise_tagArgs: ["data", "skipDuplicates"],
  DeleteExpertise_tagArgs: ["where"],
  UpdateExpertise_tagArgs: ["data", "where"],
  DeleteManyExpertise_tagArgs: ["where"],
  UpdateManyExpertise_tagArgs: ["data", "where"],
  UpsertExpertise_tagArgs: ["where", "create", "update"],
  AggregateExpertise_tagArgs: ["where", "orderBy", "cursor", "take", "skip"],
  GroupByExpertise_tagArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  FindUniqueInstructor_screeningArgs: ["where"],
  FindFirstInstructor_screeningArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyInstructor_screeningArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  CreateInstructor_screeningArgs: ["data"],
  CreateManyInstructor_screeningArgs: ["data", "skipDuplicates"],
  DeleteInstructor_screeningArgs: ["where"],
  UpdateInstructor_screeningArgs: ["data", "where"],
  DeleteManyInstructor_screeningArgs: ["where"],
  UpdateManyInstructor_screeningArgs: ["data", "where"],
  UpsertInstructor_screeningArgs: ["where", "create", "update"],
  AggregateInstructor_screeningArgs: ["where", "orderBy", "cursor", "take", "skip"],
  GroupByInstructor_screeningArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  FindUniqueJufo_verification_transmissionArgs: ["where"],
  FindFirstJufo_verification_transmissionArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyJufo_verification_transmissionArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  CreateJufo_verification_transmissionArgs: ["data"],
  CreateManyJufo_verification_transmissionArgs: ["data", "skipDuplicates"],
  DeleteJufo_verification_transmissionArgs: ["where"],
  UpdateJufo_verification_transmissionArgs: ["data", "where"],
  DeleteManyJufo_verification_transmissionArgs: ["where"],
  UpdateManyJufo_verification_transmissionArgs: ["data", "where"],
  UpsertJufo_verification_transmissionArgs: ["where", "create", "update"],
  AggregateJufo_verification_transmissionArgs: ["where", "orderBy", "cursor", "take", "skip"],
  GroupByJufo_verification_transmissionArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  FindUniqueLectureArgs: ["where"],
  FindFirstLectureArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyLectureArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  CreateLectureArgs: ["data"],
  CreateManyLectureArgs: ["data", "skipDuplicates"],
  DeleteLectureArgs: ["where"],
  UpdateLectureArgs: ["data", "where"],
  DeleteManyLectureArgs: ["where"],
  UpdateManyLectureArgs: ["data", "where"],
  UpsertLectureArgs: ["where", "create", "update"],
  AggregateLectureArgs: ["where", "orderBy", "cursor", "take", "skip"],
  GroupByLectureArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  FindUniqueLogArgs: ["where"],
  FindFirstLogArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyLogArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  CreateLogArgs: ["data"],
  CreateManyLogArgs: ["data", "skipDuplicates"],
  DeleteLogArgs: ["where"],
  UpdateLogArgs: ["data", "where"],
  DeleteManyLogArgs: ["where"],
  UpdateManyLogArgs: ["data", "where"],
  UpsertLogArgs: ["where", "create", "update"],
  AggregateLogArgs: ["where", "orderBy", "cursor", "take", "skip"],
  GroupByLogArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  FindUniqueMatchArgs: ["where"],
  FindFirstMatchArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyMatchArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  CreateMatchArgs: ["data"],
  CreateManyMatchArgs: ["data", "skipDuplicates"],
  DeleteMatchArgs: ["where"],
  UpdateMatchArgs: ["data", "where"],
  DeleteManyMatchArgs: ["where"],
  UpdateManyMatchArgs: ["data", "where"],
  UpsertMatchArgs: ["where", "create", "update"],
  AggregateMatchArgs: ["where", "orderBy", "cursor", "take", "skip"],
  GroupByMatchArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  FindUniqueMentorArgs: ["where"],
  FindFirstMentorArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyMentorArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  CreateMentorArgs: ["data"],
  CreateManyMentorArgs: ["data", "skipDuplicates"],
  DeleteMentorArgs: ["where"],
  UpdateMentorArgs: ["data", "where"],
  DeleteManyMentorArgs: ["where"],
  UpdateManyMentorArgs: ["data", "where"],
  UpsertMentorArgs: ["where", "create", "update"],
  AggregateMentorArgs: ["where", "orderBy", "cursor", "take", "skip"],
  GroupByMentorArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  FindUniqueNotificationArgs: ["where"],
  FindFirstNotificationArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyNotificationArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  CreateNotificationArgs: ["data"],
  CreateManyNotificationArgs: ["data", "skipDuplicates"],
  DeleteNotificationArgs: ["where"],
  UpdateNotificationArgs: ["data", "where"],
  DeleteManyNotificationArgs: ["where"],
  UpdateManyNotificationArgs: ["data", "where"],
  UpsertNotificationArgs: ["where", "create", "update"],
  AggregateNotificationArgs: ["where", "orderBy", "cursor", "take", "skip"],
  GroupByNotificationArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  FindUniqueParticipation_certificateArgs: ["where"],
  FindFirstParticipation_certificateArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyParticipation_certificateArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  CreateParticipation_certificateArgs: ["data"],
  CreateManyParticipation_certificateArgs: ["data", "skipDuplicates"],
  DeleteParticipation_certificateArgs: ["where"],
  UpdateParticipation_certificateArgs: ["data", "where"],
  DeleteManyParticipation_certificateArgs: ["where"],
  UpdateManyParticipation_certificateArgs: ["data", "where"],
  UpsertParticipation_certificateArgs: ["where", "create", "update"],
  AggregateParticipation_certificateArgs: ["where", "orderBy", "cursor", "take", "skip"],
  GroupByParticipation_certificateArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  FindUniqueProject_coaching_screeningArgs: ["where"],
  FindFirstProject_coaching_screeningArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyProject_coaching_screeningArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  CreateProject_coaching_screeningArgs: ["data"],
  CreateManyProject_coaching_screeningArgs: ["data", "skipDuplicates"],
  DeleteProject_coaching_screeningArgs: ["where"],
  UpdateProject_coaching_screeningArgs: ["data", "where"],
  DeleteManyProject_coaching_screeningArgs: ["where"],
  UpdateManyProject_coaching_screeningArgs: ["data", "where"],
  UpsertProject_coaching_screeningArgs: ["where", "create", "update"],
  AggregateProject_coaching_screeningArgs: ["where", "orderBy", "cursor", "take", "skip"],
  GroupByProject_coaching_screeningArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  FindUniqueProject_field_with_grade_restrictionArgs: ["where"],
  FindFirstProject_field_with_grade_restrictionArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyProject_field_with_grade_restrictionArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  CreateProject_field_with_grade_restrictionArgs: ["data"],
  CreateManyProject_field_with_grade_restrictionArgs: ["data", "skipDuplicates"],
  DeleteProject_field_with_grade_restrictionArgs: ["where"],
  UpdateProject_field_with_grade_restrictionArgs: ["data", "where"],
  DeleteManyProject_field_with_grade_restrictionArgs: ["where"],
  UpdateManyProject_field_with_grade_restrictionArgs: ["data", "where"],
  UpsertProject_field_with_grade_restrictionArgs: ["where", "create", "update"],
  AggregateProject_field_with_grade_restrictionArgs: ["where", "orderBy", "cursor", "take", "skip"],
  GroupByProject_field_with_grade_restrictionArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  FindUniqueProject_matchArgs: ["where"],
  FindFirstProject_matchArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyProject_matchArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  CreateProject_matchArgs: ["data"],
  CreateManyProject_matchArgs: ["data", "skipDuplicates"],
  DeleteProject_matchArgs: ["where"],
  UpdateProject_matchArgs: ["data", "where"],
  DeleteManyProject_matchArgs: ["where"],
  UpdateManyProject_matchArgs: ["data", "where"],
  UpsertProject_matchArgs: ["where", "create", "update"],
  AggregateProject_matchArgs: ["where", "orderBy", "cursor", "take", "skip"],
  GroupByProject_matchArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  FindUniquePupilArgs: ["where"],
  FindFirstPupilArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyPupilArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  CreatePupilArgs: ["data"],
  CreateManyPupilArgs: ["data", "skipDuplicates"],
  DeletePupilArgs: ["where"],
  UpdatePupilArgs: ["data", "where"],
  DeleteManyPupilArgs: ["where"],
  UpdateManyPupilArgs: ["data", "where"],
  UpsertPupilArgs: ["where", "create", "update"],
  AggregatePupilArgs: ["where", "orderBy", "cursor", "take", "skip"],
  GroupByPupilArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  FindUniquePupil_tutoring_interest_confirmation_requestArgs: ["where"],
  FindFirstPupil_tutoring_interest_confirmation_requestArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyPupil_tutoring_interest_confirmation_requestArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  CreatePupil_tutoring_interest_confirmation_requestArgs: ["data"],
  CreateManyPupil_tutoring_interest_confirmation_requestArgs: ["data", "skipDuplicates"],
  DeletePupil_tutoring_interest_confirmation_requestArgs: ["where"],
  UpdatePupil_tutoring_interest_confirmation_requestArgs: ["data", "where"],
  DeleteManyPupil_tutoring_interest_confirmation_requestArgs: ["where"],
  UpdateManyPupil_tutoring_interest_confirmation_requestArgs: ["data", "where"],
  UpsertPupil_tutoring_interest_confirmation_requestArgs: ["where", "create", "update"],
  AggregatePupil_tutoring_interest_confirmation_requestArgs: ["where", "orderBy", "cursor", "take", "skip"],
  GroupByPupil_tutoring_interest_confirmation_requestArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  FindUniqueSchoolArgs: ["where"],
  FindFirstSchoolArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManySchoolArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  CreateSchoolArgs: ["data"],
  CreateManySchoolArgs: ["data", "skipDuplicates"],
  DeleteSchoolArgs: ["where"],
  UpdateSchoolArgs: ["data", "where"],
  DeleteManySchoolArgs: ["where"],
  UpdateManySchoolArgs: ["data", "where"],
  UpsertSchoolArgs: ["where", "create", "update"],
  AggregateSchoolArgs: ["where", "orderBy", "cursor", "take", "skip"],
  GroupBySchoolArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  FindUniqueScreenerArgs: ["where"],
  FindFirstScreenerArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyScreenerArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  CreateScreenerArgs: ["data"],
  CreateManyScreenerArgs: ["data", "skipDuplicates"],
  DeleteScreenerArgs: ["where"],
  UpdateScreenerArgs: ["data", "where"],
  DeleteManyScreenerArgs: ["where"],
  UpdateManyScreenerArgs: ["data", "where"],
  UpsertScreenerArgs: ["where", "create", "update"],
  AggregateScreenerArgs: ["where", "orderBy", "cursor", "take", "skip"],
  GroupByScreenerArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  FindUniqueScreeningArgs: ["where"],
  FindFirstScreeningArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyScreeningArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  CreateScreeningArgs: ["data"],
  CreateManyScreeningArgs: ["data", "skipDuplicates"],
  DeleteScreeningArgs: ["where"],
  UpdateScreeningArgs: ["data", "where"],
  DeleteManyScreeningArgs: ["where"],
  UpdateManyScreeningArgs: ["data", "where"],
  UpsertScreeningArgs: ["where", "create", "update"],
  AggregateScreeningArgs: ["where", "orderBy", "cursor", "take", "skip"],
  GroupByScreeningArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  FindUniqueStudentArgs: ["where"],
  FindFirstStudentArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyStudentArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  CreateStudentArgs: ["data"],
  CreateManyStudentArgs: ["data", "skipDuplicates"],
  DeleteStudentArgs: ["where"],
  UpdateStudentArgs: ["data", "where"],
  DeleteManyStudentArgs: ["where"],
  UpdateManyStudentArgs: ["data", "where"],
  UpsertStudentArgs: ["where", "create", "update"],
  AggregateStudentArgs: ["where", "orderBy", "cursor", "take", "skip"],
  GroupByStudentArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  FindUniqueSubcourseArgs: ["where"],
  FindFirstSubcourseArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManySubcourseArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  CreateSubcourseArgs: ["data"],
  CreateManySubcourseArgs: ["data", "skipDuplicates"],
  DeleteSubcourseArgs: ["where"],
  UpdateSubcourseArgs: ["data", "where"],
  DeleteManySubcourseArgs: ["where"],
  UpdateManySubcourseArgs: ["data", "where"],
  UpsertSubcourseArgs: ["where", "create", "update"],
  AggregateSubcourseArgs: ["where", "orderBy", "cursor", "take", "skip"],
  GroupBySubcourseArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  FindUniqueSubcourse_instructors_studentArgs: ["where"],
  FindFirstSubcourse_instructors_studentArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManySubcourse_instructors_studentArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  CreateSubcourse_instructors_studentArgs: ["data"],
  CreateManySubcourse_instructors_studentArgs: ["data", "skipDuplicates"],
  DeleteSubcourse_instructors_studentArgs: ["where"],
  UpdateSubcourse_instructors_studentArgs: ["data", "where"],
  DeleteManySubcourse_instructors_studentArgs: ["where"],
  UpdateManySubcourse_instructors_studentArgs: ["data", "where"],
  UpsertSubcourse_instructors_studentArgs: ["where", "create", "update"],
  AggregateSubcourse_instructors_studentArgs: ["where", "orderBy", "cursor", "take", "skip"],
  GroupBySubcourse_instructors_studentArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  FindUniqueSubcourse_participants_pupilArgs: ["where"],
  FindFirstSubcourse_participants_pupilArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManySubcourse_participants_pupilArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  CreateSubcourse_participants_pupilArgs: ["data"],
  CreateManySubcourse_participants_pupilArgs: ["data", "skipDuplicates"],
  DeleteSubcourse_participants_pupilArgs: ["where"],
  UpdateSubcourse_participants_pupilArgs: ["data", "where"],
  DeleteManySubcourse_participants_pupilArgs: ["where"],
  UpdateManySubcourse_participants_pupilArgs: ["data", "where"],
  UpsertSubcourse_participants_pupilArgs: ["where", "create", "update"],
  AggregateSubcourse_participants_pupilArgs: ["where", "orderBy", "cursor", "take", "skip"],
  GroupBySubcourse_participants_pupilArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  FindUniqueSubcourse_waiting_list_pupilArgs: ["where"],
  FindFirstSubcourse_waiting_list_pupilArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManySubcourse_waiting_list_pupilArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  CreateSubcourse_waiting_list_pupilArgs: ["data"],
  CreateManySubcourse_waiting_list_pupilArgs: ["data", "skipDuplicates"],
  DeleteSubcourse_waiting_list_pupilArgs: ["where"],
  UpdateSubcourse_waiting_list_pupilArgs: ["data", "where"],
  DeleteManySubcourse_waiting_list_pupilArgs: ["where"],
  UpdateManySubcourse_waiting_list_pupilArgs: ["data", "where"],
  UpsertSubcourse_waiting_list_pupilArgs: ["where", "create", "update"],
  AggregateSubcourse_waiting_list_pupilArgs: ["where", "orderBy", "cursor", "take", "skip"],
  GroupBySubcourse_waiting_list_pupilArgs: ["where", "orderBy", "by", "having", "take", "skip"]
};

type ResolverModelNames = keyof typeof crudResolversMap;

type ModelResolverActionNames<
  TModel extends ResolverModelNames
  > = keyof typeof crudResolversMap[TModel]["prototype"];

export type ResolverActionsConfig<
  TModel extends ResolverModelNames
  > = Partial<Record<ModelResolverActionNames<TModel> | "_all", MethodDecorator[]>>;

export type ResolversEnhanceMap = {
  [TModel in ResolverModelNames]?: ResolverActionsConfig<TModel>;
};

export function applyResolversEnhanceMap(
  resolversEnhanceMap: ResolversEnhanceMap,
) {
  for (const resolversEnhanceMapKey of Object.keys(resolversEnhanceMap)) {
    const modelName = resolversEnhanceMapKey as keyof typeof resolversEnhanceMap;
    const crudTarget = crudResolversMap[modelName].prototype;
    const resolverActionsConfig = resolversEnhanceMap[modelName]!;
    const actionResolversConfig = actionResolversMap[modelName];
    if (resolverActionsConfig._all) {
      const allActionsDecorators = resolverActionsConfig._all;
      const resolverActionNames = resolversInfo[modelName as keyof typeof resolversInfo];
      for (const resolverActionName of resolverActionNames) {
        const actionTarget = (actionResolversConfig[
          resolverActionName as keyof typeof actionResolversConfig
        ] as Function).prototype;
        for (const allActionsDecorator of allActionsDecorators) {
          allActionsDecorator(
            crudTarget,
            resolverActionName,
            Object.getOwnPropertyDescriptor(crudTarget, resolverActionName)!,
          );
          allActionsDecorator(
            actionTarget,
            resolverActionName,
            Object.getOwnPropertyDescriptor(actionTarget, resolverActionName)!,
          );
        }
      }
    }
    const resolverActionsToApply = Object.keys(resolverActionsConfig).filter(
      it => it !== "_all"
    );
    for (const resolverActionName of resolverActionsToApply) {
      const decorators = resolverActionsConfig[
        resolverActionName as keyof typeof resolverActionsConfig
      ] as MethodDecorator[];
      const actionTarget = (actionResolversConfig[
        resolverActionName as keyof typeof actionResolversConfig
      ] as Function).prototype;
      for (const decorator of decorators) {
        decorator(
          crudTarget,
          resolverActionName,
          Object.getOwnPropertyDescriptor(crudTarget, resolverActionName)!,
        );
        decorator(
          actionTarget,
          resolverActionName,
          Object.getOwnPropertyDescriptor(actionTarget, resolverActionName)!,
        );
      }
    }
  }
}

type RelationResolverModelNames = keyof typeof relationResolversMap;

type RelationResolverActionNames<
  TModel extends RelationResolverModelNames
  > = keyof typeof relationResolversMap[TModel]["prototype"];

export type RelationResolverActionsConfig<TModel extends RelationResolverModelNames>
  = Partial<Record<RelationResolverActionNames<TModel> | "_all", MethodDecorator[]>>;

export type RelationResolversEnhanceMap = {
  [TModel in RelationResolverModelNames]?: RelationResolverActionsConfig<TModel>;
};

export function applyRelationResolversEnhanceMap(
  relationResolversEnhanceMap: RelationResolversEnhanceMap,
) {
  for (const relationResolversEnhanceMapKey of Object.keys(relationResolversEnhanceMap)) {
    const modelName = relationResolversEnhanceMapKey as keyof typeof relationResolversEnhanceMap;
    const relationResolverTarget = relationResolversMap[modelName].prototype;
    const relationResolverActionsConfig = relationResolversEnhanceMap[modelName]!;
    if (relationResolverActionsConfig._all) {
      const allActionsDecorators = relationResolverActionsConfig._all;
      const relationResolverActionNames = relationResolversInfo[modelName as keyof typeof relationResolversInfo];
      for (const relationResolverActionName of relationResolverActionNames) {
        for (const allActionsDecorator of allActionsDecorators) {
          allActionsDecorator(
            relationResolverTarget,
            relationResolverActionName,
            Object.getOwnPropertyDescriptor(relationResolverTarget, relationResolverActionName)!,
          );
        }
      }
    }
    const relationResolverActionsToApply = Object.keys(relationResolverActionsConfig).filter(
      it => it !== "_all"
    );
    for (const relationResolverActionName of relationResolverActionsToApply) {
      const decorators = relationResolverActionsConfig[
        relationResolverActionName as keyof typeof relationResolverActionsConfig
      ] as MethodDecorator[];
      for (const decorator of decorators) {
        decorator(
          relationResolverTarget,
          relationResolverActionName,
          Object.getOwnPropertyDescriptor(relationResolverTarget, relationResolverActionName)!,
        );
      }
    }
  }
}

type TypeConfig = {
  class?: ClassDecorator[];
  fields?: FieldsConfig;
};

type FieldsConfig<TTypeKeys extends string = string> = Partial<
  Record<TTypeKeys | "_all", PropertyDecorator[]>
>;

function applyTypeClassEnhanceConfig<
  TEnhanceConfig extends TypeConfig,
  TType extends object
>(
  enhanceConfig: TEnhanceConfig,
  typeClass: ClassType<TType>,
  typePrototype: TType,
  typeFieldNames: string[]
) {
  if (enhanceConfig.class) {
    for (const decorator of enhanceConfig.class) {
      decorator(typeClass);
    }
  }
  if (enhanceConfig.fields) {
    if (enhanceConfig.fields._all) {
      const allFieldsDecorators = enhanceConfig.fields._all;
      for (const typeFieldName of typeFieldNames) {
        for (const allFieldsDecorator of allFieldsDecorators) {
          allFieldsDecorator(typePrototype, typeFieldName);
        }
      }
    }
    const configFieldsToApply = Object.keys(enhanceConfig.fields).filter(
      it => it !== "_all"
    );
    for (const typeFieldName of configFieldsToApply) {
      const fieldDecorators = enhanceConfig.fields[typeFieldName]!;
      for (const fieldDecorator of fieldDecorators) {
        fieldDecorator(typePrototype, typeFieldName);
      }
    }
  }
}

type ModelNames = keyof typeof models;

type ModelFieldNames<TModel extends ModelNames> = Exclude<
  keyof typeof models[TModel]["prototype"],
  number | symbol
>;

type ModelFieldsConfig<TModel extends ModelNames> = FieldsConfig<
  ModelFieldNames<TModel>
>;

export type ModelConfig<TModel extends ModelNames> = {
  class?: ClassDecorator[];
  fields?: ModelFieldsConfig<TModel>;
};

export type ModelsEnhanceMap = {
  [TModel in ModelNames]?: ModelConfig<TModel>;
};

export function applyModelsEnhanceMap(modelsEnhanceMap: ModelsEnhanceMap) {
  for (const modelsEnhanceMapKey of Object.keys(modelsEnhanceMap)) {
    const modelName = modelsEnhanceMapKey as keyof typeof modelsEnhanceMap;
    const modelConfig = modelsEnhanceMap[modelName]!;
    const modelClass = models[modelName];
    const modelTarget = modelClass.prototype;
    applyTypeClassEnhanceConfig(
      modelConfig,
      modelClass,
      modelTarget,
      modelsInfo[modelName as keyof typeof modelsInfo],
    );
  }
}

type OutputTypesNames = keyof typeof outputTypes;

type OutputTypeFieldNames<TOutput extends OutputTypesNames> = Exclude<
  keyof typeof outputTypes[TOutput]["prototype"],
  number | symbol
>;

type OutputTypeFieldsConfig<
  TOutput extends OutputTypesNames
  > = FieldsConfig<OutputTypeFieldNames<TOutput>>;

export type OutputTypeConfig<TOutput extends OutputTypesNames> = {
  class?: ClassDecorator[];
  fields?: OutputTypeFieldsConfig<TOutput>;
};

export type OutputTypesEnhanceMap = {
  [TOutput in OutputTypesNames]?: OutputTypeConfig<TOutput>;
};

export function applyOutputTypesEnhanceMap(
  outputTypesEnhanceMap: OutputTypesEnhanceMap,
) {
  for (const outputTypeEnhanceMapKey of Object.keys(outputTypesEnhanceMap)) {
    const outputTypeName = outputTypeEnhanceMapKey as keyof typeof outputTypesEnhanceMap;
    const typeConfig = outputTypesEnhanceMap[outputTypeName]!;
    const typeClass = outputTypes[outputTypeName];
    const typeTarget = typeClass.prototype;
    applyTypeClassEnhanceConfig(
      typeConfig,
      typeClass,
      typeTarget,
      outputsInfo[outputTypeName as keyof typeof outputsInfo],
    );
  }
}

type InputTypesNames = keyof typeof inputTypes;

type InputTypeFieldNames<TInput extends InputTypesNames> = Exclude<
  keyof typeof inputTypes[TInput]["prototype"],
  number | symbol
>;

type InputTypeFieldsConfig<
  TInput extends InputTypesNames
  > = FieldsConfig<InputTypeFieldNames<TInput>>;

export type InputTypeConfig<TInput extends InputTypesNames> = {
  class?: ClassDecorator[];
  fields?: InputTypeFieldsConfig<TInput>;
};

export type InputTypesEnhanceMap = {
  [TInput in InputTypesNames]?: InputTypeConfig<TInput>;
};

export function applyInputTypesEnhanceMap(
  inputTypesEnhanceMap: InputTypesEnhanceMap,
) {
  for (const inputTypeEnhanceMapKey of Object.keys(inputTypesEnhanceMap)) {
    const inputTypeName = inputTypeEnhanceMapKey as keyof typeof inputTypesEnhanceMap;
    const typeConfig = inputTypesEnhanceMap[inputTypeName]!;
    const typeClass = inputTypes[inputTypeName];
    const typeTarget = typeClass.prototype;
    applyTypeClassEnhanceConfig(
      typeConfig,
      typeClass,
      typeTarget,
      inputsInfo[inputTypeName as keyof typeof inputsInfo],
    );
  }
}

type ArgsTypesNames = keyof typeof argsTypes;

type ArgFieldNames<TArgsType extends ArgsTypesNames> = Exclude<
  keyof typeof argsTypes[TArgsType]["prototype"],
  number | symbol
>;

type ArgFieldsConfig<
  TArgsType extends ArgsTypesNames
  > = FieldsConfig<ArgFieldNames<TArgsType>>;

export type ArgConfig<TArgsType extends ArgsTypesNames> = {
  class?: ClassDecorator[];
  fields?: ArgFieldsConfig<TArgsType>;
};

export type ArgsTypesEnhanceMap = {
  [TArgsType in ArgsTypesNames]?: ArgConfig<TArgsType>;
};

export function applyArgsTypesEnhanceMap(
  argsTypesEnhanceMap: ArgsTypesEnhanceMap,
) {
  for (const argsTypesEnhanceMapKey of Object.keys(argsTypesEnhanceMap)) {
    const argsTypeName = argsTypesEnhanceMapKey as keyof typeof argsTypesEnhanceMap;
    const typeConfig = argsTypesEnhanceMap[argsTypeName]!;
    const typeClass = argsTypes[argsTypeName];
    const typeTarget = typeClass.prototype;
    applyTypeClassEnhanceConfig(
      typeConfig,
      typeClass,
      typeTarget,
      argsInfo[argsTypeName as keyof typeof argsInfo],
    );
  }
}







