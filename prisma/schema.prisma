generator client {
  provider = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

// generator typegraphql {
//  provider           = "typegraphql-prisma"
//  output             = "../graphql/generated"
// }

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model bbb_meeting {
  id             Int      @id @default(autoincrement())
  createdAt      DateTime @default(now()) @db.Timestamp(6)
  updatedAt      DateTime @default(now()) @db.Timestamp(6)
  meetingID      String   @db.VarChar
  meetingName    String?  @db.VarChar
  attendeePW     String?  @db.VarChar
  moderatorPW    String?  @db.VarChar
  alternativeUrl String?  @db.VarChar
}

model concrete_notification {
  id             Int      @id @default(autoincrement())
  userId         String   @db.VarChar
  notificationID Int
  contextID      String?  @db.VarChar
  context        Json     @db.Json
  sentAt         DateTime @db.Timestamp(6)
  state          Int
  error          String?  @db.VarChar
}

model course {
  id                         Int                          @id @default(autoincrement())
  createdAt                  DateTime                     @default(now()) @db.Timestamp(6)
  updatedAt                  DateTime                     @default(now()) @db.Timestamp(6)
  name                       String                       @db.VarChar
  outline                    String                       @db.VarChar
  description                String                       @db.VarChar
  imageKey                   String?                      @db.VarChar
  category                   course_category_enum
  courseState                course_coursestate_enum      @default(created)
  screeningComment           String?                      @db.VarChar
  publicRanking              Int                          @default(0)
  allowContact               Boolean                      @default(false)
  correspondentId            Int?
  student                    student?                     @relation(fields: [correspondentId], references: [id])
  course_guest               course_guest[]
  course_instructors_student course_instructors_student[]
  course_tags_course_tag     course_tags_course_tag[]
  subcourse                  subcourse[]
}

model course_attendance_log {
  id           Int      @id @default(autoincrement())
  createdAt    DateTime @default(now()) @db.Timestamp(6)
  updatedAt    DateTime @default(now()) @db.Timestamp(6)
  attendedTime Int?
  ip           String?  @db.VarChar
  pupilId      Int?
  lectureId    Int?
  lecture      lecture? @relation(fields: [lectureId], references: [id])
  pupil        pupil?   @relation(fields: [pupilId], references: [id])
}

model course_guest {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @default(now()) @db.Timestamp(6)
  token     String   @unique @db.VarChar
  firstname String   @db.VarChar
  lastname  String   @db.VarChar
  email     String   @db.VarChar
  courseId  Int?
  inviterId Int?
  course    course?  @relation(fields: [courseId], references: [id])
  student   student? @relation(fields: [inviterId], references: [id])
}

model course_instructors_student {
  courseId  Int
  studentId Int
  course    course  @relation(fields: [courseId], references: [id])
  student   student @relation(fields: [studentId], references: [id])

  @@id([courseId, studentId])
  @@index([courseId], name: "IDX_54bce9a9a93ae130beaa70bb2f")
  @@index([studentId], name: "IDX_66b47860afa3098729925338c1")
}

model course_participation_certificate {
  id          Int        @id @default(autoincrement())
  createdAt   DateTime   @default(now()) @db.Timestamp(6)
  updatedAt   DateTime   @default(now()) @db.Timestamp(6)
  issuerId    Int?
  pupilId     Int?
  subcourseId Int?
  student     student?   @relation(fields: [issuerId], references: [id])
  pupil       pupil?     @relation(fields: [pupilId], references: [id])
  subcourse   subcourse? @relation(fields: [subcourseId], references: [id])
}

model course_tag {
  id                     Int                      @id @default(autoincrement())
  identifier             String                   @unique @db.VarChar
  name                   String                   @db.VarChar
  category               String                   @db.VarChar
  course_tags_course_tag course_tags_course_tag[]
}

model course_tags_course_tag {
  courseId    Int
  courseTagId Int
  course      course     @relation(fields: [courseId], references: [id])
  course_tag  course_tag @relation(fields: [courseTagId], references: [id])

  @@id([courseId, courseTagId])
  @@index([courseTagId], name: "IDX_af4499c3ae1153ac06782b2e5b")
  @@index([courseId], name: "IDX_d6261ad9de1fc5f06946095bf8")
}

model expert_data {
  id                                       Int                                        @id @default(autoincrement())
  createdAt                                DateTime                                   @default(now()) @db.Timestamp(6)
  updatedAt                                DateTime                                   @default(now()) @db.Timestamp(6)
  contactEmail                             String                                     @db.VarChar
  description                              String?                                    @db.VarChar
  active                                   Boolean                                    @default(false)
  allowed                                  expert_data_allowed_enum                   @default(pending)
  studentId                                Int?                                       @unique
  student                                  student?                                   @relation(fields: [studentId], references: [id])
  expert_data_expertise_tags_expertise_tag expert_data_expertise_tags_expertise_tag[]
}

model expert_data_expertise_tags_expertise_tag {
  expertDataId   Int
  expertiseTagId Int
  expert_data    expert_data   @relation(fields: [expertDataId], references: [id])
  expertise_tag  expertise_tag @relation(fields: [expertiseTagId], references: [id])

  @@id([expertDataId, expertiseTagId])
  @@index([expertDataId], name: "IDX_73044a211048e72c2026425c81")
  @@index([expertiseTagId], name: "IDX_8a81e80d1d580b868ed36ca123")
}

model expertise_tag {
  id                                       Int                                        @id @default(autoincrement())
  name                                     String                                     @unique @db.VarChar
  expert_data_expertise_tags_expertise_tag expert_data_expertise_tags_expertise_tag[]
}

model instructor_screening {
  id                    Int       @id @default(autoincrement())
  success               Boolean
  comment               String?   @db.VarChar
  knowsCoronaSchoolFrom String?   @db.VarChar
  createdAt             DateTime  @default(now()) @db.Timestamp(6)
  updatedAt             DateTime  @default(now()) @db.Timestamp(6)
  screenerId            Int?
  studentId             Int?      @unique
  screener              screener? @relation(fields: [screenerId], references: [id])
  student               student?  @relation(fields: [studentId], references: [id])
}

model jufo_verification_transmission {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @db.Timestamp(6)
  uuid      String   @db.VarChar
  studentId Int?     @unique
  student   student? @relation(fields: [studentId], references: [id])
}

model lecture {
  id                    Int                     @id @default(autoincrement())
  createdAt             DateTime                @default(now()) @db.Timestamp(6)
  updatedAt             DateTime                @default(now()) @db.Timestamp(6)
  start                 DateTime                @db.Timestamp(6)
  duration              Int
  instructorId          Int?
  subcourseId           Int?
  student               student?                @relation(fields: [instructorId], references: [id])
  subcourse             subcourse?              @relation(fields: [subcourseId], references: [id])
  course_attendance_log course_attendance_log[]
}

model log {
  id        Int              @id @default(autoincrement())
  logtype   log_logtype_enum @default(misc)
  createdAt DateTime         @default(now()) @db.Timestamp(6)
  user      String           @db.VarChar
  data      String           @db.VarChar
}

model match {
  id                    Int               @id @default(autoincrement())
  uuid                  String            @unique @db.VarChar
  dissolved             Boolean           @default(false)
  dissolveReason        Int?
  proposedTime          DateTime?         @db.Timestamp(6)
  createdAt             DateTime          @default(now()) @db.Timestamp(6)
  updatedAt             DateTime          @default(now()) @db.Timestamp(6)
  feedbackToPupilMail   Boolean           @default(false)
  feedbackToStudentMail Boolean           @default(false)
  followUpToPupilMail   Boolean           @default(false)
  followUpToStudentMail Boolean           @default(false)
  source                match_source_enum @default(matchedinternal)
  studentId             Int?
  pupilId               Int?
  pupil                 pupil?            @relation(fields: [pupilId], references: [id])
  student               student?          @relation(fields: [studentId], references: [id])

  @@unique([studentId, pupilId], name: "UQ_MATCH")
}

model mentor {
  id                 Int                     @id @default(autoincrement())
  createdAt          DateTime                @default(now()) @db.Timestamp(6)
  updatedAt          DateTime                @default(now()) @db.Timestamp(6)
  firstname          String?                 @db.VarChar
  lastname           String?                 @db.VarChar
  active             Boolean                 @default(true)
  email              String                  @unique @db.VarChar
  verification       String?                 @unique @db.VarChar
  verifiedAt         DateTime?               @db.Timestamp(6)
  authToken          String?                 @unique @db.VarChar
  authTokenUsed      Boolean                 @default(false)
  authTokenSent      DateTime?               @db.Timestamp(6)
  wix_id             String                  @unique @db.VarChar
  wix_creation_date  DateTime                @db.Timestamp(6)
  division           mentor_division_enum[]
  expertise          mentor_expertise_enum[]
  subjects           String?                 @db.VarChar
  teachingExperience Boolean?
  message            String?                 @db.VarChar
  description        String?                 @db.VarChar
  imageUrl           String?                 @db.VarChar
}

model notification {
  id                Int      @id @default(autoincrement())
  mailjetTemplateId Int?
  description       String   @db.VarChar
  active            Boolean
  recipient         Int
  onActions         String[]
  category          String[]
  cancelledOnAction String[]
  delay             Int?
  interval          Int?
}

model participation_certificate {
  id                Int       @id @default(autoincrement())
  uuid              String    @unique @db.VarChar
  subjects          String    @db.VarChar
  categories        String    @db.VarChar
  certificateDate   DateTime  @default(now()) @db.Timestamp(6)
  startDate         DateTime  @default(now()) @db.Timestamp(6)
  endDate           DateTime  @default(now()) @db.Timestamp(6)
  hoursPerWeek      Decimal   @db.Decimal
  hoursTotal        Decimal   @db.Decimal
  medium            String    @db.VarChar
  ongoingLessons    Boolean   @default(false)
  state             String    @default("manual") @db.VarChar
  signaturePupil    Bytes?
  signatureParent   Bytes?
  signatureLocation String?   @db.VarChar
  signatureDate     DateTime? @db.Timestamp(6)
  studentId         Int?
  pupilId           Int?
  pupil             pupil?    @relation(fields: [pupilId], references: [id])
  student           student?  @relation(fields: [studentId], references: [id])
}

model project_coaching_screening {
  id                    Int       @id @default(autoincrement())
  success               Boolean
  comment               String?   @db.VarChar
  knowsCoronaSchoolFrom String?   @db.VarChar
  createdAt             DateTime  @default(now()) @db.Timestamp(6)
  updatedAt             DateTime  @default(now()) @db.Timestamp(6)
  screenerId            Int?
  studentId             Int?      @unique
  screener              screener? @relation(fields: [screenerId], references: [id])
  student               student?  @relation(fields: [studentId], references: [id])
}

model project_field_with_grade_restriction {
  id           Int                                                    @id @default(autoincrement())
  createdAt    DateTime                                               @default(now()) @db.Timestamp(6)
  updatedAt    DateTime                                               @default(now()) @db.Timestamp(6)
  projectField project_field_with_grade_restriction_projectfield_enum
  min          Int?
  max          Int?
  studentId    Int
  student      student                                                @relation(fields: [studentId], references: [id])

  @@unique([projectField, studentId], name: "UQ_PROJECT_FIELDS")
}

model project_match {
  id             Int      @id @default(autoincrement())
  uuid           String   @unique @db.VarChar
  createdAt      DateTime @default(now()) @db.Timestamp(6)
  updatedAt      DateTime @default(now()) @db.Timestamp(6)
  dissolved      Boolean  @default(false)
  dissolveReason Int?
  studentId      Int?
  pupilId        Int?
  pupil          pupil?   @relation(fields: [pupilId], references: [id])
  student        student? @relation(fields: [studentId], references: [id])

  @@unique([studentId, pupilId], name: "UQ_PJ_MATCH")
}

model pupil {
  id                                           Int                                           @id @default(autoincrement())
  createdAt                                    DateTime                                      @default(now()) @db.Timestamp(6)
  updatedAt                                    DateTime                                      @default(now()) @db.Timestamp(6)
  firstname                                    String?                                       @db.VarChar
  lastname                                     String?                                       @db.VarChar
  active                                       Boolean                                       @default(true)
  email                                        String                                        @unique @db.VarChar
  verification                                 String?                                       @unique @db.VarChar
  verifiedAt                                   DateTime?                                     @db.Timestamp(6)
  authToken                                    String?                                       @unique @db.VarChar
  authTokenUsed                                Boolean                                       @default(false)
  authTokenSent                                DateTime?                                     @db.Timestamp(6)
  wix_id                                       String                                        @unique @db.VarChar
  wix_creation_date                            DateTime                                      @db.Timestamp(6)
  state                                        pupil_state_enum                              @default(other)
  schooltype                                   pupil_schooltype_enum                         @default(other)
  msg                                          String?                                       @db.VarChar
  grade                                        String?                                       @db.VarChar
  newsletter                                   Boolean                                       @default(false)
  isPupil                                      Boolean                                       @default(false)
  subjects                                     String?                                       @db.VarChar
  openMatchRequestCount                        Int                                           @default(1)
  isParticipant                                Boolean                                       @default(true)
  isProjectCoachee                             Boolean                                       @default(false)
  projectFields                                pupil_projectfields_enum[]
  isJufoParticipant                            String                                        @default("unsure") @db.VarChar
  openProjectMatchRequestCount                 Int                                           @default(1)
  projectMemberCount                           Int                                           @default(1)
  languages                                    pupil_languages_enum[]
  learningGermanSince                          pupil_learninggermansince_enum?
  matchingPriority                             Int                                           @default(0)
  lastUpdatedSettingsViaBlocker                DateTime?                                     @db.Timestamp(6)
  teacherEmailAddress                          String?                                       @db.VarChar
  registrationSource                           pupil_registrationsource_enum                 @default(dbgenerated("0"))
  schoolId                                     Int?
  school                                       school?                                       @relation(fields: [schoolId], references: [id])
  course_attendance_log                        course_attendance_log[]
  course_participation_certificate             course_participation_certificate[]
  match                                        match[]
  participation_certificate                    participation_certificate[]
  project_match                                project_match[]
  pupil_tutoring_interest_confirmation_request pupil_tutoring_interest_confirmation_request?
  subcourse_participants_pupil                 subcourse_participants_pupil[]
  subcourse_waiting_list_pupil                 subcourse_waiting_list_pupil[]
}

model pupil_tutoring_interest_confirmation_request {
  id               Int       @id @default(autoincrement())
  createdAt        DateTime  @default(now()) @db.Timestamp(6)
  updatedAt        DateTime  @default(now()) @db.Timestamp(6)
  status           String    @default("pending") @db.VarChar
  token            String    @unique @db.VarChar
  reminderSentDate DateTime? @db.Timestamp(6)
  pupilId          Int?      @unique
  pupil            pupil?    @relation(fields: [pupilId], references: [id])
}

model school {
  id                Int                    @id @default(autoincrement())
  createdAt         DateTime               @default(now()) @db.Timestamp(6)
  updatedAt         DateTime               @default(now()) @db.Timestamp(6)
  name              String                 @db.VarChar
  website           String?                @unique @db.VarChar
  emailDomain       String                 @unique @db.VarChar
  state             school_state_enum?     @default(other)
  schooltype        school_schooltype_enum @default(other)
  activeCooperation Boolean                @default(false)
  pupil             pupil[]
}

model screener {
  id                         Int                          @id @default(autoincrement())
  createdAt                  DateTime                     @default(now()) @db.Timestamp(6)
  updatedAt                  DateTime                     @default(now()) @db.Timestamp(6)
  firstname                  String?                      @db.VarChar
  lastname                   String?                      @db.VarChar
  active                     Boolean                      @default(true)
  email                      String                       @unique @db.VarChar
  verification               String?                      @unique @db.VarChar
  verifiedAt                 DateTime?                    @db.Timestamp(6)
  authToken                  String?                      @unique @db.VarChar
  authTokenUsed              Boolean                      @default(false)
  authTokenSent              DateTime?                    @db.Timestamp(6)
  password                   String                       @db.VarChar
  verified                   Boolean?                     @default(false)
  oldNumberID                Int?                         @unique
  instructor_screening       instructor_screening[]
  project_coaching_screening project_coaching_screening[]
  screening                  screening[]
}

model screening {
  id                    Int       @id @default(autoincrement())
  success               Boolean
  comment               String?   @db.VarChar
  knowsCoronaSchoolFrom String?   @db.VarChar
  createdAt             DateTime  @default(now()) @db.Timestamp(6)
  updatedAt             DateTime  @default(now()) @db.Timestamp(6)
  screenerId            Int?
  studentId             Int?      @unique
  screener              screener? @relation(fields: [screenerId], references: [id])
  student               student?  @relation(fields: [studentId], references: [id])
}

model student {
  id                                        Int                                    @id @default(autoincrement())
  createdAt                                 DateTime                               @default(now()) @db.Timestamp(6)
  updatedAt                                 DateTime                               @default(now()) @db.Timestamp(6)
  firstname                                 String?                                @db.VarChar
  lastname                                  String?                                @db.VarChar
  active                                    Boolean                                @default(true)
  email                                     String                                 @unique @db.VarChar
  verification                              String?                                @unique @db.VarChar
  verifiedAt                                DateTime?                              @db.Timestamp(6)
  authToken                                 String?                                @unique @db.VarChar
  authTokenUsed                             Boolean                                @default(false)
  authTokenSent                             DateTime?                              @db.Timestamp(6)
  wix_id                                    String                                 @unique @db.VarChar
  wix_creation_date                         DateTime                               @db.Timestamp(6)
  phone                                     String?                                @db.VarChar
  feedback                                  String?                                @db.VarChar
  newsletter                                Boolean                                @default(false)
  isStudent                                 Boolean                                @default(false)
  subjects                                  String?                                @db.VarChar
  openMatchRequestCount                     Int                                    @default(1)
  isInstructor                              Boolean                                @default(false)
  msg                                       String?                                @db.VarChar
  state                                     student_state_enum?                    @default(other)
  university                                String?                                @db.VarChar
  module                                    student_module_enum?
  moduleHours                               Int?
  isProjectCoach                            Boolean                                @default(false)
  wasJufoParticipant                        String?                                @db.VarChar
  hasJufoCertificate                        Boolean?
  jufoPastParticipationInfo                 String?                                @db.VarChar
  jufoPastParticipationConfirmed            Boolean?
  isUniversityStudent                       Boolean?
  openProjectMatchRequestCount              Int                                    @default(1)
  sentJufoAlumniScreeningReminderCount      Int                                    @default(0)
  lastSentJufoAlumniScreeningInvitationDate DateTime?                              @db.Timestamp(6)
  supportsInDaZ                             Boolean?
  languages                                 student_languages_enum[]
  sentScreeningReminderCount                Int                                    @default(0)
  lastSentScreeningInvitationDate           DateTime?                              @db.Timestamp(6)
  sentInstructorScreeningReminderCount      Int                                    @default(0)
  lastSentInstructorScreeningInvitationDate DateTime?                              @db.Timestamp(6)
  lastUpdatedSettingsViaBlocker             DateTime?                              @db.Timestamp(6)
  registrationSource                        student_registrationsource_enum        @default(dbgenerated("0"))
  course                                    course[]
  course_guest                              course_guest[]
  course_instructors_student                course_instructors_student[]
  course_participation_certificate          course_participation_certificate[]
  expert_data                               expert_data?
  instructor_screening                      instructor_screening?
  jufo_verification_transmission            jufo_verification_transmission?
  lecture                                   lecture[]
  match                                     match[]
  participation_certificate                 participation_certificate[]
  project_coaching_screening                project_coaching_screening?
  project_field_with_grade_restriction      project_field_with_grade_restriction[]
  project_match                             project_match[]
  screening                                 screening?
  subcourse_instructors_student             subcourse_instructors_student[]
}

model subcourse {
  id                               Int                                @id @default(autoincrement())
  createdAt                        DateTime                           @default(now()) @db.Timestamp(6)
  updatedAt                        DateTime                           @default(now()) @db.Timestamp(6)
  minGrade                         Int
  maxGrade                         Int
  maxParticipants                  Int
  joinAfterStart                   Boolean                            @default(false)
  published                        Boolean
  cancelled                        Boolean                            @default(false)
  courseId                         Int?
  course                           course?                            @relation(fields: [courseId], references: [id])
  course_participation_certificate course_participation_certificate[]
  lecture                          lecture[]
  subcourse_instructors_student    subcourse_instructors_student[]
  subcourse_participants_pupil     subcourse_participants_pupil[]
  subcourse_waiting_list_pupil     subcourse_waiting_list_pupil[]
}

model subcourse_instructors_student {
  subcourseId Int
  studentId   Int
  student     student   @relation(fields: [studentId], references: [id])
  subcourse   subcourse @relation(fields: [subcourseId], references: [id])

  @@id([subcourseId, studentId])
  @@index([subcourseId], name: "IDX_3f0c594b9393bf4ca9ed368196")
  @@index([studentId], name: "IDX_b36e4eeff8040a09cc811dbb26")
}

model subcourse_participants_pupil {
  subcourseId Int
  pupilId     Int
  pupil       pupil     @relation(fields: [pupilId], references: [id])
  subcourse   subcourse @relation(fields: [subcourseId], references: [id])

  @@id([subcourseId, pupilId])
  @@index([pupilId], name: "IDX_47d9d98b6496554165e08ff61d")
  @@index([subcourseId], name: "IDX_cde91c063947d1302d50c906dc")
}

model subcourse_waiting_list_pupil {
  subcourseId Int
  pupilId     Int
  pupil       pupil     @relation(fields: [pupilId], references: [id])
  subcourse   subcourse @relation(fields: [subcourseId], references: [id])

  @@id([subcourseId, pupilId])
  @@index([pupilId], name: "IDX_3bd25f377afc44f574f7ac3d09")
  @@index([subcourseId], name: "IDX_df9eb9663f8085da35f7ca5547")
}


model certificate_of_conduct {
    id                               Int                                @id @default(autoincrement())
    createdAt                        DateTime                           @default(now()) @db.Timestamp(6)
    updatedAt                        DateTime                           @default(now()) @db.Timestamp(6)
    dateOfInspection                 DateTime
    dateOfIssue                      DateTime
    criminalRecords                  Boolean
    inspectingScreenerId             Int?
    studentId                        Int?                                @unique
    inspectingScreener               screener?                           @relation(fields: [screenerId], references: [id])
    student                          student?                            @relation(fields: [studentId], references: [id])
}


enum course_category_enum {
  revision
  club
  coaching
}

enum course_coursestate_enum {
  created
  submitted
  allowed
  denied
  cancelled
}

enum expert_data_allowed_enum {
  pending
  yes
  no
}

enum log_logtype_enum {
  misc
  verificationRequets
  verified
  matchDissolve
  projectMatchDissolve
  fetchedFromWix
  deActivate
  updatePersonal
  updateSubjects
  updateProjectFields
  accessedByScreener
  updatedByScreener
  updateStudentDescription
  createdCourse
  certificateRequest
  cancelledCourse
  cancelledSubcourse
  createdCourseAttendanceLog
  contactMentor
  bbbMeeting
  contactExpert
  participantJoinedCourse
  participantLeftCourse
  participantJoinedWaitingList
  participantLeftWaitingList
  userAccessedCourseWhileAuthenticated
  instructorIssuedCertificate
  pupilInterestConfirmationRequestSent
  pupilInterestConfirmationRequestReminderSent
  pupilInterestConfirmationRequestStatusChange
}

enum match_source_enum {
  imported
  matchedexternal
  matchedinternal
}

enum mentor_division_enum {
  facebook
  email
  events
  video
  supervision
}

enum mentor_expertise_enum {
  language_difficulties_and_communication @map("language difficulties and communication")
  specialized_expertise_in_subjects @map("specialized expertise in subjects")
  educational_and_didactic_expertise @map("educational and didactic expertise")
  technical_support @map("technical support")
  self_organization @map("self-organization")
}

enum project_field_with_grade_restriction_projectfield_enum {
  Arbeitswelt
  Biologie
  Chemie
  Geo_und_Raumwissenschaften @map("Geo-und-Raumwissenschaften")
  Mathematik_Informatik @map("Mathematik/Informatik")
  Physik
  Technik
}

enum pupil_languages_enum {
  Albanisch
  Arabisch
  Armenisch
  Aserbaidschanisch
  Bosnisch
  Bulgarisch
  Chinesisch
  Deutsch
  Englisch
  Franz_sisch @map("Französisch")
  Italienisch
  Kasachisch
  Kurdisch
  Polnisch
  Portugiesisch
  Russisch
  T_rkisch @map("Türkisch")
  Spanisch
  Ukrainisch
  Vietnamesisch
  Andere
}

enum pupil_learninggermansince_enum {
  more_than_four @map(">4")
  two_to_four @map("2-4")
  one_to_two @map("1-2")
  less_than_one @map("<1")
}

enum pupil_projectfields_enum {
  Arbeitswelt
  Biologie
  Chemie
  Geo_und_Raumwissenschaften @map("Geo-und-Raumwissenschaften")
  Mathematik_Informatik @map("Mathematik/Informatik")
  Physik
  Technik
}

enum pupil_registrationsource_enum {
  normal @map("0")
  cooperation @map("1")
  drehtuer @map("2")
  other @map("3")
}

enum pupil_schooltype_enum {
  grundschule
  gesamtschule
  hauptschule
  realschule
  gymnasium
  f_rderschule @map("förderschule")
  berufsschule
  other
}

enum pupil_state_enum {
  bw
  by
  be
  bb
  hb
  hh
  he
  mv
  ni
  nw
  rp
  sl
  sn
  st
  sh
  th
  other
}

enum school_schooltype_enum {
  grundschule
  gesamtschule
  hauptschule
  realschule
  gymnasium
  f_rderschule @map("förderschule")
  berufsschule
  other
}

enum school_state_enum {
  bw
  by
  be
  bb
  hb
  hh
  he
  mv
  ni
  nw
  rp
  sl
  sn
  st
  sh
  th
  other
}

enum student_languages_enum {
  Albanisch
  Arabisch
  Armenisch
  Aserbaidschanisch
  Bosnisch
  Bulgarisch
  Chinesisch
  Deutsch
  Englisch
  Franz_sisch @map("Französisch")
  Italienisch
  Kasachisch
  Kurdisch
  Polnisch
  Portugiesisch
  Russisch
  T_rkisch @map("Türkisch")
  Spanisch
  Ukrainisch
  Vietnamesisch
  Andere
}

enum student_module_enum {
  internship
  seminar
  other
}

enum student_registrationsource_enum {
  normal @map("0")
  cooperation @map("1")
  drehtuer @map("2")
  other @map("3")
}

enum student_state_enum {
  bw
  by
  be
  bb
  hb
  hh
  he
  mv
  ni
  nw
  rp
  sl
  sn
  st
  sh
  th
  other
}
